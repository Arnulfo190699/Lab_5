

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 22:11:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0003                     __pstrings:	
   381  0003                     stringtab:	
   382  0003                     __stringtab:	
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385  0003  1BFF               	btfsc	btemp+1,7
   386  0004  280D               	ljmp	stringcode
   387  0005  1383               	bcf	3,7
   388  0006  187F               	btfsc	btemp+1,0
   389  0007  1783               	bsf	3,7
   390  0008  0800               	movf	0,w
   391  0009  0A84               	incf	4,f
   392  000A  1903               	skipnz
   393  000B  0AFF               	incf	btemp+1,f
   394  000C  0008               	return
   395  000D                     stringcode:	
   396  000D                     stringdir:	
   397  000D  3000               	movlw	high stringdir
   398  000E  008A               	movwf	10
   399  000F  0804               	movf	4,w
   400  0010  0A84               	incf	4,f
   401  0011  0782               	addwf	2,f
   402  0012                     __stringbase:	
   403  0012  3400               	retlw	0
   404  0013                     __end_of__stringtab:	
   405  0013                     _dpowers:	
   406  0013  3401               	retlw	1
   407  0014  3400               	retlw	0
   408  0015  340A               	retlw	10
   409  0016  3400               	retlw	0
   410  0017  3464               	retlw	100
   411  0018  3400               	retlw	0
   412  0019  34E8               	retlw	232
   413  001A  3403               	retlw	3
   414  001B  3410               	retlw	16
   415  001C  3427               	retlw	39
   416  001D                     __end_of_dpowers:	
   417  0007                     _PORTC	set	7
   418  0006                     _PORTB	set	6
   419  0005                     _PORTA	set	5
   420  0008                     _PORTD	set	8
   421  0006                     _PORTBbits	set	6
   422  0013                     _SSPBUF	set	19
   423  0014                     _SSPCON	set	20
   424  0063                     _SSPIF	set	99
   425  005E                     _PEIE	set	94
   426  005F                     _GIE	set	95
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0086                     _TRISB	set	134
   430  0085                     _TRISA	set	133
   431  0091                     _SSPCON2bits	set	145
   432  0087                     _TRISCbits	set	135
   433  0094                     _SSPSTAT	set	148
   434  0093                     _SSPADD	set	147
   435  0091                     _SSPCON2	set	145
   436  0463                     _SSPIE	set	1123
   437  043C                     _TRISC4	set	1084
   438  043B                     _TRISC3	set	1083
   439  0188                     _ANSEL	set	392
   440  001D                     STR_2:	
   441  001D  3453               	retlw	83	;'S'
   442  001E  3431               	retlw	49	;'1'
   443  001F  3400               	retlw	0
   444  0020                     STR_3:	
   445  0020  3453               	retlw	83	;'S'
   446  0021  3432               	retlw	50	;'2'
   447  0022  3400               	retlw	0
   448  0023                     STR_4:	
   449  0023  3453               	retlw	83	;'S'
   450  0024  3433               	retlw	51	;'3'
   451  0025  3400               	retlw	0
   452  0026                     STR_1:	
   453  0026  3425               	retlw	37	;'%'
   454  0027  3464               	retlw	100	;'d'
   455  0028  3400               	retlw	0
   456  0029                     STR_5:	
   457  0029  3430               	retlw	48	;'0'
   458  002A  3400               	retlw	0
   459                           
   460                           ; #config settings
   461  0000                     
   462                           	psect	cinit
   463  07F5                     start_initialization:	
   464  07F5                     __initialization:	
   465                           
   466                           ; Clear objects allocated to BANK0
   467  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   468  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   469  07F7  01B8               	clrf	__pbssBANK0& (0+127)
   470  07F8  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   471  07F9  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   472  07FA  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   473  07FB  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   474  07FC                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  07FC                     __end_of__initialization:	
   478  07FC  0183               	clrf	3
   479  07FD  120A  118A  2E8C   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssBANK0
   482  0038                     __pbssBANK0:	
   483  0038                     _DEC_2:	
   484  0038                     	ds	1
   485  0039                     _DEC_1:	
   486  0039                     	ds	1
   487  003A                     _ENT_1:	
   488  003A                     	ds	1
   489  003B                     _VAL_2:	
   490  003B                     	ds	1
   491  003C                     _VAL_1:	
   492  003C                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_Lcd_Cmd:	
   497  0070                     ??_Lcd_Cmd:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_I2C_Master_Wait:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_I2C_Master_Wait:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_I2C_Master_Start:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_I2C_Master_Start:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_I2C_Master_Stop:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_I2C_Master_Stop:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_I2C_Master_Write:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_initLCD:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Lcd_Clear:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_Lcd_Write_Char:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_Lcd_Write_Char:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Lcd_Write_Int:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?___bmul:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_I2C_Master_Read:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?___wmul:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     ?___lwdiv:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     ?___lldiv:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ___bmul@multiplicand:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0070                     I2C_Master_Write@d:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     I2C_Master_Read@a:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ___wmul@multiplier:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ___lwdiv@divisor:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ___lldiv@divisor:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574  0070                     	ds	1
   575  0071                     ??___bmul:	
   576                           
   577                           ; 1 bytes @ 0x1
   578  0071                     	ds	1
   579  0072                     ??_I2C_Master_Write:	
   580  0072                     ??_I2C_Master_Read:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     Lcd_Cmd@command:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     Lcd_Write_Char@var:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     ___bmul@product:	
   590                           ; 1 bytes @ 0x2
   591                           
   592  0072                     ___wmul@multiplicand:	
   593                           ; 1 bytes @ 0x2
   594                           
   595  0072                     ___lwdiv@dividend:	
   596                           ; 2 bytes @ 0x2
   597                           
   598                           
   599                           ; 2 bytes @ 0x2
   600  0072                     	ds	1
   601  0073                     ??_initLCD:	
   602  0073                     ??_Lcd_Clear:	
   603                           ; 1 bytes @ 0x3
   604                           
   605  0073                     ?_Lcd_Set_Cursor:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     ?_Lcd_Write_String:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     Lcd_Set_Cursor@posy:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ___bmul@multiplier:	
   615                           ; 1 bytes @ 0x3
   616                           
   617  0073                     Lcd_Write_String@var:	
   618                           ; 1 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622  0073                     	ds	1
   623  0074                     ??_Lcd_Set_Cursor:	
   624  0074                     ??___wmul:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ??___lwdiv:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     Lcd_Set_Cursor@posx:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     I2C_Master_Read@temp:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ___wmul@product:	
   637                           ; 2 bytes @ 0x4
   638                           
   639  0074                     ___lldiv@dividend:	
   640                           ; 2 bytes @ 0x4
   641                           
   642                           
   643                           ; 4 bytes @ 0x4
   644  0074                     	ds	1
   645  0075                     ??_Lcd_Write_String:	
   646  0075                     ___lwdiv@quotient:	
   647                           ; 1 bytes @ 0x5
   648                           
   649                           
   650                           ; 2 bytes @ 0x5
   651  0075                     	ds	1
   652  0076                     ?___awdiv:	
   653  0076                     ___awdiv@divisor:	
   654                           ; 2 bytes @ 0x6
   655                           
   656                           
   657                           ; 2 bytes @ 0x6
   658  0076                     	ds	1
   659  0077                     ___lwdiv@counter:	
   660                           
   661                           ; 1 bytes @ 0x7
   662  0077                     	ds	1
   663  0078                     ??___lldiv:	
   664  0078                     ?___lwmod:	
   665                           ; 1 bytes @ 0x8
   666                           
   667  0078                     Lcd_Write_String@i:	
   668                           ; 2 bytes @ 0x8
   669                           
   670  0078                     ___awdiv@dividend:	
   671                           ; 2 bytes @ 0x8
   672                           
   673  0078                     ___lwmod@divisor:	
   674                           ; 2 bytes @ 0x8
   675                           
   676                           
   677                           ; 2 bytes @ 0x8
   678  0078                     	ds	1
   679  0079                     ___lldiv@quotient:	
   680                           
   681                           ; 4 bytes @ 0x9
   682  0079                     	ds	1
   683  007A                     ??___awdiv:	
   684  007A                     ___lwmod@dividend:	
   685                           ; 1 bytes @ 0xA
   686                           
   687                           
   688                           ; 2 bytes @ 0xA
   689  007A                     	ds	2
   690  007C                     ??___lwmod:	
   691                           
   692                           ; 1 bytes @ 0xC
   693  007C                     	ds	1
   694  007D                     ___lldiv@counter:	
   695  007D                     ___lwmod@counter:	
   696                           ; 1 bytes @ 0xD
   697                           
   698                           
   699                           ; 1 bytes @ 0xD
   700  007D                     	ds	1
   701                           
   702                           	psect	cstackBANK0
   703  0020                     __pcstackBANK0:	
   704  0020                     ?_I2C_Master_Init:	
   705  0020                     ?_sprintf:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     sprintf@f:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0020                     ___awdiv@counter:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     I2C_Master_Init@c:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719  0020                     	ds	1
   720  0021                     ___awdiv@sign:	
   721                           
   722                           ; 1 bytes @ 0x1
   723  0021                     	ds	1
   724  0022                     ___awdiv@quotient:	
   725                           
   726                           ; 2 bytes @ 0x2
   727  0022                     	ds	1
   728  0023                     ??_sprintf:	
   729                           
   730                           ; 1 bytes @ 0x3
   731  0023                     	ds	1
   732  0024                     ??_I2C_Master_Init:	
   733                           
   734                           ; 1 bytes @ 0x4
   735  0024                     	ds	2
   736  0026                     sprintf@ap:	
   737                           
   738                           ; 1 bytes @ 0x6
   739  0026                     	ds	1
   740  0027                     sprintf@flag:	
   741                           
   742                           ; 1 bytes @ 0x7
   743  0027                     	ds	1
   744  0028                     sprintf@prec:	
   745                           
   746                           ; 1 bytes @ 0x8
   747  0028                     	ds	1
   748  0029                     sprintf@val:	
   749                           
   750                           ; 2 bytes @ 0x9
   751  0029                     	ds	2
   752  002B                     sprintf@sp:	
   753                           
   754                           ; 1 bytes @ 0xB
   755  002B                     	ds	1
   756  002C                     sprintf@c:	
   757                           
   758                           ; 1 bytes @ 0xC
   759  002C                     	ds	1
   760  002D                     ??_Lcd_Write_Int:	
   761                           
   762                           ; 1 bytes @ 0xD
   763  002D                     	ds	3
   764  0030                     Lcd_Write_Int@buffer:	
   765                           
   766                           ; 4 bytes @ 0x10
   767  0030                     	ds	4
   768  0034                     Lcd_Write_Int@numero:	
   769                           
   770                           ; 1 bytes @ 0x14
   771  0034                     	ds	1
   772  0035                     ??_main:	
   773                           
   774                           ; 1 bytes @ 0x15
   775  0035                     	ds	3
   776                           
   777                           	psect	maintext
   778  068C                     __pmaintext:	
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 47 in file "Master.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       3       0       0       0
   801 ;;      Totals:         0       3       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		_I2C_Master_Init
   806 ;;		_I2C_Master_Read
   807 ;;		_I2C_Master_Start
   808 ;;		_I2C_Master_Stop
   809 ;;		_I2C_Master_Write
   810 ;;		_Lcd_Clear
   811 ;;		_Lcd_Set_Cursor
   812 ;;		_Lcd_Write_Char
   813 ;;		_Lcd_Write_Int
   814 ;;		_Lcd_Write_String
   815 ;;		___awdiv
   816 ;;		___bmul
   817 ;;		___wmul
   818 ;;		_initLCD
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _main
   826  068C                     _main:	
   827  068C                     l1523:	
   828                           ;incstack = 0
   829                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   830                           
   831                           
   832                           ;Master.c: 50:     TRISA = 0b11111111;
   833  068C  30FF               	movlw	255
   834  068D  1683               	bsf	3,5	;RP0=1, select bank1
   835  068E  1303               	bcf	3,6	;RP1=0, select bank1
   836  068F  0085               	movwf	5	;volatile
   837  0690                     l1525:	
   838                           
   839                           ;Master.c: 51:     TRISB = 0;
   840  0690  0186               	clrf	6	;volatile
   841  0691                     l1527:	
   842                           
   843                           ;Master.c: 52:     TRISC = 0;
   844  0691  0187               	clrf	7	;volatile
   845  0692                     l1529:	
   846                           
   847                           ;Master.c: 53:     TRISD = 0;
   848  0692  0188               	clrf	8	;volatile
   849  0693                     l1531:	
   850                           
   851                           ;Master.c: 55:     ANSEL = 0;
   852  0693  1683               	bsf	3,5	;RP0=1, select bank3
   853  0694  1703               	bsf	3,6	;RP1=1, select bank3
   854  0695  0188               	clrf	8	;volatile
   855  0696                     l1533:	
   856                           
   857                           ;Master.c: 57:     PORTA = 0;
   858  0696  1283               	bcf	3,5	;RP0=0, select bank0
   859  0697  1303               	bcf	3,6	;RP1=0, select bank0
   860  0698  0185               	clrf	5	;volatile
   861  0699                     l1535:	
   862                           
   863                           ;Master.c: 58:     PORTB = 0;
   864  0699  0186               	clrf	6	;volatile
   865  069A                     l1537:	
   866                           
   867                           ;Master.c: 59:     PORTC = 0;
   868  069A  0187               	clrf	7	;volatile
   869  069B                     l1539:	
   870                           
   871                           ;Master.c: 60:     PORTD = 0;
   872  069B  0188               	clrf	8	;volatile
   873  069C                     l1541:	
   874                           
   875                           ;Master.c: 63:     initLCD();
   876  069C  120A  118A  2486  120A  118A  	fcall	_initLCD
   877  06A1                     l1543:	
   878                           
   879                           ;Master.c: 64:     Lcd_Clear();
   880  06A1  120A  118A  2295  120A  118A  	fcall	_Lcd_Clear
   881  06A6                     l1545:	
   882                           
   883                           ;Master.c: 65:     I2C_Master_Init(100000);
   884  06A6  3000               	movlw	0
   885  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   886  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   887  06A9  00A3               	movwf	I2C_Master_Init@c+3
   888  06AA  3001               	movlw	1
   889  06AB  00A2               	movwf	I2C_Master_Init@c+2
   890  06AC  3086               	movlw	134
   891  06AD  00A1               	movwf	I2C_Master_Init@c+1
   892  06AE  30A0               	movlw	160
   893  06AF  00A0               	movwf	I2C_Master_Init@c
   894  06B0  120A  118A  238E  120A  118A  	fcall	_I2C_Master_Init
   895  06B5                     l1547:	
   896                           
   897                           ;Master.c: 66:     Lcd_Clear();
   898  06B5  120A  118A  2295  120A  118A  	fcall	_Lcd_Clear
   899  06BA                     l1549:	
   900                           
   901                           ;Master.c: 67:     Lcd_Set_Cursor(1,1);
   902  06BA  01F3               	clrf	Lcd_Set_Cursor@posy
   903  06BB  0AF3               	incf	Lcd_Set_Cursor@posy,f
   904  06BC  3001               	movlw	1
   905  06BD  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   906  06C2                     l1551:	
   907                           
   908                           ;Master.c: 68:     Lcd_Write_String ("S1");
   909  06C2  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   910  06C3  00F3               	movwf	Lcd_Write_String@var
   911  06C4  3080               	movlw	128
   912  06C5  00F4               	movwf	Lcd_Write_String@var+1
   913  06C6  120A  118A  2400  120A  118A  	fcall	_Lcd_Write_String
   914  06CB                     l1553:	
   915                           
   916                           ;Master.c: 69:     Lcd_Set_Cursor(7,1);
   917  06CB  01F3               	clrf	Lcd_Set_Cursor@posy
   918  06CC  0AF3               	incf	Lcd_Set_Cursor@posy,f
   919  06CD  3007               	movlw	7
   920  06CE  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   921  06D3                     l1555:	
   922                           
   923                           ;Master.c: 70:     Lcd_Write_String ("S2");
   924  06D3  300E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   925  06D4  00F3               	movwf	Lcd_Write_String@var
   926  06D5  3080               	movlw	128
   927  06D6  00F4               	movwf	Lcd_Write_String@var+1
   928  06D7  120A  118A  2400  120A  118A  	fcall	_Lcd_Write_String
   929  06DC                     l1557:	
   930                           
   931                           ;Master.c: 71:     Lcd_Set_Cursor(13,1);
   932  06DC  01F3               	clrf	Lcd_Set_Cursor@posy
   933  06DD  0AF3               	incf	Lcd_Set_Cursor@posy,f
   934  06DE  300D               	movlw	13
   935  06DF  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   936  06E4                     l1559:	
   937                           
   938                           ;Master.c: 72:     Lcd_Write_String ("S3");
   939  06E4  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   940  06E5  00F3               	movwf	Lcd_Write_String@var
   941  06E6  3080               	movlw	128
   942  06E7  00F4               	movwf	Lcd_Write_String@var+1
   943  06E8  120A  118A  2400  120A  118A  	fcall	_Lcd_Write_String
   944  06ED                     l1561:	
   945                           
   946                           ;Master.c: 76:         I2C_Master_Start();
   947  06ED  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Start
   948  06F2                     l1563:	
   949                           
   950                           ;Master.c: 77:         I2C_Master_Write(0x51);
   951  06F2  3051               	movlw	81
   952  06F3  00F0               	movwf	I2C_Master_Write@d
   953  06F4  3000               	movlw	0
   954  06F5  00F1               	movwf	I2C_Master_Write@d+1
   955  06F6  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Write
   956  06FB                     l1565:	
   957                           
   958                           ;Master.c: 78:         VAL_1 = I2C_Master_Read(0);
   959  06FB  3000               	movlw	0
   960  06FC  00F0               	movwf	I2C_Master_Read@a
   961  06FD  00F1               	movwf	I2C_Master_Read@a+1
   962  06FE  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
   963  0703  0870               	movf	?_I2C_Master_Read,w
   964  0704  1283               	bcf	3,5	;RP0=0, select bank0
   965  0705  1303               	bcf	3,6	;RP1=0, select bank0
   966  0706  00B5               	movwf	??_main
   967  0707  0835               	movf	??_main,w
   968  0708  00BC               	movwf	_VAL_1
   969  0709                     l1567:	
   970                           
   971                           ;Master.c: 79:         I2C_Master_Stop();
   972  0709  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Stop
   973  070E                     l1569:	
   974                           
   975                           ;Master.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
   976  070E  300D               	movlw	13
   977  070F  1283               	bcf	3,5	;RP0=0, select bank0
   978  0710  1303               	bcf	3,6	;RP1=0, select bank0
   979  0711  00B6               	movwf	??_main+1
   980  0712  30FB               	movlw	251
   981  0713  00B5               	movwf	??_main
   982  0714                     u1097:	
   983  0714  0BB5               	decfsz	??_main,f
   984  0715  2F14               	goto	u1097
   985  0716  0BB6               	decfsz	??_main+1,f
   986  0717  2F14               	goto	u1097
   987  0718                     l1571:	
   988                           
   989                           ;Master.c: 82:         I2C_Master_Start();
   990  0718  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Start
   991  071D                     l1573:	
   992                           
   993                           ;Master.c: 83:         I2C_Master_Write(0x61);
   994  071D  3061               	movlw	97
   995  071E  00F0               	movwf	I2C_Master_Write@d
   996  071F  3000               	movlw	0
   997  0720  00F1               	movwf	I2C_Master_Write@d+1
   998  0721  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Write
   999  0726                     l1575:	
  1000                           
  1001                           ;Master.c: 84:         VAL_2 = I2C_Master_Read(0);
  1002  0726  3000               	movlw	0
  1003  0727  00F0               	movwf	I2C_Master_Read@a
  1004  0728  00F1               	movwf	I2C_Master_Read@a+1
  1005  0729  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1006  072E  0870               	movf	?_I2C_Master_Read,w
  1007  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0731  00B5               	movwf	??_main
  1010  0732  0835               	movf	??_main,w
  1011  0733  00BB               	movwf	_VAL_2
  1012  0734                     l1577:	
  1013                           
  1014                           ;Master.c: 85:         I2C_Master_Stop();
  1015  0734  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Stop
  1016  0739                     l1579:	
  1017                           
  1018                           ;Master.c: 86:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1019  0739  300D               	movlw	13
  1020  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1021  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1022  073C  00B6               	movwf	??_main+1
  1023  073D  30FB               	movlw	251
  1024  073E  00B5               	movwf	??_main
  1025  073F                     u1107:	
  1026  073F  0BB5               	decfsz	??_main,f
  1027  0740  2F3F               	goto	u1107
  1028  0741  0BB6               	decfsz	??_main+1,f
  1029  0742  2F3F               	goto	u1107
  1030  0743                     l1581:	
  1031                           
  1032                           ;Master.c: 88:         VAL_1 = VAL_1 * 5/255;
  1033  0743  30FF               	movlw	255
  1034  0744  00F6               	movwf	___awdiv@divisor
  1035  0745  3000               	movlw	0
  1036  0746  00F7               	movwf	___awdiv@divisor+1
  1037  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0749  083C               	movf	_VAL_1,w
  1040  074A  00B5               	movwf	??_main
  1041  074B  01B6               	clrf	??_main+1
  1042  074C  0835               	movf	??_main,w
  1043  074D  00F0               	movwf	___wmul@multiplier
  1044  074E  0836               	movf	??_main+1,w
  1045  074F  00F1               	movwf	___wmul@multiplier+1
  1046  0750  3005               	movlw	5
  1047  0751  00F2               	movwf	___wmul@multiplicand
  1048  0752  3000               	movlw	0
  1049  0753  00F3               	movwf	___wmul@multiplicand+1
  1050  0754  120A  118A  233B  120A  118A  	fcall	___wmul
  1051  0759  0871               	movf	?___wmul+1,w
  1052  075A  00F9               	movwf	___awdiv@dividend+1
  1053  075B  0870               	movf	?___wmul,w
  1054  075C  00F8               	movwf	___awdiv@dividend
  1055  075D  120A  118A  253B  120A  118A  	fcall	___awdiv
  1056  0762  0876               	movf	?___awdiv,w
  1057  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0765  00B7               	movwf	??_main+2
  1060  0766  0837               	movf	??_main+2,w
  1061  0767  00BC               	movwf	_VAL_1
  1062  0768                     l1583:	
  1063                           
  1064                           ;Master.c: 89:         ENT_1 = VAL_1;
  1065  0768  083C               	movf	_VAL_1,w
  1066  0769  00B5               	movwf	??_main
  1067  076A  0835               	movf	??_main,w
  1068  076B  00BA               	movwf	_ENT_1
  1069  076C                     l1585:	
  1070                           
  1071                           ;Master.c: 90:         DEC_2 = (VAL_1 - ENT_1)*100;
  1072  076C  3064               	movlw	100
  1073  076D  00B5               	movwf	??_main
  1074  076E  0835               	movf	??_main,w
  1075  076F  00F0               	movwf	___bmul@multiplicand
  1076  0770  083A               	movf	_ENT_1,w
  1077  0771  023C               	subwf	_VAL_1,w
  1078  0772  120A  118A  22ED  120A  118A  	fcall	___bmul
  1079  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0779  00B6               	movwf	??_main+1
  1082  077A  0836               	movf	??_main+1,w
  1083  077B  00B8               	movwf	_DEC_2
  1084  077C                     l1587:	
  1085                           
  1086                           ;Master.c: 91:         DEC_1= DEC_2;
  1087  077C  0838               	movf	_DEC_2,w
  1088  077D  00B5               	movwf	??_main
  1089  077E  0835               	movf	??_main,w
  1090  077F  00B9               	movwf	_DEC_1
  1091  0780                     l1589:	
  1092                           
  1093                           ;Master.c: 94:         Lcd_Set_Cursor(1,2);
  1094  0780  3002               	movlw	2
  1095  0781  00B5               	movwf	??_main
  1096  0782  0835               	movf	??_main,w
  1097  0783  00F3               	movwf	Lcd_Set_Cursor@posy
  1098  0784  3001               	movlw	1
  1099  0785  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
  1100  078A                     l1591:	
  1101                           
  1102                           ;Master.c: 95:         Lcd_Write_Int(ENT_1);
  1103  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1104  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1105  078C  083A               	movf	_ENT_1,w
  1106  078D  120A  118A  231D  120A  118A  	fcall	_Lcd_Write_Int
  1107  0792                     l1593:	
  1108                           
  1109                           ;Master.c: 96:         Lcd_Write_Char('.');
  1110  0792  302E               	movlw	46
  1111  0793  120A  118A  22D9  120A  118A  	fcall	_Lcd_Write_Char
  1112  0798                     l1595:	
  1113                           
  1114                           ;Master.c: 97:         if (DEC_1 >= 10){
  1115  0798  300A               	movlw	10
  1116  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1117  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1118  079B  0239               	subwf	_DEC_1,w
  1119  079C  1C03               	skipc
  1120  079D  2F9F               	goto	u1071
  1121  079E  2FA0               	goto	u1070
  1122  079F                     u1071:	
  1123  079F  2FA7               	goto	l1599
  1124  07A0                     u1070:	
  1125  07A0                     l1597:	
  1126                           
  1127                           ;Master.c: 98:             Lcd_Write_Int(DEC_1);
  1128  07A0  0839               	movf	_DEC_1,w
  1129  07A1  120A  118A  231D  120A  118A  	fcall	_Lcd_Write_Int
  1130                           
  1131                           ;Master.c: 99:         }else{
  1132  07A6  2FB5               	goto	l1603
  1133  07A7                     l1599:	
  1134                           
  1135                           ;Master.c: 100:             Lcd_Write_Char('0');
  1136  07A7  3030               	movlw	48
  1137  07A8  120A  118A  22D9  120A  118A  	fcall	_Lcd_Write_Char
  1138  07AD                     l1601:	
  1139                           
  1140                           ;Master.c: 101:             Lcd_Write_Int(DEC_1);
  1141  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1142  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1143  07AF  0839               	movf	_DEC_1,w
  1144  07B0  120A  118A  231D  120A  118A  	fcall	_Lcd_Write_Int
  1145  07B5                     l1603:	
  1146                           
  1147                           ;Master.c: 103:         Lcd_Write_Char('V');
  1148  07B5  3056               	movlw	86
  1149  07B6  120A  118A  22D9  120A  118A  	fcall	_Lcd_Write_Char
  1150  07BB                     l1605:	
  1151                           
  1152                           ;Master.c: 105:         if(VAL_2 < 10){
  1153  07BB  300A               	movlw	10
  1154  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1155  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1156  07BE  023B               	subwf	_VAL_2,w
  1157  07BF  1803               	skipnc
  1158  07C0  2FC2               	goto	u1081
  1159  07C1  2FC3               	goto	u1080
  1160  07C2                     u1081:	
  1161  07C2  2FDF               	goto	l1613
  1162  07C3                     u1080:	
  1163  07C3                     l1607:	
  1164                           
  1165                           ;Master.c: 106:             Lcd_Set_Cursor(8,2);
  1166  07C3  3002               	movlw	2
  1167  07C4  00B5               	movwf	??_main
  1168  07C5  0835               	movf	??_main,w
  1169  07C6  00F3               	movwf	Lcd_Set_Cursor@posy
  1170  07C7  3008               	movlw	8
  1171  07C8  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
  1172  07CD                     l1609:	
  1173                           
  1174                           ;Master.c: 107:             Lcd_Write_String("0");
  1175  07CD  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1176  07CE  00F3               	movwf	Lcd_Write_String@var
  1177  07CF  3080               	movlw	128
  1178  07D0  00F4               	movwf	Lcd_Write_String@var+1
  1179  07D1  120A  118A  2400  120A  118A  	fcall	_Lcd_Write_String
  1180  07D6                     l1611:	
  1181                           
  1182                           ;Master.c: 108:             Lcd_Write_Int(VAL_2);
  1183  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1184  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1185  07D8  083B               	movf	_VAL_2,w
  1186  07D9  120A  118A  231D  120A  118A  	fcall	_Lcd_Write_Int
  1187                           
  1188                           ;Master.c: 109:         }else{
  1189  07DE  2EED               	goto	l1561
  1190  07DF                     l1613:	
  1191                           
  1192                           ;Master.c: 110:             Lcd_Set_Cursor(8,2);
  1193  07DF  3002               	movlw	2
  1194  07E0  00B5               	movwf	??_main
  1195  07E1  0835               	movf	??_main,w
  1196  07E2  00F3               	movwf	Lcd_Set_Cursor@posy
  1197  07E3  3008               	movlw	8
  1198  07E4  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
  1199  07E9                     l1615:	
  1200                           
  1201                           ;Master.c: 111:             Lcd_Write_Int(VAL_2);
  1202  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1203  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1204  07EB  083B               	movf	_VAL_2,w
  1205  07EC  120A  118A  231D  120A  118A  	fcall	_Lcd_Write_Int
  1206  07F1  2EED               	goto	l1561
  1207  07F2  120A  118A  2800   	ljmp	start
  1208  07F5                     __end_of_main:	
  1209                           
  1210                           	psect	text1
  1211  0486                     __ptext1:	
  1212 ;; *************** function _initLCD *****************
  1213 ;; Defined at:
  1214 ;;		line 9 in file "LCD.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          2       0       0       0       0
  1231 ;;      Totals:         2       0       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    1
  1235 ;; This function calls:
  1236 ;;		_Lcd_Cmd
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _initLCD
  1244  0486                     _initLCD:	
  1245  0486                     l1415:	
  1246                           ;incstack = 0
  1247                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1248                           
  1249                           
  1250                           ;LCD.c: 10: _delay((unsigned long)((15)*(8000000/4000.0)));
  1251  0486  3027               	movlw	39
  1252  0487  00F4               	movwf	??_initLCD+1
  1253  0488  30F5               	movlw	245
  1254  0489  00F3               	movwf	??_initLCD
  1255  048A                     u1117:	
  1256  048A  0BF3               	decfsz	??_initLCD,f
  1257  048B  2C8A               	goto	u1117
  1258  048C  0BF4               	decfsz	??_initLCD+1,f
  1259  048D  2C8A               	goto	u1117
  1260  048E                     l1417:	
  1261                           
  1262                           ;LCD.c: 12: Lcd_Cmd(0x030);
  1263  048E  3030               	movlw	48
  1264  048F  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1265  0494                     l1419:	
  1266                           
  1267                           ;LCD.c: 13: _delay((unsigned long)((5)*(8000000/4000.0)));
  1268  0494  300D               	movlw	13
  1269  0495  00F4               	movwf	??_initLCD+1
  1270  0496  30FB               	movlw	251
  1271  0497  00F3               	movwf	??_initLCD
  1272  0498                     u1127:	
  1273  0498  0BF3               	decfsz	??_initLCD,f
  1274  0499  2C98               	goto	u1127
  1275  049A  0BF4               	decfsz	??_initLCD+1,f
  1276  049B  2C98               	goto	u1127
  1277  049C  2C9D               	nop2
  1278                           
  1279                           ;LCD.c: 15: Lcd_Cmd(0x030);
  1280  049D  3030               	movlw	48
  1281  049E  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1282  04A3                     l1421:	
  1283                           
  1284                           ;LCD.c: 16: _delay((unsigned long)((11)*(8000000/4000.0)));
  1285  04A3  301D               	movlw	29
  1286  04A4  00F4               	movwf	??_initLCD+1
  1287  04A5  3091               	movlw	145
  1288  04A6  00F3               	movwf	??_initLCD
  1289  04A7                     u1137:	
  1290  04A7  0BF3               	decfsz	??_initLCD,f
  1291  04A8  2CA7               	goto	u1137
  1292  04A9  0BF4               	decfsz	??_initLCD+1,f
  1293  04AA  2CA7               	goto	u1137
  1294  04AB                     l1423:	
  1295                           
  1296                           ;LCD.c: 18: Lcd_Cmd(0x030);
  1297  04AB  3030               	movlw	48
  1298  04AC  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1299                           
  1300                           ;LCD.c: 19: _delay((unsigned long)((160)*(8000000/4000000.0)));
  1301  04B1  306A               	movlw	106
  1302  04B2  00F3               	movwf	??_initLCD
  1303  04B3                     u1147:	
  1304  04B3  0BF3               	decfsz	??_initLCD,f
  1305  04B4  2CB3               	goto	u1147
  1306  04B5  0000               	nop
  1307  04B6                     l1425:	
  1308                           
  1309                           ;LCD.c: 22: Lcd_Cmd(0x38);
  1310  04B6  3038               	movlw	56
  1311  04B7  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1312  04BC                     l1427:	
  1313                           
  1314                           ;LCD.c: 23: Lcd_Cmd(0x10);
  1315  04BC  3010               	movlw	16
  1316  04BD  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1317  04C2                     l1429:	
  1318                           
  1319                           ;LCD.c: 24: Lcd_Cmd(0x01);
  1320  04C2  3001               	movlw	1
  1321  04C3  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1322  04C8                     l1431:	
  1323                           
  1324                           ;LCD.c: 25: Lcd_Cmd(0x06);
  1325  04C8  3006               	movlw	6
  1326  04C9  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1327  04CE                     l1433:	
  1328                           
  1329                           ;LCD.c: 26: Lcd_Cmd(0x0C);
  1330  04CE  300C               	movlw	12
  1331  04CF  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  1332  04D4                     l68:	
  1333  04D4  0008               	return
  1334  04D5                     __end_of_initLCD:	
  1335                           
  1336                           	psect	text2
  1337  033B                     __ptext2:	
  1338 ;; *************** function ___wmul *****************
  1339 ;; Defined at:
  1340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  multiplier      2    0[COMMON] unsigned int 
  1343 ;;  multiplicand    2    2[COMMON] unsigned int 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  product         2    4[COMMON] unsigned int 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  2    0[COMMON] unsigned int 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         4       0       0       0       0
  1356 ;;      Locals:         2       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         6       0       0       0       0
  1359 ;;Total ram usage:        6 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function ___wmul
  1370  033B                     ___wmul:	
  1371  033B                     l1447:	
  1372                           ;incstack = 0
  1373                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1374                           
  1375  033B  01F4               	clrf	___wmul@product
  1376  033C  01F5               	clrf	___wmul@product+1
  1377  033D                     l1449:	
  1378  033D  1C70               	btfss	___wmul@multiplier,0
  1379  033E  2B40               	goto	u911
  1380  033F  2B41               	goto	u910
  1381  0340                     u911:	
  1382  0340  2B47               	goto	l269
  1383  0341                     u910:	
  1384  0341                     l1451:	
  1385  0341  0872               	movf	___wmul@multiplicand,w
  1386  0342  07F4               	addwf	___wmul@product,f
  1387  0343  1803               	skipnc
  1388  0344  0AF5               	incf	___wmul@product+1,f
  1389  0345  0873               	movf	___wmul@multiplicand+1,w
  1390  0346  07F5               	addwf	___wmul@product+1,f
  1391  0347                     l269:	
  1392  0347  3001               	movlw	1
  1393  0348                     u925:	
  1394  0348  1003               	clrc
  1395  0349  0DF2               	rlf	___wmul@multiplicand,f
  1396  034A  0DF3               	rlf	___wmul@multiplicand+1,f
  1397  034B  3EFF               	addlw	-1
  1398  034C  1D03               	skipz
  1399  034D  2B48               	goto	u925
  1400  034E                     l1453:	
  1401  034E  3001               	movlw	1
  1402  034F                     u935:	
  1403  034F  1003               	clrc
  1404  0350  0CF1               	rrf	___wmul@multiplier+1,f
  1405  0351  0CF0               	rrf	___wmul@multiplier,f
  1406  0352  3EFF               	addlw	-1
  1407  0353  1D03               	skipz
  1408  0354  2B4F               	goto	u935
  1409  0355                     l1455:	
  1410  0355  0870               	movf	___wmul@multiplier,w
  1411  0356  0471               	iorwf	___wmul@multiplier+1,w
  1412  0357  1D03               	btfss	3,2
  1413  0358  2B5A               	goto	u941
  1414  0359  2B5B               	goto	u940
  1415  035A                     u941:	
  1416  035A  2B3D               	goto	l1449
  1417  035B                     u940:	
  1418  035B                     l1457:	
  1419  035B  0875               	movf	___wmul@product+1,w
  1420  035C  00F1               	movwf	?___wmul+1
  1421  035D  0874               	movf	___wmul@product,w
  1422  035E  00F0               	movwf	?___wmul
  1423  035F                     l271:	
  1424  035F  0008               	return
  1425  0360                     __end_of___wmul:	
  1426                           
  1427                           	psect	text3
  1428  02ED                     __ptext3:	
  1429 ;; *************** function ___bmul *****************
  1430 ;; Defined at:
  1431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  multiplier      1    wreg     unsigned char 
  1434 ;;  multiplicand    1    0[COMMON] unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  multiplier      1    3[COMMON] unsigned char 
  1437 ;;  product         1    2[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         1       0       0       0       0
  1448 ;;      Locals:         2       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0
  1450 ;;      Totals:         4       0       0       0       0
  1451 ;;Total ram usage:        4 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function ___bmul
  1462  02ED                     ___bmul:	
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1466                           ;___bmul@multiplier stored from wreg
  1467  02ED  00F3               	movwf	___bmul@multiplier
  1468  02EE                     l1461:	
  1469  02EE  01F2               	clrf	___bmul@product
  1470  02EF                     l1463:	
  1471  02EF  1C73               	btfss	___bmul@multiplier,0
  1472  02F0  2AF2               	goto	u951
  1473  02F1  2AF3               	goto	u950
  1474  02F2                     u951:	
  1475  02F2  2AF7               	goto	l1467
  1476  02F3                     u950:	
  1477  02F3                     l1465:	
  1478  02F3  0870               	movf	___bmul@multiplicand,w
  1479  02F4  00F1               	movwf	??___bmul
  1480  02F5  0871               	movf	??___bmul,w
  1481  02F6  07F2               	addwf	___bmul@product,f
  1482  02F7                     l1467:	
  1483  02F7  1003               	clrc
  1484  02F8  0DF0               	rlf	___bmul@multiplicand,f
  1485  02F9                     l1469:	
  1486  02F9  1003               	clrc
  1487  02FA  0CF3               	rrf	___bmul@multiplier,f
  1488  02FB  0873               	movf	___bmul@multiplier,w
  1489  02FC  1D03               	btfss	3,2
  1490  02FD  2AFF               	goto	u961
  1491  02FE  2B00               	goto	u960
  1492  02FF                     u961:	
  1493  02FF  2AEF               	goto	l1463
  1494  0300                     u960:	
  1495  0300                     l1471:	
  1496  0300  0872               	movf	___bmul@product,w
  1497  0301                     l295:	
  1498  0301  0008               	return
  1499  0302                     __end_of___bmul:	
  1500                           
  1501                           	psect	text4
  1502  053B                     __ptext4:	
  1503 ;; *************** function ___awdiv *****************
  1504 ;; Defined at:
  1505 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  divisor         2    6[COMMON] int 
  1508 ;;  dividend        2    8[COMMON] int 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  quotient        2    2[BANK0 ] int 
  1511 ;;  sign            1    1[BANK0 ] unsigned char 
  1512 ;;  counter         1    0[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    6[COMMON] int 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         4       0       0       0       0
  1523 ;;      Locals:         0       4       0       0       0
  1524 ;;      Temps:          1       0       0       0       0
  1525 ;;      Totals:         5       4       0       0       0
  1526 ;;Total ram usage:        9 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function ___awdiv
  1537  053B                     ___awdiv:	
  1538  053B                     l1475:	
  1539                           ;incstack = 0
  1540                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1541                           
  1542  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1543  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1544  053D  01A1               	clrf	___awdiv@sign
  1545  053E                     l1477:	
  1546  053E  1FF7               	btfss	___awdiv@divisor+1,7
  1547  053F  2D41               	goto	u971
  1548  0540  2D42               	goto	u970
  1549  0541                     u971:	
  1550  0541  2D49               	goto	l1483
  1551  0542                     u970:	
  1552  0542                     l1479:	
  1553  0542  09F6               	comf	___awdiv@divisor,f
  1554  0543  09F7               	comf	___awdiv@divisor+1,f
  1555  0544  0AF6               	incf	___awdiv@divisor,f
  1556  0545  1903               	skipnz
  1557  0546  0AF7               	incf	___awdiv@divisor+1,f
  1558  0547                     l1481:	
  1559  0547  01A1               	clrf	___awdiv@sign
  1560  0548  0AA1               	incf	___awdiv@sign,f
  1561  0549                     l1483:	
  1562  0549  1FF9               	btfss	___awdiv@dividend+1,7
  1563  054A  2D4C               	goto	u981
  1564  054B  2D4D               	goto	u980
  1565  054C                     u981:	
  1566  054C  2D56               	goto	l1489
  1567  054D                     u980:	
  1568  054D                     l1485:	
  1569  054D  09F8               	comf	___awdiv@dividend,f
  1570  054E  09F9               	comf	___awdiv@dividend+1,f
  1571  054F  0AF8               	incf	___awdiv@dividend,f
  1572  0550  1903               	skipnz
  1573  0551  0AF9               	incf	___awdiv@dividend+1,f
  1574  0552                     l1487:	
  1575  0552  3001               	movlw	1
  1576  0553  00FA               	movwf	??___awdiv
  1577  0554  087A               	movf	??___awdiv,w
  1578  0555  06A1               	xorwf	___awdiv@sign,f
  1579  0556                     l1489:	
  1580  0556  01A2               	clrf	___awdiv@quotient
  1581  0557  01A3               	clrf	___awdiv@quotient+1
  1582  0558                     l1491:	
  1583  0558  0876               	movf	___awdiv@divisor,w
  1584  0559  0477               	iorwf	___awdiv@divisor+1,w
  1585  055A  1903               	btfsc	3,2
  1586  055B  2D5D               	goto	u991
  1587  055C  2D5E               	goto	u990
  1588  055D                     u991:	
  1589  055D  2D95               	goto	l1511
  1590  055E                     u990:	
  1591  055E                     l1493:	
  1592  055E  01A0               	clrf	___awdiv@counter
  1593  055F  0AA0               	incf	___awdiv@counter,f
  1594  0560  2D6C               	goto	l1499
  1595  0561                     l1495:	
  1596  0561  3001               	movlw	1
  1597  0562                     u1005:	
  1598  0562  1003               	clrc
  1599  0563  0DF6               	rlf	___awdiv@divisor,f
  1600  0564  0DF7               	rlf	___awdiv@divisor+1,f
  1601  0565  3EFF               	addlw	-1
  1602  0566  1D03               	skipz
  1603  0567  2D62               	goto	u1005
  1604  0568                     l1497:	
  1605  0568  3001               	movlw	1
  1606  0569  00FA               	movwf	??___awdiv
  1607  056A  087A               	movf	??___awdiv,w
  1608  056B  07A0               	addwf	___awdiv@counter,f
  1609  056C                     l1499:	
  1610  056C  1FF7               	btfss	___awdiv@divisor+1,7
  1611  056D  2D6F               	goto	u1011
  1612  056E  2D70               	goto	u1010
  1613  056F                     u1011:	
  1614  056F  2D61               	goto	l1495
  1615  0570                     u1010:	
  1616  0570                     l1501:	
  1617  0570  3001               	movlw	1
  1618  0571                     u1025:	
  1619  0571  1003               	clrc
  1620  0572  0DA2               	rlf	___awdiv@quotient,f
  1621  0573  0DA3               	rlf	___awdiv@quotient+1,f
  1622  0574  3EFF               	addlw	-1
  1623  0575  1D03               	skipz
  1624  0576  2D71               	goto	u1025
  1625  0577  0877               	movf	___awdiv@divisor+1,w
  1626  0578  0279               	subwf	___awdiv@dividend+1,w
  1627  0579  1D03               	skipz
  1628  057A  2D7D               	goto	u1035
  1629  057B  0876               	movf	___awdiv@divisor,w
  1630  057C  0278               	subwf	___awdiv@dividend,w
  1631  057D                     u1035:	
  1632  057D  1C03               	skipc
  1633  057E  2D80               	goto	u1031
  1634  057F  2D81               	goto	u1030
  1635  0580                     u1031:	
  1636  0580  2D88               	goto	l1507
  1637  0581                     u1030:	
  1638  0581                     l1503:	
  1639  0581  0876               	movf	___awdiv@divisor,w
  1640  0582  02F8               	subwf	___awdiv@dividend,f
  1641  0583  0877               	movf	___awdiv@divisor+1,w
  1642  0584  1C03               	skipc
  1643  0585  03F9               	decf	___awdiv@dividend+1,f
  1644  0586  02F9               	subwf	___awdiv@dividend+1,f
  1645  0587                     l1505:	
  1646  0587  1422               	bsf	___awdiv@quotient,0
  1647  0588                     l1507:	
  1648  0588  3001               	movlw	1
  1649  0589                     u1045:	
  1650  0589  1003               	clrc
  1651  058A  0CF7               	rrf	___awdiv@divisor+1,f
  1652  058B  0CF6               	rrf	___awdiv@divisor,f
  1653  058C  3EFF               	addlw	-1
  1654  058D  1D03               	skipz
  1655  058E  2D89               	goto	u1045
  1656  058F                     l1509:	
  1657  058F  3001               	movlw	1
  1658  0590  02A0               	subwf	___awdiv@counter,f
  1659  0591  1D03               	btfss	3,2
  1660  0592  2D94               	goto	u1051
  1661  0593  2D95               	goto	u1050
  1662  0594                     u1051:	
  1663  0594  2D70               	goto	l1501
  1664  0595                     u1050:	
  1665  0595                     l1511:	
  1666  0595  0821               	movf	___awdiv@sign,w
  1667  0596  1903               	btfsc	3,2
  1668  0597  2D99               	goto	u1061
  1669  0598  2D9A               	goto	u1060
  1670  0599                     u1061:	
  1671  0599  2D9F               	goto	l1515
  1672  059A                     u1060:	
  1673  059A                     l1513:	
  1674  059A  09A2               	comf	___awdiv@quotient,f
  1675  059B  09A3               	comf	___awdiv@quotient+1,f
  1676  059C  0AA2               	incf	___awdiv@quotient,f
  1677  059D  1903               	skipnz
  1678  059E  0AA3               	incf	___awdiv@quotient+1,f
  1679  059F                     l1515:	
  1680  059F  0823               	movf	___awdiv@quotient+1,w
  1681  05A0  00F7               	movwf	?___awdiv+1
  1682  05A1  0822               	movf	___awdiv@quotient,w
  1683  05A2  00F6               	movwf	?___awdiv
  1684  05A3                     l422:	
  1685  05A3  0008               	return
  1686  05A4                     __end_of___awdiv:	
  1687                           
  1688                           	psect	text5
  1689  031D                     __ptext5:	
  1690 ;; *************** function _Lcd_Write_Int *****************
  1691 ;; Defined at:
  1692 ;;		line 66 in file "LCD.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  numero          1    wreg     unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  numero          1   20[BANK0 ] unsigned char 
  1697 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0       0       0       0
  1708 ;;      Locals:         0       5       0       0       0
  1709 ;;      Temps:          0       3       0       0       0
  1710 ;;      Totals:         0       8       0       0       0
  1711 ;;Total ram usage:        8 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    2
  1714 ;; This function calls:
  1715 ;;		_Lcd_Write_String
  1716 ;;		_sprintf
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _Lcd_Write_Int
  1724  031D                     _Lcd_Write_Int:	
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1728                           ;Lcd_Write_Int@numero stored from wreg
  1729  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1730  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1731  031F  00B4               	movwf	Lcd_Write_Int@numero
  1732  0320                     l1445:	
  1733                           
  1734                           ;LCD.c: 67:     char buffer [4];;LCD.c: 68:     sprintf (buffer, "%d", numero);
  1735  0320  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1736  0321  00AD               	movwf	??_Lcd_Write_Int
  1737  0322  082D               	movf	??_Lcd_Write_Int,w
  1738  0323  00A0               	movwf	sprintf@f
  1739  0324  0834               	movf	Lcd_Write_Int@numero,w
  1740  0325  00AE               	movwf	??_Lcd_Write_Int+1
  1741  0326  01AF               	clrf	??_Lcd_Write_Int+2
  1742  0327  082E               	movf	??_Lcd_Write_Int+1,w
  1743  0328  00A1               	movwf	?_sprintf+1
  1744  0329  082F               	movf	??_Lcd_Write_Int+2,w
  1745  032A  00A2               	movwf	?_sprintf+2
  1746  032B  3030               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  1747  032C  120A  118A  25A4  120A  118A  	fcall	_sprintf
  1748                           
  1749                           ;LCD.c: 69:     Lcd_Write_String(buffer);
  1750  0331  3030               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  1751  0332  00F3               	movwf	Lcd_Write_String@var
  1752  0333  3000               	movlw	0
  1753  0334  00F4               	movwf	Lcd_Write_String@var+1
  1754  0335  120A  118A  2400  120A  118A  	fcall	_Lcd_Write_String
  1755  033A                     l91:	
  1756  033A  0008               	return
  1757  033B                     __end_of_Lcd_Write_Int:	
  1758                           
  1759                           	psect	text6
  1760  05A4                     __ptext6:	
  1761 ;; *************** function _sprintf *****************
  1762 ;; Defined at:
  1763 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  sp              1    wreg     PTR unsigned char 
  1766 ;;		 -> Lcd_Write_Int@buffer(4), 
  1767 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1768 ;;		 -> STR_1(3), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1771 ;;		 -> Lcd_Write_Int@buffer(4), 
  1772 ;;  tmpval          4    0        struct .
  1773 ;;  val             2    9[BANK0 ] unsigned int 
  1774 ;;  cp              2    0        PTR const unsigned char 
  1775 ;;  len             2    0        unsigned int 
  1776 ;;  c               1   12[BANK0 ] unsigned char 
  1777 ;;  prec            1    8[BANK0 ] char 
  1778 ;;  flag            1    7[BANK0 ] unsigned char 
  1779 ;;  ap              1    6[BANK0 ] PTR void [1]
  1780 ;;		 -> ?_sprintf(2), 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    0[BANK0 ] int 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       3       0       0       0
  1791 ;;      Locals:         0       7       0       0       0
  1792 ;;      Temps:          0       3       0       0       0
  1793 ;;      Totals:         0      13       0       0       0
  1794 ;;Total ram usage:       13 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    1
  1797 ;; This function calls:
  1798 ;;		___lwdiv
  1799 ;;		___lwmod
  1800 ;; This function is called by:
  1801 ;;		_Lcd_Write_Int
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _sprintf
  1807  05A4                     _sprintf:	
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811                           ;sprintf@sp stored from wreg
  1812  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1813  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1814  05A6  00AB               	movwf	sprintf@sp
  1815  05A7                     l1289:	
  1816                           
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1818  05A7  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1819  05A8  00A3               	movwf	??_sprintf
  1820  05A9  0823               	movf	??_sprintf,w
  1821  05AA  00A6               	movwf	sprintf@ap
  1822                           
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1824  05AB  2E75               	goto	l1341
  1825  05AC                     l1291:	
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1828  05AC  3025               	movlw	37
  1829  05AD  062C               	xorwf	sprintf@c,w
  1830  05AE  1903               	btfsc	3,2
  1831  05AF  2DB1               	goto	u731
  1832  05B0  2DB2               	goto	u730
  1833  05B1                     u731:	
  1834  05B1  2DBE               	goto	l1297
  1835  05B2                     u730:	
  1836  05B2                     l1293:	
  1837                           
  1838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1839  05B2  082C               	movf	sprintf@c,w
  1840  05B3  00A3               	movwf	??_sprintf
  1841  05B4  082B               	movf	sprintf@sp,w
  1842  05B5  0084               	movwf	4
  1843  05B6  0823               	movf	??_sprintf,w
  1844  05B7  1383               	bcf	3,7	;select IRP bank0
  1845  05B8  0080               	movwf	0
  1846  05B9                     l1295:	
  1847  05B9  3001               	movlw	1
  1848  05BA  00A3               	movwf	??_sprintf
  1849  05BB  0823               	movf	??_sprintf,w
  1850  05BC  07AB               	addwf	sprintf@sp,f
  1851                           
  1852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1853  05BD  2E75               	goto	l1341
  1854  05BE                     l1297:	
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1857  05BE  01A7               	clrf	sprintf@flag
  1858  05BF                     l1301:	
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1860                           
  1861  05BF  3001               	movlw	1
  1862  05C0  07A0               	addwf	sprintf@f,f
  1863  05C1  30FF               	movlw	-1
  1864  05C2  0720               	addwf	sprintf@f,w
  1865  05C3  0084               	movwf	4
  1866  05C4  120A  118A  200D  120A  118A  	fcall	stringdir
  1867  05C9  00AC               	movwf	sprintf@c
  1868  05CA  00A3               	movwf	??_sprintf
  1869  05CB  01A4               	clrf	??_sprintf+1
  1870                           
  1871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1872                           ; Switch size 1, requested type "simple"
  1873                           ; Number of cases is 1, Range of values is 0 to 0
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte            4     3 (average)
  1877                           ; direct_byte           11     8 (fixed)
  1878                           ; jumptable            260     6 (fixed)
  1879                           ;	Chosen strategy is simple_byte
  1880  05CC  0824               	movf	??_sprintf+1,w
  1881  05CD  3A00               	xorlw	0	; case 0
  1882  05CE  1903               	skipnz
  1883  05CF  2DD1               	goto	l1637
  1884  05D0  2E75               	goto	l1341
  1885  05D1                     l1637:	
  1886                           
  1887                           ; Switch size 1, requested type "simple"
  1888                           ; Number of cases is 3, Range of values is 0 to 105
  1889                           ; switch strategies available:
  1890                           ; Name         Instructions Cycles
  1891                           ; simple_byte           10     6 (average)
  1892                           ; jumptable            260     6 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  05D1  0823               	movf	??_sprintf,w
  1895  05D2  3A00               	xorlw	0	; case 0
  1896  05D3  1903               	skipnz
  1897  05D4  2E87               	goto	l1343
  1898  05D5  3A64               	xorlw	100	; case 100
  1899  05D6  1903               	skipnz
  1900  05D7  2DDC               	goto	l1303
  1901  05D8  3A0D               	xorlw	13	; case 105
  1902  05D9  1903               	skipnz
  1903  05DA  2DDC               	goto	l1303
  1904  05DB  2E75               	goto	l1341
  1905  05DC                     l1303:	
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1908  05DC  0826               	movf	sprintf@ap,w
  1909  05DD  0084               	movwf	4
  1910  05DE  1383               	bcf	3,7	;select IRP bank0
  1911  05DF  0800               	movf	0,w
  1912  05E0  00A9               	movwf	sprintf@val
  1913  05E1  0A84               	incf	4,f
  1914  05E2  0800               	movf	0,w
  1915  05E3  00AA               	movwf	sprintf@val+1
  1916  05E4                     l1305:	
  1917  05E4  3002               	movlw	2
  1918  05E5  00A3               	movwf	??_sprintf
  1919  05E6  0823               	movf	??_sprintf,w
  1920  05E7  07A6               	addwf	sprintf@ap,f
  1921  05E8                     l1307:	
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1924  05E8  1FAA               	btfss	sprintf@val+1,7
  1925  05E9  2DEB               	goto	u741
  1926  05EA  2DEC               	goto	u740
  1927  05EB                     u741:	
  1928  05EB  2DF5               	goto	l1313
  1929  05EC                     u740:	
  1930  05EC                     l1309:	
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1933  05EC  3003               	movlw	3
  1934  05ED  00A3               	movwf	??_sprintf
  1935  05EE  0823               	movf	??_sprintf,w
  1936  05EF  04A7               	iorwf	sprintf@flag,f
  1937  05F0                     l1311:	
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1940  05F0  09A9               	comf	sprintf@val,f
  1941  05F1  09AA               	comf	sprintf@val+1,f
  1942  05F2  0AA9               	incf	sprintf@val,f
  1943  05F3  1903               	skipnz
  1944  05F4  0AAA               	incf	sprintf@val+1,f
  1945  05F5                     l1313:	
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1948  05F5  01AC               	clrf	sprintf@c
  1949  05F6  0AAC               	incf	sprintf@c,f
  1950  05F7                     l1319:	
  1951                           
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1953  05F7  082C               	movf	sprintf@c,w
  1954  05F8  00A3               	movwf	??_sprintf
  1955  05F9  0723               	addwf	??_sprintf,w
  1956  05FA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1957  05FB  0084               	movwf	4
  1958  05FC  120A  118A  200D  120A  118A  	fcall	stringdir
  1959  0601  00A4               	movwf	??_sprintf+1
  1960  0602  120A  118A  200D  120A  118A  	fcall	stringdir
  1961  0607  00A5               	movwf	??_sprintf+2
  1962  0608  0825               	movf	??_sprintf+2,w
  1963  0609  022A               	subwf	sprintf@val+1,w
  1964  060A  1D03               	skipz
  1965  060B  2E0E               	goto	u755
  1966  060C  0824               	movf	??_sprintf+1,w
  1967  060D  0229               	subwf	sprintf@val,w
  1968  060E                     u755:	
  1969  060E  1803               	skipnc
  1970  060F  2E11               	goto	u751
  1971  0610  2E12               	goto	u750
  1972  0611                     u751:	
  1973  0611  2E13               	goto	l1323
  1974  0612                     u750:	
  1975  0612  2E1D               	goto	l1325
  1976  0613                     l1323:	
  1977  0613  3001               	movlw	1
  1978  0614  00A3               	movwf	??_sprintf
  1979  0615  0823               	movf	??_sprintf,w
  1980  0616  07AC               	addwf	sprintf@c,f
  1981  0617  3005               	movlw	5
  1982  0618  062C               	xorwf	sprintf@c,w
  1983  0619  1D03               	btfss	3,2
  1984  061A  2E1C               	goto	u761
  1985  061B  2E1D               	goto	u760
  1986  061C                     u761:	
  1987  061C  2DF7               	goto	l1319
  1988  061D                     u760:	
  1989  061D                     l1325:	
  1990                           
  1991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1992  061D  0827               	movf	sprintf@flag,w
  1993  061E  3903               	andlw	3
  1994  061F  1903               	btfsc	3,2
  1995  0620  2E22               	goto	u771
  1996  0621  2E23               	goto	u770
  1997  0622                     u771:	
  1998  0622  2E2E               	goto	l1331
  1999  0623                     u770:	
  2000  0623                     l1327:	
  2001                           
  2002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  2003  0623  302D               	movlw	45
  2004  0624  00A3               	movwf	??_sprintf
  2005  0625  082B               	movf	sprintf@sp,w
  2006  0626  0084               	movwf	4
  2007  0627  0823               	movf	??_sprintf,w
  2008  0628  1383               	bcf	3,7	;select IRP bank0
  2009  0629  0080               	movwf	0
  2010  062A                     l1329:	
  2011  062A  3001               	movlw	1
  2012  062B  00A3               	movwf	??_sprintf
  2013  062C  0823               	movf	??_sprintf,w
  2014  062D  07AB               	addwf	sprintf@sp,f
  2015  062E                     l1331:	
  2016                           
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  2018  062E  082C               	movf	sprintf@c,w
  2019  062F  00A3               	movwf	??_sprintf
  2020  0630  0823               	movf	??_sprintf,w
  2021  0631  00A8               	movwf	sprintf@prec
  2022                           
  2023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2024  0632  2E6C               	goto	l1339
  2025  0633                     l1333:	
  2026                           
  2027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2028  0633  300A               	movlw	10
  2029  0634  00F8               	movwf	___lwmod@divisor
  2030  0635  3000               	movlw	0
  2031  0636  00F9               	movwf	___lwmod@divisor+1
  2032  0637  0828               	movf	sprintf@prec,w
  2033  0638  00A3               	movwf	??_sprintf
  2034  0639  0723               	addwf	??_sprintf,w
  2035  063A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2036  063B  0084               	movwf	4
  2037  063C  120A  118A  200D  120A  118A  	fcall	stringdir
  2038  0641  00F0               	movwf	___lwdiv@divisor
  2039  0642  120A  118A  200D  120A  118A  	fcall	stringdir
  2040  0647  00F1               	movwf	___lwdiv@divisor+1
  2041  0648  082A               	movf	sprintf@val+1,w
  2042  0649  00F3               	movwf	___lwdiv@dividend+1
  2043  064A  0829               	movf	sprintf@val,w
  2044  064B  00F2               	movwf	___lwdiv@dividend
  2045  064C  120A  118A  2442  120A  118A  	fcall	___lwdiv
  2046  0651  0871               	movf	?___lwdiv+1,w
  2047  0652  00FB               	movwf	___lwmod@dividend+1
  2048  0653  0870               	movf	?___lwdiv,w
  2049  0654  00FA               	movwf	___lwmod@dividend
  2050  0655  120A  118A  23C6  120A  118A  	fcall	___lwmod
  2051  065A  0878               	movf	?___lwmod,w
  2052  065B  3E30               	addlw	48
  2053  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2054  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2055  065E  00A4               	movwf	??_sprintf+1
  2056  065F  0824               	movf	??_sprintf+1,w
  2057  0660  00AC               	movwf	sprintf@c
  2058  0661                     l1335:	
  2059                           
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2061  0661  082C               	movf	sprintf@c,w
  2062  0662  00A3               	movwf	??_sprintf
  2063  0663  082B               	movf	sprintf@sp,w
  2064  0664  0084               	movwf	4
  2065  0665  0823               	movf	??_sprintf,w
  2066  0666  1383               	bcf	3,7	;select IRP bank0
  2067  0667  0080               	movwf	0
  2068  0668                     l1337:	
  2069  0668  3001               	movlw	1
  2070  0669  00A3               	movwf	??_sprintf
  2071  066A  0823               	movf	??_sprintf,w
  2072  066B  07AB               	addwf	sprintf@sp,f
  2073  066C                     l1339:	
  2074                           
  2075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2076  066C  30FF               	movlw	255
  2077  066D  00A3               	movwf	??_sprintf
  2078  066E  0823               	movf	??_sprintf,w
  2079  066F  07A8               	addwf	sprintf@prec,f
  2080  0670  0A28               	incf	sprintf@prec,w
  2081  0671  1D03               	btfss	3,2
  2082  0672  2E74               	goto	u781
  2083  0673  2E75               	goto	u780
  2084  0674                     u781:	
  2085  0674  2E33               	goto	l1333
  2086  0675                     u780:	
  2087  0675                     l1341:	
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2090  0675  3001               	movlw	1
  2091  0676  07A0               	addwf	sprintf@f,f
  2092  0677  30FF               	movlw	-1
  2093  0678  0720               	addwf	sprintf@f,w
  2094  0679  0084               	movwf	4
  2095  067A  120A  118A  200D  120A  118A  	fcall	stringdir
  2096  067F  00A3               	movwf	??_sprintf
  2097  0680  0823               	movf	??_sprintf,w
  2098  0681  00AC               	movwf	sprintf@c
  2099  0682  082C               	movf	sprintf@c,w
  2100  0683  1D03               	btfss	3,2
  2101  0684  2E86               	goto	u791
  2102  0685  2E87               	goto	u790
  2103  0686                     u791:	
  2104  0686  2DAC               	goto	l1291
  2105  0687                     u790:	
  2106  0687                     l1343:	
  2107                           
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2109  0687  082B               	movf	sprintf@sp,w
  2110  0688  0084               	movwf	4
  2111  0689  1383               	bcf	3,7	;select IRP bank0
  2112  068A  0180               	clrf	0
  2113  068B                     l265:	
  2114  068B  0008               	return
  2115  068C                     __end_of_sprintf:	
  2116                           
  2117                           	psect	text7
  2118  03C6                     __ptext7:	
  2119 ;; *************** function ___lwmod *****************
  2120 ;; Defined at:
  2121 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  divisor         2    8[COMMON] unsigned int 
  2124 ;;  dividend        2   10[COMMON] unsigned int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  counter         1   13[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    8[COMMON] unsigned int 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         4       0       0       0       0
  2137 ;;      Locals:         1       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0
  2139 ;;      Totals:         6       0       0       0       0
  2140 ;;Total ram usage:        6 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_sprintf
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function ___lwmod
  2151  03C6                     ___lwmod:	
  2152  03C6                     l1247:	
  2153                           ;incstack = 0
  2154                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2155                           
  2156  03C6  0878               	movf	___lwmod@divisor,w
  2157  03C7  0479               	iorwf	___lwmod@divisor+1,w
  2158  03C8  1903               	btfsc	3,2
  2159  03C9  2BCB               	goto	u621
  2160  03CA  2BCC               	goto	u620
  2161  03CB                     u621:	
  2162  03CB  2BFB               	goto	l1265
  2163  03CC                     u620:	
  2164  03CC                     l1249:	
  2165  03CC  01FD               	clrf	___lwmod@counter
  2166  03CD  0AFD               	incf	___lwmod@counter,f
  2167  03CE  2BDA               	goto	l1255
  2168  03CF                     l1251:	
  2169  03CF  3001               	movlw	1
  2170  03D0                     u635:	
  2171  03D0  1003               	clrc
  2172  03D1  0DF8               	rlf	___lwmod@divisor,f
  2173  03D2  0DF9               	rlf	___lwmod@divisor+1,f
  2174  03D3  3EFF               	addlw	-1
  2175  03D4  1D03               	skipz
  2176  03D5  2BD0               	goto	u635
  2177  03D6                     l1253:	
  2178  03D6  3001               	movlw	1
  2179  03D7  00FC               	movwf	??___lwmod
  2180  03D8  087C               	movf	??___lwmod,w
  2181  03D9  07FD               	addwf	___lwmod@counter,f
  2182  03DA                     l1255:	
  2183  03DA  1FF9               	btfss	___lwmod@divisor+1,7
  2184  03DB  2BDD               	goto	u641
  2185  03DC  2BDE               	goto	u640
  2186  03DD                     u641:	
  2187  03DD  2BCF               	goto	l1251
  2188  03DE                     u640:	
  2189  03DE                     l1257:	
  2190  03DE  0879               	movf	___lwmod@divisor+1,w
  2191  03DF  027B               	subwf	___lwmod@dividend+1,w
  2192  03E0  1D03               	skipz
  2193  03E1  2BE4               	goto	u655
  2194  03E2  0878               	movf	___lwmod@divisor,w
  2195  03E3  027A               	subwf	___lwmod@dividend,w
  2196  03E4                     u655:	
  2197  03E4  1C03               	skipc
  2198  03E5  2BE7               	goto	u651
  2199  03E6  2BE8               	goto	u650
  2200  03E7                     u651:	
  2201  03E7  2BEE               	goto	l1261
  2202  03E8                     u650:	
  2203  03E8                     l1259:	
  2204  03E8  0878               	movf	___lwmod@divisor,w
  2205  03E9  02FA               	subwf	___lwmod@dividend,f
  2206  03EA  0879               	movf	___lwmod@divisor+1,w
  2207  03EB  1C03               	skipc
  2208  03EC  03FB               	decf	___lwmod@dividend+1,f
  2209  03ED  02FB               	subwf	___lwmod@dividend+1,f
  2210  03EE                     l1261:	
  2211  03EE  3001               	movlw	1
  2212  03EF                     u665:	
  2213  03EF  1003               	clrc
  2214  03F0  0CF9               	rrf	___lwmod@divisor+1,f
  2215  03F1  0CF8               	rrf	___lwmod@divisor,f
  2216  03F2  3EFF               	addlw	-1
  2217  03F3  1D03               	skipz
  2218  03F4  2BEF               	goto	u665
  2219  03F5                     l1263:	
  2220  03F5  3001               	movlw	1
  2221  03F6  02FD               	subwf	___lwmod@counter,f
  2222  03F7  1D03               	btfss	3,2
  2223  03F8  2BFA               	goto	u671
  2224  03F9  2BFB               	goto	u670
  2225  03FA                     u671:	
  2226  03FA  2BDE               	goto	l1257
  2227  03FB                     u670:	
  2228  03FB                     l1265:	
  2229  03FB  087B               	movf	___lwmod@dividend+1,w
  2230  03FC  00F9               	movwf	?___lwmod+1
  2231  03FD  087A               	movf	___lwmod@dividend,w
  2232  03FE  00F8               	movwf	?___lwmod
  2233  03FF                     l551:	
  2234  03FF  0008               	return
  2235  0400                     __end_of___lwmod:	
  2236                           
  2237                           	psect	text8
  2238  0442                     __ptext8:	
  2239 ;; *************** function ___lwdiv *****************
  2240 ;; Defined at:
  2241 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  divisor         2    0[COMMON] unsigned int 
  2244 ;;  dividend        2    2[COMMON] unsigned int 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  quotient        2    5[COMMON] unsigned int 
  2247 ;;  counter         1    7[COMMON] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2    0[COMMON] unsigned int 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         4       0       0       0       0
  2258 ;;      Locals:         3       0       0       0       0
  2259 ;;      Temps:          1       0       0       0       0
  2260 ;;      Totals:         8       0       0       0       0
  2261 ;;Total ram usage:        8 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_sprintf
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function ___lwdiv
  2272  0442                     ___lwdiv:	
  2273  0442                     l1221:	
  2274                           ;incstack = 0
  2275                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2276                           
  2277  0442  01F5               	clrf	___lwdiv@quotient
  2278  0443  01F6               	clrf	___lwdiv@quotient+1
  2279  0444                     l1223:	
  2280  0444  0870               	movf	___lwdiv@divisor,w
  2281  0445  0471               	iorwf	___lwdiv@divisor+1,w
  2282  0446  1903               	btfsc	3,2
  2283  0447  2C49               	goto	u551
  2284  0448  2C4A               	goto	u550
  2285  0449                     u551:	
  2286  0449  2C81               	goto	l1243
  2287  044A                     u550:	
  2288  044A                     l1225:	
  2289  044A  01F7               	clrf	___lwdiv@counter
  2290  044B  0AF7               	incf	___lwdiv@counter,f
  2291  044C  2C58               	goto	l1231
  2292  044D                     l1227:	
  2293  044D  3001               	movlw	1
  2294  044E                     u565:	
  2295  044E  1003               	clrc
  2296  044F  0DF0               	rlf	___lwdiv@divisor,f
  2297  0450  0DF1               	rlf	___lwdiv@divisor+1,f
  2298  0451  3EFF               	addlw	-1
  2299  0452  1D03               	skipz
  2300  0453  2C4E               	goto	u565
  2301  0454                     l1229:	
  2302  0454  3001               	movlw	1
  2303  0455  00F4               	movwf	??___lwdiv
  2304  0456  0874               	movf	??___lwdiv,w
  2305  0457  07F7               	addwf	___lwdiv@counter,f
  2306  0458                     l1231:	
  2307  0458  1FF1               	btfss	___lwdiv@divisor+1,7
  2308  0459  2C5B               	goto	u571
  2309  045A  2C5C               	goto	u570
  2310  045B                     u571:	
  2311  045B  2C4D               	goto	l1227
  2312  045C                     u570:	
  2313  045C                     l1233:	
  2314  045C  3001               	movlw	1
  2315  045D                     u585:	
  2316  045D  1003               	clrc
  2317  045E  0DF5               	rlf	___lwdiv@quotient,f
  2318  045F  0DF6               	rlf	___lwdiv@quotient+1,f
  2319  0460  3EFF               	addlw	-1
  2320  0461  1D03               	skipz
  2321  0462  2C5D               	goto	u585
  2322  0463  0871               	movf	___lwdiv@divisor+1,w
  2323  0464  0273               	subwf	___lwdiv@dividend+1,w
  2324  0465  1D03               	skipz
  2325  0466  2C69               	goto	u595
  2326  0467  0870               	movf	___lwdiv@divisor,w
  2327  0468  0272               	subwf	___lwdiv@dividend,w
  2328  0469                     u595:	
  2329  0469  1C03               	skipc
  2330  046A  2C6C               	goto	u591
  2331  046B  2C6D               	goto	u590
  2332  046C                     u591:	
  2333  046C  2C74               	goto	l1239
  2334  046D                     u590:	
  2335  046D                     l1235:	
  2336  046D  0870               	movf	___lwdiv@divisor,w
  2337  046E  02F2               	subwf	___lwdiv@dividend,f
  2338  046F  0871               	movf	___lwdiv@divisor+1,w
  2339  0470  1C03               	skipc
  2340  0471  03F3               	decf	___lwdiv@dividend+1,f
  2341  0472  02F3               	subwf	___lwdiv@dividend+1,f
  2342  0473                     l1237:	
  2343  0473  1475               	bsf	___lwdiv@quotient,0
  2344  0474                     l1239:	
  2345  0474  3001               	movlw	1
  2346  0475                     u605:	
  2347  0475  1003               	clrc
  2348  0476  0CF1               	rrf	___lwdiv@divisor+1,f
  2349  0477  0CF0               	rrf	___lwdiv@divisor,f
  2350  0478  3EFF               	addlw	-1
  2351  0479  1D03               	skipz
  2352  047A  2C75               	goto	u605
  2353  047B                     l1241:	
  2354  047B  3001               	movlw	1
  2355  047C  02F7               	subwf	___lwdiv@counter,f
  2356  047D  1D03               	btfss	3,2
  2357  047E  2C80               	goto	u611
  2358  047F  2C81               	goto	u610
  2359  0480                     u611:	
  2360  0480  2C5C               	goto	l1233
  2361  0481                     u610:	
  2362  0481                     l1243:	
  2363  0481  0876               	movf	___lwdiv@quotient+1,w
  2364  0482  00F1               	movwf	?___lwdiv+1
  2365  0483  0875               	movf	___lwdiv@quotient,w
  2366  0484  00F0               	movwf	?___lwdiv
  2367  0485                     l541:	
  2368  0485  0008               	return
  2369  0486                     __end_of___lwdiv:	
  2370                           
  2371                           	psect	text9
  2372  0400                     __ptext9:	
  2373 ;; *************** function _Lcd_Write_String *****************
  2374 ;; Defined at:
  2375 ;;		line 60 in file "LCD.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  var             2    3[COMMON] PTR unsigned char 
  2378 ;;		 -> STR_5(2), STR_4(3), STR_3(3), STR_2(3), 
  2379 ;;		 -> Lcd_Write_Int@buffer(4), 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  i               2    8[COMMON] int 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         2       0       0       0       0
  2392 ;;      Locals:         2       0       0       0       0
  2393 ;;      Temps:          3       0       0       0       0
  2394 ;;      Totals:         7       0       0       0       0
  2395 ;;Total ram usage:        7 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    1
  2398 ;; This function calls:
  2399 ;;		_Lcd_Write_Char
  2400 ;; This function is called by:
  2401 ;;		_Lcd_Write_Int
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Lcd_Write_String
  2408  0400                     _Lcd_Write_String:	
  2409  0400                     l1281:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2412                           
  2413                           
  2414                           ;LCD.c: 61:     int i;;LCD.c: 62:  for(i=0;var[i]!='\0';i++)
  2415  0400  01F8               	clrf	Lcd_Write_String@i
  2416  0401  01F9               	clrf	Lcd_Write_String@i+1
  2417  0402  2C25               	goto	l1287
  2418  0403                     l1283:	
  2419                           
  2420                           ;LCD.c: 63:     Lcd_Write_Char(var[i]);
  2421  0403  0878               	movf	Lcd_Write_String@i,w
  2422  0404  0773               	addwf	Lcd_Write_String@var,w
  2423  0405  00F6               	movwf	??_Lcd_Write_String+1
  2424  0406  0874               	movf	Lcd_Write_String@var+1,w
  2425  0407  00F5               	movwf	??_Lcd_Write_String
  2426  0408  1803               	skipnc
  2427  0409  0AF5               	incf	??_Lcd_Write_String,f
  2428  040A  1FF8               	btfss	Lcd_Write_String@i,7
  2429  040B  2C0D               	goto	u700
  2430  040C  03F5               	decf	??_Lcd_Write_String,f
  2431  040D                     u700:	
  2432  040D  0875               	movf	??_Lcd_Write_String,w
  2433  040E  00F7               	movwf	??_Lcd_Write_String+2
  2434  040F  0877               	movf	??_Lcd_Write_String+2,w
  2435  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0412  00FF               	movwf	btemp+1
  2438  0413  0876               	movf	??_Lcd_Write_String+1,w
  2439  0414  0084               	movwf	4
  2440  0415  120A  118A  2003  120A  118A  	fcall	stringtab
  2441  041A  120A  118A  22D9  120A  118A  	fcall	_Lcd_Write_Char
  2442  041F                     l1285:	
  2443  041F  3001               	movlw	1
  2444  0420  07F8               	addwf	Lcd_Write_String@i,f
  2445  0421  1803               	skipnc
  2446  0422  0AF9               	incf	Lcd_Write_String@i+1,f
  2447  0423  3000               	movlw	0
  2448  0424  07F9               	addwf	Lcd_Write_String@i+1,f
  2449  0425                     l1287:	
  2450  0425  0878               	movf	Lcd_Write_String@i,w
  2451  0426  0773               	addwf	Lcd_Write_String@var,w
  2452  0427  00F6               	movwf	??_Lcd_Write_String+1
  2453  0428  0874               	movf	Lcd_Write_String@var+1,w
  2454  0429  00F5               	movwf	??_Lcd_Write_String
  2455  042A  1803               	skipnc
  2456  042B  0AF5               	incf	??_Lcd_Write_String,f
  2457  042C  1FF8               	btfss	Lcd_Write_String@i,7
  2458  042D  2C2F               	goto	u710
  2459  042E  03F5               	decf	??_Lcd_Write_String,f
  2460  042F                     u710:	
  2461  042F  0875               	movf	??_Lcd_Write_String,w
  2462  0430  00F7               	movwf	??_Lcd_Write_String+2
  2463  0431  0877               	movf	??_Lcd_Write_String+2,w
  2464  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0434  00FF               	movwf	btemp+1
  2467  0435  0876               	movf	??_Lcd_Write_String+1,w
  2468  0436  0084               	movwf	4
  2469  0437  120A  118A  2003  120A  118A  	fcall	stringtab
  2470  043C  3A00               	xorlw	0
  2471  043D  1D03               	skipz
  2472  043E  2C40               	goto	u721
  2473  043F  2C41               	goto	u720
  2474  0440                     u721:	
  2475  0440  2C03               	goto	l1283
  2476  0441                     u720:	
  2477  0441                     l88:	
  2478  0441  0008               	return
  2479  0442                     __end_of_Lcd_Write_String:	
  2480                           
  2481                           	psect	text10
  2482  02D9                     __ptext10:	
  2483 ;; *************** function _Lcd_Write_Char *****************
  2484 ;; Defined at:
  2485 ;;		line 52 in file "LCD.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  var             1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  var             1    2[COMMON] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0
  2502 ;;      Totals:         3       0       0       0       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_Lcd_Write_String
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _Lcd_Write_Char
  2515  02D9                     _Lcd_Write_Char:	
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _Lcd_Write_Char: [wreg]
  2519                           ;Lcd_Write_Char@var stored from wreg
  2520  02D9  00F2               	movwf	Lcd_Write_Char@var
  2521  02DA                     l1213:	
  2522                           
  2523                           ;LCD.c: 53:     PORTBbits.RB6 = 1;
  2524  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2525  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2526  02DC  1706               	bsf	6,6	;volatile
  2527  02DD                     l1215:	
  2528                           
  2529                           ;LCD.c: 54:     PORTD = var;
  2530  02DD  0872               	movf	Lcd_Write_Char@var,w
  2531  02DE  0088               	movwf	8	;volatile
  2532  02DF                     l1217:	
  2533                           
  2534                           ;LCD.c: 55:     PORTBbits.RB7 = 1;
  2535  02DF  1786               	bsf	6,7	;volatile
  2536                           
  2537                           ;LCD.c: 56:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2538  02E0  300B               	movlw	11
  2539  02E1  00F1               	movwf	??_Lcd_Write_Char+1
  2540  02E2  3062               	movlw	98
  2541  02E3  00F0               	movwf	??_Lcd_Write_Char
  2542  02E4                     u1157:	
  2543  02E4  0BF0               	decfsz	??_Lcd_Write_Char,f
  2544  02E5  2AE4               	goto	u1157
  2545  02E6  0BF1               	decfsz	??_Lcd_Write_Char+1,f
  2546  02E7  2AE4               	goto	u1157
  2547  02E8  0000               	nop
  2548  02E9                     l1219:	
  2549                           
  2550                           ;LCD.c: 57:     PORTBbits.RB7 = 0;
  2551  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2552  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2553  02EB  1386               	bcf	6,7	;volatile
  2554  02EC                     l82:	
  2555  02EC  0008               	return
  2556  02ED                     __end_of_Lcd_Write_Char:	
  2557                           
  2558                           	psect	text11
  2559  0302                     __ptext11:	
  2560 ;; *************** function _Lcd_Set_Cursor *****************
  2561 ;; Defined at:
  2562 ;;		line 43 in file "LCD.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  posx            1    wreg     unsigned char 
  2565 ;;  posy            1    3[COMMON] unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  posx            1    4[COMMON] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         1       0       0       0       0
  2578 ;;      Locals:         1       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         2       0       0       0       0
  2581 ;;Total ram usage:        2 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		_Lcd_Cmd
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _Lcd_Set_Cursor
  2593  0302                     _Lcd_Set_Cursor:	
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2597                           ;Lcd_Set_Cursor@posx stored from wreg
  2598  0302  00F4               	movwf	Lcd_Set_Cursor@posx
  2599  0303                     l1437:	
  2600                           
  2601                           ;LCD.c: 44:     if(posy == 1){
  2602  0303  0373               	decf	Lcd_Set_Cursor@posy,w
  2603  0304  1D03               	btfss	3,2
  2604  0305  2B07               	goto	u891
  2605  0306  2B08               	goto	u890
  2606  0307                     u891:	
  2607  0307  2B0F               	goto	l1441
  2608  0308                     u890:	
  2609  0308                     l1439:	
  2610                           
  2611                           ;LCD.c: 45:         Lcd_Cmd (0x80 + posx - 1);
  2612  0308  0874               	movf	Lcd_Set_Cursor@posx,w
  2613  0309  3E7F               	addlw	127
  2614  030A  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  2615  030F                     l1441:	
  2616                           
  2617                           ;LCD.c: 47:     if(posy == 2){
  2618  030F  3002               	movlw	2
  2619  0310  0673               	xorwf	Lcd_Set_Cursor@posy,w
  2620  0311  1D03               	btfss	3,2
  2621  0312  2B14               	goto	u901
  2622  0313  2B15               	goto	u900
  2623  0314                     u901:	
  2624  0314  2B1C               	goto	l79
  2625  0315                     u900:	
  2626  0315                     l1443:	
  2627                           
  2628                           ;LCD.c: 48:         Lcd_Cmd (0xC0 + posx - 1);
  2629  0315  0874               	movf	Lcd_Set_Cursor@posx,w
  2630  0316  3EBF               	addlw	191
  2631  0317  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  2632  031C                     l79:	
  2633  031C  0008               	return
  2634  031D                     __end_of_Lcd_Set_Cursor:	
  2635                           
  2636                           	psect	text12
  2637  0295                     __ptext12:	
  2638 ;; *************** function _Lcd_Clear *****************
  2639 ;; Defined at:
  2640 ;;		line 39 in file "LCD.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    1
  2661 ;; This function calls:
  2662 ;;		_Lcd_Cmd
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _Lcd_Clear
  2670  0295                     _Lcd_Clear:	
  2671  0295                     l1435:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2674                           
  2675                           
  2676                           ;LCD.c: 40:     Lcd_Cmd(0x01);
  2677  0295  3001               	movlw	1
  2678  0296  120A  118A  22C5  120A  118A  	fcall	_Lcd_Cmd
  2679  029B                     l74:	
  2680  029B  0008               	return
  2681  029C                     __end_of_Lcd_Clear:	
  2682                           
  2683                           	psect	text13
  2684  02C5                     __ptext13:	
  2685 ;; *************** function _Lcd_Cmd *****************
  2686 ;; Defined at:
  2687 ;;		line 31 in file "LCD.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  command         1    wreg     unsigned char 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  command         1    2[COMMON] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       0       0       0       0
  2702 ;;      Locals:         1       0       0       0       0
  2703 ;;      Temps:          2       0       0       0       0
  2704 ;;      Totals:         3       0       0       0       0
  2705 ;;Total ram usage:        3 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_initLCD
  2711 ;;		_Lcd_Clear
  2712 ;;		_Lcd_Set_Cursor
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _Lcd_Cmd
  2718  02C5                     _Lcd_Cmd:	
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in _Lcd_Cmd: [wreg]
  2722                           ;Lcd_Cmd@command stored from wreg
  2723  02C5  00F2               	movwf	Lcd_Cmd@command
  2724  02C6                     l1273:	
  2725                           
  2726                           ;LCD.c: 32:     PORTBbits.RB6 = 0;
  2727  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2728  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2729  02C8  1306               	bcf	6,6	;volatile
  2730  02C9                     l1275:	
  2731                           
  2732                           ;LCD.c: 33:     PORTD = command;
  2733  02C9  0872               	movf	Lcd_Cmd@command,w
  2734  02CA  0088               	movwf	8	;volatile
  2735  02CB                     l1277:	
  2736                           
  2737                           ;LCD.c: 34:     PORTBbits.RB7 = 1;
  2738  02CB  1786               	bsf	6,7	;volatile
  2739                           
  2740                           ;LCD.c: 35:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2741  02CC  300B               	movlw	11
  2742  02CD  00F1               	movwf	??_Lcd_Cmd+1
  2743  02CE  3062               	movlw	98
  2744  02CF  00F0               	movwf	??_Lcd_Cmd
  2745  02D0                     u1167:	
  2746  02D0  0BF0               	decfsz	??_Lcd_Cmd,f
  2747  02D1  2AD0               	goto	u1167
  2748  02D2  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2749  02D3  2AD0               	goto	u1167
  2750  02D4  0000               	nop
  2751  02D5                     l1279:	
  2752                           
  2753                           ;LCD.c: 36:     PORTBbits.RB7 = 0;
  2754  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2755  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2756  02D7  1386               	bcf	6,7	;volatile
  2757  02D8                     l71:	
  2758  02D8  0008               	return
  2759  02D9                     __end_of_Lcd_Cmd:	
  2760                           
  2761                           	psect	text14
  2762  02AE                     __ptext14:	
  2763 ;; *************** function _I2C_Master_Write *****************
  2764 ;; Defined at:
  2765 ;;		line 65 in file "I2C.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  d               2    0[COMMON] unsigned int 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         2       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0
  2782 ;;      Totals:         2       0       0       0       0
  2783 ;;Total ram usage:        2 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    1
  2786 ;; This function calls:
  2787 ;;		_I2C_Master_Wait
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _I2C_Master_Write
  2795  02AE                     _I2C_Master_Write:	
  2796  02AE                     l1395:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2799                           
  2800                           
  2801                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2802  02AE  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2803  02B3                     l1397:	
  2804                           
  2805                           ;I2C.c: 68:     SSPBUF = d;
  2806  02B3  0870               	movf	I2C_Master_Write@d,w
  2807  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2808  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2809  02B6  0093               	movwf	19	;volatile
  2810  02B7                     l47:	
  2811  02B7  0008               	return
  2812  02B8                     __end_of_I2C_Master_Write:	
  2813                           
  2814                           	psect	text15
  2815  02A5                     __ptext15:	
  2816 ;; *************** function _I2C_Master_Stop *****************
  2817 ;; Defined at:
  2818 ;;		line 55 in file "I2C.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		_I2C_Master_Wait
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _I2C_Master_Stop
  2848  02A5                     _I2C_Master_Stop:	
  2849  02A5                     l1391:	
  2850                           ;incstack = 0
  2851                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2852                           
  2853                           
  2854                           ;I2C.c: 57:     I2C_Master_Wait();
  2855  02A5  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2856  02AA                     l1393:	
  2857                           
  2858                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2859  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2860  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2861  02AC  1511               	bsf	17,2	;volatile
  2862  02AD                     l44:	
  2863  02AD  0008               	return
  2864  02AE                     __end_of_I2C_Master_Stop:	
  2865                           
  2866                           	psect	text16
  2867  029C                     __ptext16:	
  2868 ;; *************** function _I2C_Master_Start *****************
  2869 ;; Defined at:
  2870 ;;		line 39 in file "I2C.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    1
  2891 ;; This function calls:
  2892 ;;		_I2C_Master_Wait
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _I2C_Master_Start
  2900  029C                     _I2C_Master_Start:	
  2901  029C                     l1387:	
  2902                           ;incstack = 0
  2903                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2904                           
  2905                           
  2906                           ;I2C.c: 41:     I2C_Master_Wait();
  2907  029C  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2908  02A1                     l1389:	
  2909                           
  2910                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2911  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2912  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2913  02A3  1411               	bsf	17,0	;volatile
  2914  02A4                     l38:	
  2915  02A4  0008               	return
  2916  02A5                     __end_of_I2C_Master_Start:	
  2917                           
  2918                           	psect	text17
  2919  0360                     __ptext17:	
  2920 ;; *************** function _I2C_Master_Read *****************
  2921 ;; Defined at:
  2922 ;;		line 74 in file "I2C.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  a               2    0[COMMON] unsigned short 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  temp            2    4[COMMON] unsigned short 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2    0[COMMON] unsigned short 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         2       0       0       0       0
  2937 ;;      Locals:         2       0       0       0       0
  2938 ;;      Temps:          2       0       0       0       0
  2939 ;;      Totals:         6       0       0       0       0
  2940 ;;Total ram usage:        6 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		_I2C_Master_Wait
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _I2C_Master_Read
  2952  0360                     _I2C_Master_Read:	
  2953  0360                     l1399:	
  2954                           ;incstack = 0
  2955                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2956                           
  2957                           
  2958                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2959  0360  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2960  0365                     l1401:	
  2961                           
  2962                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2963  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2964  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2965  0367  1591               	bsf	17,3	;volatile
  2966                           
  2967                           ;I2C.c: 79:     I2C_Master_Wait();
  2968  0368  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2969  036D                     l1403:	
  2970                           
  2971                           ;I2C.c: 80:     temp = SSPBUF;
  2972  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2973  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2974  036F  0813               	movf	19,w	;volatile
  2975  0370  00F2               	movwf	??_I2C_Master_Read
  2976  0371  01F3               	clrf	??_I2C_Master_Read+1
  2977  0372  0872               	movf	??_I2C_Master_Read,w
  2978  0373  00F4               	movwf	I2C_Master_Read@temp
  2979  0374  0873               	movf	??_I2C_Master_Read+1,w
  2980  0375  00F5               	movwf	I2C_Master_Read@temp+1
  2981  0376                     l1405:	
  2982                           
  2983                           ;I2C.c: 81:     I2C_Master_Wait();
  2984  0376  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Wait
  2985  037B                     l1407:	
  2986                           
  2987                           ;I2C.c: 82:     if(a == 1){
  2988  037B  0370               	decf	I2C_Master_Read@a,w
  2989  037C  0471               	iorwf	I2C_Master_Read@a+1,w
  2990  037D  1D03               	btfss	3,2
  2991  037E  2B80               	goto	u881
  2992  037F  2B81               	goto	u880
  2993  0380                     u881:	
  2994  0380  2B85               	goto	l50
  2995  0381                     u880:	
  2996  0381                     l1409:	
  2997                           
  2998                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2999  0381  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0382  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0383  1291               	bcf	17,5	;volatile
  3002                           
  3003                           ;I2C.c: 84:     }else{
  3004  0384  2B88               	goto	l51
  3005  0385                     l50:	
  3006                           
  3007                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3008  0385  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0386  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0387  1691               	bsf	17,5	;volatile
  3011  0388                     l51:	
  3012                           ;I2C.c: 86:     }
  3013                           
  3014                           
  3015                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3016  0388  1611               	bsf	17,4	;volatile
  3017  0389                     l1411:	
  3018                           
  3019                           ;I2C.c: 88:     return temp;
  3020  0389  0875               	movf	I2C_Master_Read@temp+1,w
  3021  038A  00F1               	movwf	?_I2C_Master_Read+1
  3022  038B  0874               	movf	I2C_Master_Read@temp,w
  3023  038C  00F0               	movwf	?_I2C_Master_Read
  3024  038D                     l52:	
  3025  038D  0008               	return
  3026  038E                     __end_of_I2C_Master_Read:	
  3027                           
  3028                           	psect	text18
  3029  02B8                     __ptext18:	
  3030 ;; *************** function _I2C_Master_Wait *****************
  3031 ;; Defined at:
  3032 ;;		line 32 in file "I2C.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_I2C_Master_Start
  3056 ;;		_I2C_Master_Stop
  3057 ;;		_I2C_Master_Write
  3058 ;;		_I2C_Master_Read
  3059 ;;		_I2C_Master_RepeatedStart
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _I2C_Master_Wait
  3065  02B8                     _I2C_Master_Wait:	
  3066  02B8                     l1269:	
  3067                           ;incstack = 0
  3068                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3069                           
  3070  02B8                     l32:	
  3071                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3072                           
  3073  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  3074  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  3075  02BA  1914               	btfsc	20,2	;volatile
  3076  02BB  2ABD               	goto	u681
  3077  02BC  2ABE               	goto	u680
  3078  02BD                     u681:	
  3079  02BD  2AB8               	goto	l32
  3080  02BE                     u680:	
  3081  02BE                     l1271:	
  3082  02BE  0811               	movf	17,w	;volatile
  3083  02BF  391F               	andlw	31
  3084  02C0  1D03               	btfss	3,2
  3085  02C1  2AC3               	goto	u691
  3086  02C2  2AC4               	goto	u690
  3087  02C3                     u691:	
  3088  02C3  2AB8               	goto	l32
  3089  02C4                     u690:	
  3090  02C4                     l35:	
  3091  02C4  0008               	return
  3092  02C5                     __end_of_I2C_Master_Wait:	
  3093                           
  3094                           	psect	text19
  3095  038E                     __ptext19:	
  3096 ;; *************** function _I2C_Master_Init *****************
  3097 ;; Defined at:
  3098 ;;		line 16 in file "I2C.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  c               4    0[BANK0 ] const unsigned long 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       4       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          0       4       0       0       0
  3115 ;;      Totals:         0       8       0       0       0
  3116 ;;Total ram usage:        8 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    1
  3119 ;; This function calls:
  3120 ;;		___lldiv
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _I2C_Master_Init
  3128  038E                     _I2C_Master_Init:	
  3129  038E                     l1375:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3132                           
  3133                           
  3134                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3135  038E  3028               	movlw	40
  3136  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0391  0094               	movwf	20	;volatile
  3139  0392                     l1377:	
  3140                           
  3141                           ;I2C.c: 19:     SSPCON2 = 0;
  3142  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3143  0393  1303               	bcf	3,6	;RP1=0, select bank1
  3144  0394  0191               	clrf	17	;volatile
  3145  0395                     l1379:	
  3146                           
  3147                           ;I2C.c: 20:     SSPADD = ( 8000000 /(4*c))-1;
  3148  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3149  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3150  0397  0820               	movf	I2C_Master_Init@c,w
  3151  0398  00A4               	movwf	??_I2C_Master_Init
  3152  0399  0821               	movf	I2C_Master_Init@c+1,w
  3153  039A  00A5               	movwf	??_I2C_Master_Init+1
  3154  039B  0822               	movf	I2C_Master_Init@c+2,w
  3155  039C  00A6               	movwf	??_I2C_Master_Init+2
  3156  039D  0823               	movf	I2C_Master_Init@c+3,w
  3157  039E  00A7               	movwf	??_I2C_Master_Init+3
  3158  039F  3002               	movlw	2
  3159  03A0                     u875:	
  3160  03A0  1003               	clrc
  3161  03A1  0DA4               	rlf	??_I2C_Master_Init,f
  3162  03A2  0DA5               	rlf	??_I2C_Master_Init+1,f
  3163  03A3  0DA6               	rlf	??_I2C_Master_Init+2,f
  3164  03A4  0DA7               	rlf	??_I2C_Master_Init+3,f
  3165  03A5                     u870:	
  3166  03A5  3EFF               	addlw	-1
  3167  03A6  1D03               	skipz
  3168  03A7  2BA0               	goto	u875
  3169  03A8  0827               	movf	??_I2C_Master_Init+3,w
  3170  03A9  00F3               	movwf	___lldiv@divisor+3
  3171  03AA  0826               	movf	??_I2C_Master_Init+2,w
  3172  03AB  00F2               	movwf	___lldiv@divisor+2
  3173  03AC  0825               	movf	??_I2C_Master_Init+1,w
  3174  03AD  00F1               	movwf	___lldiv@divisor+1
  3175  03AE  0824               	movf	??_I2C_Master_Init,w
  3176  03AF  00F0               	movwf	___lldiv@divisor
  3177  03B0  3000               	movlw	0
  3178  03B1  00F7               	movwf	___lldiv@dividend+3
  3179  03B2  307A               	movlw	122
  3180  03B3  00F6               	movwf	___lldiv@dividend+2
  3181  03B4  3012               	movlw	18
  3182  03B5  00F5               	movwf	___lldiv@dividend+1
  3183  03B6  3000               	movlw	0
  3184  03B7  00F4               	movwf	___lldiv@dividend
  3185  03B8  120A  118A  24D5  120A  118A  	fcall	___lldiv
  3186  03BD  0870               	movf	?___lldiv,w
  3187  03BE  3EFF               	addlw	255
  3188  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3189  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  3190  03C1  0093               	movwf	19	;volatile
  3191  03C2                     l1381:	
  3192                           
  3193                           ;I2C.c: 21:     SSPSTAT = 0;
  3194  03C2  0194               	clrf	20	;volatile
  3195  03C3                     l1383:	
  3196                           
  3197                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3198  03C3  1587               	bsf	7,3	;volatile
  3199  03C4                     l1385:	
  3200                           
  3201                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3202  03C4  1607               	bsf	7,4	;volatile
  3203  03C5                     l29:	
  3204  03C5  0008               	return
  3205  03C6                     __end_of_I2C_Master_Init:	
  3206                           
  3207                           	psect	text20
  3208  04D5                     __ptext20:	
  3209 ;; *************** function ___lldiv *****************
  3210 ;; Defined at:
  3211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  divisor         4    0[COMMON] unsigned long 
  3214 ;;  dividend        4    4[COMMON] unsigned long 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  quotient        4    9[COMMON] unsigned long 
  3217 ;;  counter         1   13[COMMON] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  4    0[COMMON] unsigned long 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         8       0       0       0       0
  3228 ;;      Locals:         5       0       0       0       0
  3229 ;;      Temps:          1       0       0       0       0
  3230 ;;      Totals:        14       0       0       0       0
  3231 ;;Total ram usage:       14 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_I2C_Master_Init
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function ___lldiv
  3242  04D5                     ___lldiv:	
  3243  04D5                     l1351:	
  3244                           ;incstack = 0
  3245                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3246                           
  3247  04D5  3000               	movlw	0
  3248  04D6  00FC               	movwf	___lldiv@quotient+3
  3249  04D7  3000               	movlw	0
  3250  04D8  00FB               	movwf	___lldiv@quotient+2
  3251  04D9  3000               	movlw	0
  3252  04DA  00FA               	movwf	___lldiv@quotient+1
  3253  04DB  3000               	movlw	0
  3254  04DC  00F9               	movwf	___lldiv@quotient
  3255  04DD  0873               	movf	___lldiv@divisor+3,w
  3256  04DE  0472               	iorwf	___lldiv@divisor+2,w
  3257  04DF  0471               	iorwf	___lldiv@divisor+1,w
  3258  04E0  0470               	iorwf	___lldiv@divisor,w
  3259  04E1  1903               	skipnz
  3260  04E2  2CE4               	goto	u801
  3261  04E3  2CE5               	goto	u800
  3262  04E4                     u801:	
  3263  04E4  2D32               	goto	l1371
  3264  04E5                     u800:	
  3265  04E5                     l1353:	
  3266  04E5  01FD               	clrf	___lldiv@counter
  3267  04E6  0AFD               	incf	___lldiv@counter,f
  3268  04E7  2CF5               	goto	l1357
  3269  04E8                     l1355:	
  3270  04E8  3001               	movlw	1
  3271  04E9  00F8               	movwf	??___lldiv
  3272  04EA                     u815:	
  3273  04EA  1003               	clrc
  3274  04EB  0DF0               	rlf	___lldiv@divisor,f
  3275  04EC  0DF1               	rlf	___lldiv@divisor+1,f
  3276  04ED  0DF2               	rlf	___lldiv@divisor+2,f
  3277  04EE  0DF3               	rlf	___lldiv@divisor+3,f
  3278  04EF  0BF8               	decfsz	??___lldiv,f
  3279  04F0  2CEA               	goto	u815
  3280  04F1  3001               	movlw	1
  3281  04F2  00F8               	movwf	??___lldiv
  3282  04F3  0878               	movf	??___lldiv,w
  3283  04F4  07FD               	addwf	___lldiv@counter,f
  3284  04F5                     l1357:	
  3285  04F5  1FF3               	btfss	___lldiv@divisor+3,7
  3286  04F6  2CF8               	goto	u821
  3287  04F7  2CF9               	goto	u820
  3288  04F8                     u821:	
  3289  04F8  2CE8               	goto	l1355
  3290  04F9                     u820:	
  3291  04F9                     l1359:	
  3292  04F9  3001               	movlw	1
  3293  04FA  00F8               	movwf	??___lldiv
  3294  04FB                     u835:	
  3295  04FB  1003               	clrc
  3296  04FC  0DF9               	rlf	___lldiv@quotient,f
  3297  04FD  0DFA               	rlf	___lldiv@quotient+1,f
  3298  04FE  0DFB               	rlf	___lldiv@quotient+2,f
  3299  04FF  0DFC               	rlf	___lldiv@quotient+3,f
  3300  0500  0BF8               	decfsz	??___lldiv,f
  3301  0501  2CFB               	goto	u835
  3302  0502                     l1361:	
  3303  0502  0873               	movf	___lldiv@divisor+3,w
  3304  0503  0277               	subwf	___lldiv@dividend+3,w
  3305  0504  1D03               	skipz
  3306  0505  2D10               	goto	u845
  3307  0506  0872               	movf	___lldiv@divisor+2,w
  3308  0507  0276               	subwf	___lldiv@dividend+2,w
  3309  0508  1D03               	skipz
  3310  0509  2D10               	goto	u845
  3311  050A  0871               	movf	___lldiv@divisor+1,w
  3312  050B  0275               	subwf	___lldiv@dividend+1,w
  3313  050C  1D03               	skipz
  3314  050D  2D10               	goto	u845
  3315  050E  0870               	movf	___lldiv@divisor,w
  3316  050F  0274               	subwf	___lldiv@dividend,w
  3317  0510                     u845:	
  3318  0510  1C03               	skipc
  3319  0511  2D13               	goto	u841
  3320  0512  2D14               	goto	u840
  3321  0513                     u841:	
  3322  0513  2D23               	goto	l1367
  3323  0514                     u840:	
  3324  0514                     l1363:	
  3325  0514  0870               	movf	___lldiv@divisor,w
  3326  0515  02F4               	subwf	___lldiv@dividend,f
  3327  0516  0871               	movf	___lldiv@divisor+1,w
  3328  0517  1C03               	skipc
  3329  0518  0F71               	incfsz	___lldiv@divisor+1,w
  3330  0519  02F5               	subwf	___lldiv@dividend+1,f
  3331  051A  0872               	movf	___lldiv@divisor+2,w
  3332  051B  1C03               	skipc
  3333  051C  0F72               	incfsz	___lldiv@divisor+2,w
  3334  051D  02F6               	subwf	___lldiv@dividend+2,f
  3335  051E  0873               	movf	___lldiv@divisor+3,w
  3336  051F  1C03               	skipc
  3337  0520  0F73               	incfsz	___lldiv@divisor+3,w
  3338  0521  02F7               	subwf	___lldiv@dividend+3,f
  3339  0522                     l1365:	
  3340  0522  1479               	bsf	___lldiv@quotient,0
  3341  0523                     l1367:	
  3342  0523  3001               	movlw	1
  3343  0524                     u855:	
  3344  0524  1003               	clrc
  3345  0525  0CF3               	rrf	___lldiv@divisor+3,f
  3346  0526  0CF2               	rrf	___lldiv@divisor+2,f
  3347  0527  0CF1               	rrf	___lldiv@divisor+1,f
  3348  0528  0CF0               	rrf	___lldiv@divisor,f
  3349  0529  3EFF               	addlw	-1
  3350  052A  1D03               	skipz
  3351  052B  2D24               	goto	u855
  3352  052C                     l1369:	
  3353  052C  3001               	movlw	1
  3354  052D  02FD               	subwf	___lldiv@counter,f
  3355  052E  1D03               	btfss	3,2
  3356  052F  2D31               	goto	u861
  3357  0530  2D32               	goto	u860
  3358  0531                     u861:	
  3359  0531  2CF9               	goto	l1359
  3360  0532                     u860:	
  3361  0532                     l1371:	
  3362  0532  087C               	movf	___lldiv@quotient+3,w
  3363  0533  00F3               	movwf	?___lldiv+3
  3364  0534  087B               	movf	___lldiv@quotient+2,w
  3365  0535  00F2               	movwf	?___lldiv+2
  3366  0536  087A               	movf	___lldiv@quotient+1,w
  3367  0537  00F1               	movwf	?___lldiv+1
  3368  0538  0879               	movf	___lldiv@quotient,w
  3369  0539  00F0               	movwf	?___lldiv
  3370  053A                     l305:	
  3371  053A  0008               	return
  3372  053B                     __end_of___lldiv:	
  3373  007E                     btemp	set	126	;btemp
  3374  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> Lcd_Write_Int@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@var	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> Lcd_Write_Int@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _initLCD->_Lcd_Cmd
    ___awdiv->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Int
    _Lcd_Write_Int->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4550
                                             21 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                      _Lcd_Write_Int
                   _Lcd_Write_String
                            ___awdiv
                             ___bmul
                             ___wmul
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                        8     8      0    1779
                                             13 BANK0      8     8      0
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     492
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     566
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _initLCD
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1D       5       36.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 22:11:26 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
                       l32 02B8                         l50 0385                         l35 02C4  
                       l51 0388                         l52 038D                         l44 02AD  
                       l29 03C5                         l38 02A4                         l47 02B7  
                       l71 02D8                         l74 029B                         l82 02EC  
                       l91 033A                         l68 04D4                         l79 031C  
                       l88 0441               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072                        l305 053A                        l422 05A3  
                      l271 035F                        l265 068B                        l541 0485  
                      l269 0347                        l551 03FF                        l295 0301  
                      _GIE 005F                        u610 0481               __CFG_CPD$OFF 0000  
                      u611 0480                        u700 040D                        u620 03CC  
                      u605 0475                        u621 03CB                        u710 042F  
                      u550 044A                        u551 0449                        u800 04E5  
                      u720 0441                        u640 03DE                        u801 04E4  
                      u721 0440                        u641 03DD                        u570 045C  
                      u650 03E8                        u730 05B2                        u571 045B  
                      u651 03E7                        u635 03D0                        u731 05B1  
                      u820 04F9                        u900 0315                        u740 05EC  
                      u821 04F8                        u901 0314                        u565 044E  
                      u741 05EB                        u590 046D                        u670 03FB  
                      u750 0612                        u910 0341                        u815 04EA  
                      u591 046C                        u671 03FA                        u655 03E4  
                      u751 0611                        u911 0340                        u840 0514  
                      u680 02BE                        u760 061D                        u841 0513  
                      u681 02BD                        u585 045D                        u665 03EF  
                      u761 061C                        u690 02C4                        u770 0623  
                      u835 04FB                        u691 02C3                        u595 0469  
                      u771 0622                        u755 060E                        u860 0532  
                      u780 0675                        u940 035B                        u861 0531  
                      u845 0510                        u781 0674                        u941 035A  
                      u925 0348                        u870 03A5                        u790 0687  
                      u950 02F3                        u855 0524                        u791 0686  
                      u951 02F2                        u935 034F                        u880 0381  
                      u960 0300                        u881 0380                        u961 02FF  
                      u890 0308                        u970 0542                        u875 03A0  
                      u891 0307                        u971 0541                        u980 054D  
                      u981 054C                        u990 055E                        u991 055D  
                      fsr0 0004                        indf 0000               __CFG_LVP$OFF 0000  
                     l1213 02DA                       l1221 0442                       l1301 05BF  
                     l1215 02DD                       l1231 0458                       l1223 0444  
                     l1311 05F0                       l1303 05DC                       l1401 0365  
                     l1217 02DF                       l1241 047B                       l1233 045C  
                     l1225 044A                       l1313 05F5                       l1305 05E4  
                     l1411 0389                       l1403 036D                       l1219 02E9  
                     l1235 046D                       l1227 044D                       l1243 0481  
                     l1251 03CF                       l1331 062E                       l1323 0613  
                     l1307 05E8                       l1405 0376                       l1237 0473  
                     l1229 0454                       l1261 03EE                       l1253 03D6  
                     l1333 0633                       l1325 061D                       l1309 05EC  
                     l1341 0675                       l1501 0570                       l1421 04A3  
                     l1351 04D5                       l1271 02BE                       l1407 037B  
                     l1239 0474                       l1263 03F5                       l1255 03DA  
                     l1247 03C6                       l1335 0661                       l1327 0623  
                     l1319 05F7                       l1343 0687                       l1503 0581  
                     l1511 0595                       l1431 04C8                       l1423 04AB  
                     l1415 0486                       l1361 0502                       l1353 04E5  
                     l1409 0381                       l1273 02C6                       l1441 030F  
                     l1281 0400                       l1257 03DE                       l1249 03CC  
                     l1265 03FB                       l1337 0668                       l1329 062A  
                     l1513 059A                       l1505 0587                       l1433 04CE  
                     l1425 04B6                       l1417 048E                       l1601 07AD  
                     l1363 0514                       l1355 04E8                       l1371 0532  
                     l1275 02C9                       l1435 0295                       l1443 0315  
                     l1283 0403                       l1259 03E8                       l1339 066C  
                     l1291 05AC                       l1515 059F                       l1507 0588  
                     l1451 0341                       l1427 04BC                       l1419 0494  
                     l1611 07D6                       l1603 07B5                       l1531 0693  
                     l1523 068C                       l1365 0522                       l1357 04F5  
                     l1381 03C2                       l1269 02B8                       l1277 02CB  
                     l1437 0303                       l1285 041F                       l1293 05B2  
                     l1445 0320                       l1509 058F                       l1461 02EE  
                     l1453 034E                       l1429 04C2                       l1613 07DF  
                     l1605 07BB                       l1541 069C                       l1533 0696  
                     l1525 0690                       l1367 0523                       l1359 04F9  
                     l1383 03C3                       l1375 038E                       l1391 02A5  
                     l1279 02D5                       l1439 0308                       l1287 0425  
                     l1295 05B9                       l1471 0300                       l1463 02EF  
                     l1455 0355                       l1447 033B                       l1615 07E9  
                     l1607 07C3                       l1551 06C2                       l1543 06A1  
                     l1535 0699                       l1527 0691                       l1369 052C  
                     l1385 03C4                       l1377 0392                       l1393 02AA  
                     l1297 05BE                       l1289 05A7                       l1481 0547  
                     l1465 02F3                       l1457 035B                       l1449 033D  
                     l1609 07CD                       l1561 06ED                       l1553 06CB  
                     l1545 06A6                       l1537 069A                       l1529 0692  
                     l1379 0395                       l1387 029C                       l1395 02AE  
                     l1491 0558                       l1483 0549                       l1475 053B  
                     l1467 02F7                       l1571 0718                       l1563 06F2  
                     l1555 06D3                       l1547 06B5                       l1539 069B  
                     l1389 02A1                       l1397 02B3                       l1637 05D1  
                     l1493 055E                       l1485 054D                       l1477 053E  
                     l1469 02F9                       l1581 0743                       l1573 071D  
                     l1565 06FB                       l1557 06DC                       l1549 06BA  
                     l1399 0360                       l1495 0561                       l1487 0552  
                     l1479 0542                       l1591 078A                       l1583 0768  
                     l1575 0726                       l1567 0709                       l1559 06E4  
                     l1497 0568                       l1489 0556                       l1593 0792  
                     l1585 076C                       l1577 0734                       l1569 070E  
                     l1499 056C                       l1595 0798                       l1587 077C  
                     l1579 0739                       l1597 07A0                       l1589 0780  
                     l1599 07A7                       STR_1 0026                       STR_2 001D  
                     STR_3 0020                       STR_4 0023                       STR_5 0029  
                     u1010 0570                       u1011 056F                       u1005 0562  
                     u1030 0581                       u1031 0580                       u1025 0571  
                     u1050 0595                       u1051 0594                       u1035 057D  
                     u1107 073F                       u1060 059A                       u1061 0599  
                     u1045 0589                       u1117 048A                       u1070 07A0  
                     u1127 0498                       u1071 079F                       u1080 07C3  
                     u1137 04A7                       u1081 07C2                       u1147 04B3  
                     u1157 02E4                       u1167 02D0                       u1097 0714  
                     _PEIE 005E        Lcd_Write_String@var 0073               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0073                       _main 068C                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075              __CFG_IESO$OFF 0000  
          __end_of_Lcd_Cmd 02D9          ___bmul@multiplier 0073           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 05A4                      _DEC_1 0039  
                    _DEC_2 0038              __CFG_WDTE$OFF 0000                      _ANSEL 0188  
          __end_of___lldiv 053B            ___awdiv@divisor 0076            __end_of___lwdiv 0486  
                    _ENT_1 003A            __end_of___lwmod 0400            ___awdiv@counter 0020  
                    _VAL_1 003C                      _VAL_2 003B                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 001B                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063             __CFG_FCMEN$OFF 0000            __end_of_initLCD 04D5  
          __end_of_dpowers 001D             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 068C  
           __CFG_MCLRE$OFF 0000            __initialization 07F5               __end_of_main 07F5  
                   ??_main 0035         __size_of_Lcd_Clear 0007          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0078                  ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0014  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                   ___bmul 02ED                     ___wmul 033B                  ??___awdiv 007A  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 007C  
         ___awdiv@quotient 0022      __end_of_Lcd_Write_Int 033B                  ??_initLCD 0073  
                ??_sprintf 0023    __end_of__initialization 07FC          __end_of_Lcd_Clear 029C  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0302  
               __pbssBANK0 0038                 __pmaintext 068C                    ?___bmul 0070  
                  ?___wmul 0070  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 031D  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 02D9                    _Lcd_Cmd 02C5            __size_of___bmul 0015  
                  ___awdiv 053B                    ___lldiv 04D5            __size_of___wmul 0025  
                  ___lwdiv 0442                    ___lwmod 03C6            ?_Lcd_Set_Cursor 0073  
                  __ptext1 0486                    __ptext2 033B                    __ptext3 02ED  
                  __ptext4 053B                    __ptext5 031D                    __ptext6 05A4  
                  __ptext7 03C6                    __ptext8 0442                    __ptext9 0400  
                  _initLCD 0486                    _dpowers 0013   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 05A4     __end_of_Lcd_Write_Char 02ED       end_of_initialization 07FC  
        Lcd_Write_Char@var 0072  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  _PORTBbits 0006                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@i 0078                  _Lcd_Clear 0295  
           __end_of___bmul 0302             __end_of___wmul 0360           _Lcd_Write_String 0400  
      start_initialization 07F5          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
   __size_of_Lcd_Write_Int 001E                 ?_Lcd_Clear 0070                   ??___bmul 0071  
                 ??___wmul 0074                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070                sprintf@flag 0027                sprintf@prec 0028  
         _I2C_Master_Start 029C           _I2C_Master_Write 02AE           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0074                   ?___awdiv 0076                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0003  
                 ?_initLCD 0070              _Lcd_Write_Int 031D           ___lwdiv@quotient 0075  
                 ?_sprintf 0020             ___wmul@product 0074                ??_Lcd_Clear 0073  
              __stringbase 0012          ___wmul@multiplier 0070             ?_Lcd_Write_Int 0070  
         ??_Lcd_Write_Char 0070        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0442  
         __size_of_Lcd_Cmd 0014           __size_of___awdiv 0069           __size_of___lldiv 0066  
           Lcd_Cmd@command 0072           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013                 sprintf@val 0029            _I2C_Master_Init 038E  
          _I2C_Master_Read 0360           __size_of_initLCD 004F            _I2C_Master_Wait 02B8  
          _I2C_Master_Stop 02A5            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 02D9                   __ptext11 0302                   __ptext20 04D5  
                 __ptext12 0295                   __ptext13 02C5                   __ptext14 02AE  
                 __ptext15 02A5                   __ptext16 029C                   __ptext17 0360  
                 __ptext18 02B8                   __ptext19 038E          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 00E8              __size_of_main 0169            ??_Lcd_Write_Int 002D  
 __end_of_I2C_Master_Start 02A5   __end_of_I2C_Master_Write 02B8        Lcd_Write_Int@buffer 0030  
      Lcd_Write_Int@numero 0034                  sprintf@ap 0026                  sprintf@sp 002B  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Init 03C6    __end_of_I2C_Master_Read 038E    __end_of_I2C_Master_Wait 02C5  
  __end_of_I2C_Master_Stop 02AE         Lcd_Set_Cursor@posx 0074         Lcd_Set_Cursor@posy 0073  
                 sprintf@c 002C                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
