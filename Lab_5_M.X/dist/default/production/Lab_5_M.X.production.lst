

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 24 09:37:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0003                     __pstrings:	
   381  0003                     stringtab:	
   382  0003                     __stringtab:	
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385  0003  1BFF               	btfsc	btemp+1,7
   386  0004  280D               	ljmp	stringcode
   387  0005  1383               	bcf	3,7
   388  0006  187F               	btfsc	btemp+1,0
   389  0007  1783               	bsf	3,7
   390  0008  0800               	movf	0,w
   391  0009  0A84               	incf	4,f
   392  000A  1903               	skipnz
   393  000B  0AFF               	incf	btemp+1,f
   394  000C  0008               	return
   395  000D                     stringcode:	
   396  000D                     stringdir:	
   397  000D  3000               	movlw	high stringdir
   398  000E  008A               	movwf	10
   399  000F  0804               	movf	4,w
   400  0010  0A84               	incf	4,f
   401  0011  0782               	addwf	2,f
   402  0012                     __stringbase:	
   403  0012  3400               	retlw	0
   404  0013                     __end_of__stringtab:	
   405  0013                     _dpowers:	
   406  0013  3401               	retlw	1
   407  0014  3400               	retlw	0
   408  0015  340A               	retlw	10
   409  0016  3400               	retlw	0
   410  0017  3464               	retlw	100
   411  0018  3400               	retlw	0
   412  0019  34E8               	retlw	232
   413  001A  3403               	retlw	3
   414  001B  3410               	retlw	16
   415  001C  3427               	retlw	39
   416  001D                     __end_of_dpowers:	
   417  0007                     _PORTC	set	7
   418  0006                     _PORTB	set	6
   419  0005                     _PORTA	set	5
   420  0008                     _PORTD	set	8
   421  0006                     _PORTBbits	set	6
   422  0013                     _SSPBUF	set	19
   423  0014                     _SSPCON	set	20
   424  0063                     _SSPIF	set	99
   425  005E                     _PEIE	set	94
   426  005F                     _GIE	set	95
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0086                     _TRISB	set	134
   430  0085                     _TRISA	set	133
   431  0091                     _SSPCON2bits	set	145
   432  0087                     _TRISCbits	set	135
   433  0094                     _SSPSTAT	set	148
   434  0093                     _SSPADD	set	147
   435  0091                     _SSPCON2	set	145
   436  0463                     _SSPIE	set	1123
   437  043C                     _TRISC4	set	1084
   438  043B                     _TRISC3	set	1083
   439  0188                     _ANSEL	set	392
   440  001D                     STR_2:	
   441  001D  3453               	retlw	83	;'S'
   442  001E  3431               	retlw	49	;'1'
   443  001F  3400               	retlw	0
   444  0020                     STR_3:	
   445  0020  3453               	retlw	83	;'S'
   446  0021  3432               	retlw	50	;'2'
   447  0022  3400               	retlw	0
   448  0023                     STR_4:	
   449  0023  3453               	retlw	83	;'S'
   450  0024  3433               	retlw	51	;'3'
   451  0025  3400               	retlw	0
   452  0026                     STR_1:	
   453  0026  3425               	retlw	37	;'%'
   454  0027  3464               	retlw	100	;'d'
   455  0028  3400               	retlw	0
   456  0029                     STR_5:	
   457  0029  3430               	retlw	48	;'0'
   458  002A  3400               	retlw	0
   459                           
   460                           ; #config settings
   461  0000                     
   462                           	psect	cinit
   463  07F5                     start_initialization:	
   464  07F5                     __initialization:	
   465                           
   466                           ; Clear objects allocated to BANK0
   467  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   468  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   469  07F7  01B8               	clrf	__pbssBANK0& (0+127)
   470  07F8  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   471  07F9  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   472  07FA  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   473  07FB  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   474  07FC                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  07FC                     __end_of__initialization:	
   478  07FC  0183               	clrf	3
   479  07FD  120A  118A  2E92   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssBANK0
   482  0038                     __pbssBANK0:	
   483  0038                     _DEC_2:	
   484  0038                     	ds	1
   485  0039                     _DEC_1:	
   486  0039                     	ds	1
   487  003A                     _ENT_1:	
   488  003A                     	ds	1
   489  003B                     _VAL_2:	
   490  003B                     	ds	1
   491  003C                     _VAL_1:	
   492  003C                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_Lcd_Cmd:	
   497  0070                     ??_Lcd_Cmd:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_I2C_Master_Wait:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_I2C_Master_Wait:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_I2C_Master_Start:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_I2C_Master_Start:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_I2C_Master_Stop:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_I2C_Master_Stop:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_I2C_Master_Write:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_initLCD:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Lcd_Clear:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_Lcd_Write_Char:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_Lcd_Write_Char:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Lcd_Write_Int:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?___bmul:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_I2C_Master_Read:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?___wmul:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     ?___lwdiv:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     ?___lldiv:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ___bmul@multiplicand:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0070                     I2C_Master_Write@d:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     I2C_Master_Read@a:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ___wmul@multiplier:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ___lwdiv@divisor:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ___lldiv@divisor:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574  0070                     	ds	1
   575  0071                     ??___bmul:	
   576                           
   577                           ; 1 bytes @ 0x1
   578  0071                     	ds	1
   579  0072                     ??_I2C_Master_Write:	
   580  0072                     ??_I2C_Master_Read:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     Lcd_Cmd@command:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     Lcd_Write_Char@var:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     ___bmul@product:	
   590                           ; 1 bytes @ 0x2
   591                           
   592  0072                     ___wmul@multiplicand:	
   593                           ; 1 bytes @ 0x2
   594                           
   595  0072                     ___lwdiv@dividend:	
   596                           ; 2 bytes @ 0x2
   597                           
   598                           
   599                           ; 2 bytes @ 0x2
   600  0072                     	ds	1
   601  0073                     ??_initLCD:	
   602  0073                     ??_Lcd_Clear:	
   603                           ; 1 bytes @ 0x3
   604                           
   605  0073                     ?_Lcd_Set_Cursor:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     ?_Lcd_Write_String:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     Lcd_Set_Cursor@posy:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ___bmul@multiplier:	
   615                           ; 1 bytes @ 0x3
   616                           
   617  0073                     Lcd_Write_String@var:	
   618                           ; 1 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622  0073                     	ds	1
   623  0074                     ??_Lcd_Set_Cursor:	
   624  0074                     ??___wmul:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ??___lwdiv:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     Lcd_Set_Cursor@posx:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     I2C_Master_Read@temp:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ___wmul@product:	
   637                           ; 2 bytes @ 0x4
   638                           
   639  0074                     ___lldiv@dividend:	
   640                           ; 2 bytes @ 0x4
   641                           
   642                           
   643                           ; 4 bytes @ 0x4
   644  0074                     	ds	1
   645  0075                     ??_Lcd_Write_String:	
   646  0075                     ___lwdiv@quotient:	
   647                           ; 1 bytes @ 0x5
   648                           
   649                           
   650                           ; 2 bytes @ 0x5
   651  0075                     	ds	1
   652  0076                     ?___awdiv:	
   653  0076                     ___awdiv@divisor:	
   654                           ; 2 bytes @ 0x6
   655                           
   656                           
   657                           ; 2 bytes @ 0x6
   658  0076                     	ds	1
   659  0077                     ___lwdiv@counter:	
   660                           
   661                           ; 1 bytes @ 0x7
   662  0077                     	ds	1
   663  0078                     ??___lldiv:	
   664  0078                     ?___lwmod:	
   665                           ; 1 bytes @ 0x8
   666                           
   667  0078                     Lcd_Write_String@i:	
   668                           ; 2 bytes @ 0x8
   669                           
   670  0078                     ___awdiv@dividend:	
   671                           ; 2 bytes @ 0x8
   672                           
   673  0078                     ___lwmod@divisor:	
   674                           ; 2 bytes @ 0x8
   675                           
   676                           
   677                           ; 2 bytes @ 0x8
   678  0078                     	ds	1
   679  0079                     ___lldiv@quotient:	
   680                           
   681                           ; 4 bytes @ 0x9
   682  0079                     	ds	1
   683  007A                     ??___awdiv:	
   684  007A                     ___lwmod@dividend:	
   685                           ; 1 bytes @ 0xA
   686                           
   687                           
   688                           ; 2 bytes @ 0xA
   689  007A                     	ds	2
   690  007C                     ??___lwmod:	
   691                           
   692                           ; 1 bytes @ 0xC
   693  007C                     	ds	1
   694  007D                     ___lldiv@counter:	
   695  007D                     ___lwmod@counter:	
   696                           ; 1 bytes @ 0xD
   697                           
   698                           
   699                           ; 1 bytes @ 0xD
   700  007D                     	ds	1
   701                           
   702                           	psect	cstackBANK0
   703  0020                     __pcstackBANK0:	
   704  0020                     ?_I2C_Master_Init:	
   705  0020                     ?_sprintf:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     sprintf@f:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0020                     ___awdiv@counter:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     I2C_Master_Init@c:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719  0020                     	ds	1
   720  0021                     ___awdiv@sign:	
   721                           
   722                           ; 1 bytes @ 0x1
   723  0021                     	ds	1
   724  0022                     ___awdiv@quotient:	
   725                           
   726                           ; 2 bytes @ 0x2
   727  0022                     	ds	1
   728  0023                     ??_sprintf:	
   729                           
   730                           ; 1 bytes @ 0x3
   731  0023                     	ds	1
   732  0024                     ??_I2C_Master_Init:	
   733                           
   734                           ; 1 bytes @ 0x4
   735  0024                     	ds	2
   736  0026                     sprintf@ap:	
   737                           
   738                           ; 1 bytes @ 0x6
   739  0026                     	ds	1
   740  0027                     sprintf@flag:	
   741                           
   742                           ; 1 bytes @ 0x7
   743  0027                     	ds	1
   744  0028                     sprintf@prec:	
   745                           
   746                           ; 1 bytes @ 0x8
   747  0028                     	ds	1
   748  0029                     sprintf@val:	
   749                           
   750                           ; 2 bytes @ 0x9
   751  0029                     	ds	2
   752  002B                     sprintf@sp:	
   753                           
   754                           ; 1 bytes @ 0xB
   755  002B                     	ds	1
   756  002C                     sprintf@c:	
   757                           
   758                           ; 1 bytes @ 0xC
   759  002C                     	ds	1
   760  002D                     ??_Lcd_Write_Int:	
   761                           
   762                           ; 1 bytes @ 0xD
   763  002D                     	ds	3
   764  0030                     Lcd_Write_Int@buffer:	
   765                           
   766                           ; 4 bytes @ 0x10
   767  0030                     	ds	4
   768  0034                     Lcd_Write_Int@numero:	
   769                           
   770                           ; 1 bytes @ 0x14
   771  0034                     	ds	1
   772  0035                     ??_main:	
   773                           
   774                           ; 1 bytes @ 0x15
   775  0035                     	ds	3
   776                           
   777                           	psect	maintext
   778  0692                     __pmaintext:	
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 47 in file "Master.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       3       0       0       0
   801 ;;      Totals:         0       3       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		_I2C_Master_Init
   806 ;;		_I2C_Master_Read
   807 ;;		_I2C_Master_Start
   808 ;;		_I2C_Master_Stop
   809 ;;		_I2C_Master_Write
   810 ;;		_Lcd_Clear
   811 ;;		_Lcd_Set_Cursor
   812 ;;		_Lcd_Write_Char
   813 ;;		_Lcd_Write_Int
   814 ;;		_Lcd_Write_String
   815 ;;		___awdiv
   816 ;;		___bmul
   817 ;;		___wmul
   818 ;;		_initLCD
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _main
   826  0692                     _main:	
   827  0692                     l1521:	
   828                           ;incstack = 0
   829                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   830                           
   831                           
   832                           ;Master.c: 50:     TRISA = 0b11111111;
   833  0692  30FF               	movlw	255
   834  0693  1683               	bsf	3,5	;RP0=1, select bank1
   835  0694  1303               	bcf	3,6	;RP1=0, select bank1
   836  0695  0085               	movwf	5	;volatile
   837  0696                     l1523:	
   838                           
   839                           ;Master.c: 51:     TRISB = 0;
   840  0696  0186               	clrf	6	;volatile
   841  0697                     l1525:	
   842                           
   843                           ;Master.c: 52:     TRISC = 0;
   844  0697  0187               	clrf	7	;volatile
   845  0698                     l1527:	
   846                           
   847                           ;Master.c: 53:     TRISD = 0;
   848  0698  0188               	clrf	8	;volatile
   849  0699                     l1529:	
   850                           
   851                           ;Master.c: 55:     ANSEL = 0;
   852  0699  1683               	bsf	3,5	;RP0=1, select bank3
   853  069A  1703               	bsf	3,6	;RP1=1, select bank3
   854  069B  0188               	clrf	8	;volatile
   855  069C                     l1531:	
   856                           
   857                           ;Master.c: 57:     PORTA = 0;
   858  069C  1283               	bcf	3,5	;RP0=0, select bank0
   859  069D  1303               	bcf	3,6	;RP1=0, select bank0
   860  069E  0185               	clrf	5	;volatile
   861  069F                     l1533:	
   862                           
   863                           ;Master.c: 58:     PORTB = 0;
   864  069F  0186               	clrf	6	;volatile
   865  06A0                     l1535:	
   866                           
   867                           ;Master.c: 59:     PORTC = 0;
   868  06A0  0187               	clrf	7	;volatile
   869  06A1                     l1537:	
   870                           
   871                           ;Master.c: 60:     PORTD = 0;
   872  06A1  0188               	clrf	8	;volatile
   873  06A2                     l1539:	
   874                           
   875                           ;Master.c: 63:     initLCD();
   876  06A2  120A  118A  248C  120A  118A  	fcall	_initLCD
   877  06A7                     l1541:	
   878                           
   879                           ;Master.c: 64:     Lcd_Clear();
   880  06A7  120A  118A  229B  120A  118A  	fcall	_Lcd_Clear
   881  06AC                     l1543:	
   882                           
   883                           ;Master.c: 65:     I2C_Master_Init(100000);
   884  06AC  3000               	movlw	0
   885  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   886  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   887  06AF  00A3               	movwf	I2C_Master_Init@c+3
   888  06B0  3001               	movlw	1
   889  06B1  00A2               	movwf	I2C_Master_Init@c+2
   890  06B2  3086               	movlw	134
   891  06B3  00A1               	movwf	I2C_Master_Init@c+1
   892  06B4  30A0               	movlw	160
   893  06B5  00A0               	movwf	I2C_Master_Init@c
   894  06B6  120A  118A  2394  120A  118A  	fcall	_I2C_Master_Init
   895  06BB                     l1545:	
   896                           
   897                           ;Master.c: 66:     Lcd_Clear();
   898  06BB  120A  118A  229B  120A  118A  	fcall	_Lcd_Clear
   899  06C0                     l1547:	
   900                           
   901                           ;Master.c: 68:     Lcd_Set_Cursor(1,1);
   902  06C0  01F3               	clrf	Lcd_Set_Cursor@posy
   903  06C1  0AF3               	incf	Lcd_Set_Cursor@posy,f
   904  06C2  3001               	movlw	1
   905  06C3  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
   906  06C8                     l1549:	
   907                           
   908                           ;Master.c: 69:     Lcd_Write_String ("S1");
   909  06C8  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   910  06C9  00F3               	movwf	Lcd_Write_String@var
   911  06CA  3080               	movlw	128
   912  06CB  00F4               	movwf	Lcd_Write_String@var+1
   913  06CC  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
   914  06D1                     l1551:	
   915                           
   916                           ;Master.c: 70:     Lcd_Set_Cursor(7,1);
   917  06D1  01F3               	clrf	Lcd_Set_Cursor@posy
   918  06D2  0AF3               	incf	Lcd_Set_Cursor@posy,f
   919  06D3  3007               	movlw	7
   920  06D4  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
   921  06D9                     l1553:	
   922                           
   923                           ;Master.c: 71:     Lcd_Write_String ("S2");
   924  06D9  300E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   925  06DA  00F3               	movwf	Lcd_Write_String@var
   926  06DB  3080               	movlw	128
   927  06DC  00F4               	movwf	Lcd_Write_String@var+1
   928  06DD  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
   929  06E2                     l1555:	
   930                           
   931                           ;Master.c: 72:     Lcd_Set_Cursor(13,1);
   932  06E2  01F3               	clrf	Lcd_Set_Cursor@posy
   933  06E3  0AF3               	incf	Lcd_Set_Cursor@posy,f
   934  06E4  300D               	movlw	13
   935  06E5  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
   936  06EA                     l1557:	
   937                           
   938                           ;Master.c: 73:     Lcd_Write_String ("S3");
   939  06EA  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   940  06EB  00F3               	movwf	Lcd_Write_String@var
   941  06EC  3080               	movlw	128
   942  06ED  00F4               	movwf	Lcd_Write_String@var+1
   943  06EE  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
   944  06F3                     l1559:	
   945                           
   946                           ;Master.c: 78:         I2C_Master_Start();
   947  06F3  120A  118A  22A2  120A  118A  	fcall	_I2C_Master_Start
   948  06F8                     l1561:	
   949                           
   950                           ;Master.c: 79:         I2C_Master_Write(0x51);
   951  06F8  3051               	movlw	81
   952  06F9  00F0               	movwf	I2C_Master_Write@d
   953  06FA  3000               	movlw	0
   954  06FB  00F1               	movwf	I2C_Master_Write@d+1
   955  06FC  120A  118A  22B4  120A  118A  	fcall	_I2C_Master_Write
   956  0701                     l1563:	
   957                           
   958                           ;Master.c: 80:         VAL_1 = I2C_Master_Read(0);
   959  0701  3000               	movlw	0
   960  0702  00F0               	movwf	I2C_Master_Read@a
   961  0703  00F1               	movwf	I2C_Master_Read@a+1
   962  0704  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Read
   963  0709  0870               	movf	?_I2C_Master_Read,w
   964  070A  1283               	bcf	3,5	;RP0=0, select bank0
   965  070B  1303               	bcf	3,6	;RP1=0, select bank0
   966  070C  00B5               	movwf	??_main
   967  070D  0835               	movf	??_main,w
   968  070E  00BC               	movwf	_VAL_1
   969  070F                     l1565:	
   970                           
   971                           ;Master.c: 81:         I2C_Master_Stop();
   972  070F  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Stop
   973  0714                     l1567:	
   974                           
   975                           ;Master.c: 82:         _delay((unsigned long)((10)*(4000000/4000.0)));
   976  0714  300D               	movlw	13
   977  0715  1283               	bcf	3,5	;RP0=0, select bank0
   978  0716  1303               	bcf	3,6	;RP1=0, select bank0
   979  0717  00B6               	movwf	??_main+1
   980  0718  30FB               	movlw	251
   981  0719  00B5               	movwf	??_main
   982  071A                     u1097:	
   983  071A  0BB5               	decfsz	??_main,f
   984  071B  2F1A               	goto	u1097
   985  071C  0BB6               	decfsz	??_main+1,f
   986  071D  2F1A               	goto	u1097
   987  071E                     l1569:	
   988                           
   989                           ;Master.c: 84:         I2C_Master_Start();
   990  071E  120A  118A  22A2  120A  118A  	fcall	_I2C_Master_Start
   991  0723                     l1571:	
   992                           
   993                           ;Master.c: 85:         I2C_Master_Write(0x61);
   994  0723  3061               	movlw	97
   995  0724  00F0               	movwf	I2C_Master_Write@d
   996  0725  3000               	movlw	0
   997  0726  00F1               	movwf	I2C_Master_Write@d+1
   998  0727  120A  118A  22B4  120A  118A  	fcall	_I2C_Master_Write
   999  072C                     l1573:	
  1000                           
  1001                           ;Master.c: 86:         VAL_2 = I2C_Master_Read(0);
  1002  072C  3000               	movlw	0
  1003  072D  00F0               	movwf	I2C_Master_Read@a
  1004  072E  00F1               	movwf	I2C_Master_Read@a+1
  1005  072F  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Read
  1006  0734  0870               	movf	?_I2C_Master_Read,w
  1007  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0737  00B5               	movwf	??_main
  1010  0738  0835               	movf	??_main,w
  1011  0739  00BB               	movwf	_VAL_2
  1012  073A                     l1575:	
  1013                           
  1014                           ;Master.c: 87:         I2C_Master_Stop();
  1015  073A  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Stop
  1016  073F                     l1577:	
  1017                           
  1018                           ;Master.c: 88:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1019  073F  300D               	movlw	13
  1020  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0742  00B6               	movwf	??_main+1
  1023  0743  30FB               	movlw	251
  1024  0744  00B5               	movwf	??_main
  1025  0745                     u1107:	
  1026  0745  0BB5               	decfsz	??_main,f
  1027  0746  2F45               	goto	u1107
  1028  0747  0BB6               	decfsz	??_main+1,f
  1029  0748  2F45               	goto	u1107
  1030  0749                     l1579:	
  1031                           
  1032                           ;Master.c: 90:         VAL_1 = VAL_1 * 5/255;
  1033  0749  30FF               	movlw	255
  1034  074A  00F6               	movwf	___awdiv@divisor
  1035  074B  3000               	movlw	0
  1036  074C  00F7               	movwf	___awdiv@divisor+1
  1037  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1038  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1039  074F  083C               	movf	_VAL_1,w
  1040  0750  00B5               	movwf	??_main
  1041  0751  01B6               	clrf	??_main+1
  1042  0752  0835               	movf	??_main,w
  1043  0753  00F0               	movwf	___wmul@multiplier
  1044  0754  0836               	movf	??_main+1,w
  1045  0755  00F1               	movwf	___wmul@multiplier+1
  1046  0756  3005               	movlw	5
  1047  0757  00F2               	movwf	___wmul@multiplicand
  1048  0758  3000               	movlw	0
  1049  0759  00F3               	movwf	___wmul@multiplicand+1
  1050  075A  120A  118A  2341  120A  118A  	fcall	___wmul
  1051  075F  0871               	movf	?___wmul+1,w
  1052  0760  00F9               	movwf	___awdiv@dividend+1
  1053  0761  0870               	movf	?___wmul,w
  1054  0762  00F8               	movwf	___awdiv@dividend
  1055  0763  120A  118A  2541  120A  118A  	fcall	___awdiv
  1056  0768  0876               	movf	?___awdiv,w
  1057  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1058  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1059  076B  00B7               	movwf	??_main+2
  1060  076C  0837               	movf	??_main+2,w
  1061  076D  00BC               	movwf	_VAL_1
  1062  076E                     l1581:	
  1063                           
  1064                           ;Master.c: 91:         ENT_1 = VAL_1;
  1065  076E  083C               	movf	_VAL_1,w
  1066  076F  00B5               	movwf	??_main
  1067  0770  0835               	movf	??_main,w
  1068  0771  00BA               	movwf	_ENT_1
  1069  0772                     l1583:	
  1070                           
  1071                           ;Master.c: 92:         DEC_2 = (VAL_1 - ENT_1)*100;
  1072  0772  3064               	movlw	100
  1073  0773  00B5               	movwf	??_main
  1074  0774  0835               	movf	??_main,w
  1075  0775  00F0               	movwf	___bmul@multiplicand
  1076  0776  083A               	movf	_ENT_1,w
  1077  0777  023C               	subwf	_VAL_1,w
  1078  0778  120A  118A  22F3  120A  118A  	fcall	___bmul
  1079  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1080  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1081  077F  00B6               	movwf	??_main+1
  1082  0780  0836               	movf	??_main+1,w
  1083  0781  00B8               	movwf	_DEC_2
  1084  0782                     l1585:	
  1085                           
  1086                           ;Master.c: 93:         DEC_1= DEC_2;
  1087  0782  0838               	movf	_DEC_2,w
  1088  0783  00B5               	movwf	??_main
  1089  0784  0835               	movf	??_main,w
  1090  0785  00B9               	movwf	_DEC_1
  1091  0786                     l1587:	
  1092                           
  1093                           ;Master.c: 96:         Lcd_Set_Cursor(1,2);
  1094  0786  3002               	movlw	2
  1095  0787  00B5               	movwf	??_main
  1096  0788  0835               	movf	??_main,w
  1097  0789  00F3               	movwf	Lcd_Set_Cursor@posy
  1098  078A  3001               	movlw	1
  1099  078B  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
  1100  0790                     l1589:	
  1101                           
  1102                           ;Master.c: 97:         Lcd_Write_Int(ENT_1);
  1103  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0792  083A               	movf	_ENT_1,w
  1106  0793  120A  118A  2323  120A  118A  	fcall	_Lcd_Write_Int
  1107  0798                     l1591:	
  1108                           
  1109                           ;Master.c: 98:         Lcd_Write_Char('.');
  1110  0798  302E               	movlw	46
  1111  0799  120A  118A  22DF  120A  118A  	fcall	_Lcd_Write_Char
  1112  079E                     l1593:	
  1113                           
  1114                           ;Master.c: 99:         if (DEC_1 >= 10){
  1115  079E  300A               	movlw	10
  1116  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1118  07A1  0239               	subwf	_DEC_1,w
  1119  07A2  1C03               	skipc
  1120  07A3  2FA5               	goto	u1071
  1121  07A4  2FA6               	goto	u1070
  1122  07A5                     u1071:	
  1123  07A5  2FAD               	goto	l1597
  1124  07A6                     u1070:	
  1125  07A6                     l1595:	
  1126                           
  1127                           ;Master.c: 100:             Lcd_Write_Int(DEC_1);
  1128  07A6  0839               	movf	_DEC_1,w
  1129  07A7  120A  118A  2323  120A  118A  	fcall	_Lcd_Write_Int
  1130                           
  1131                           ;Master.c: 101:         }else{
  1132  07AC  2FBB               	goto	l1601
  1133  07AD                     l1597:	
  1134                           
  1135                           ;Master.c: 102:             Lcd_Write_Char('0');
  1136  07AD  3030               	movlw	48
  1137  07AE  120A  118A  22DF  120A  118A  	fcall	_Lcd_Write_Char
  1138  07B3                     l1599:	
  1139                           
  1140                           ;Master.c: 103:             Lcd_Write_Int(DEC_1);
  1141  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1142  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1143  07B5  0839               	movf	_DEC_1,w
  1144  07B6  120A  118A  2323  120A  118A  	fcall	_Lcd_Write_Int
  1145  07BB                     l1601:	
  1146                           
  1147                           ;Master.c: 107:         if(VAL_2 < 10){
  1148  07BB  300A               	movlw	10
  1149  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1150  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1151  07BE  023B               	subwf	_VAL_2,w
  1152  07BF  1803               	skipnc
  1153  07C0  2FC2               	goto	u1081
  1154  07C1  2FC3               	goto	u1080
  1155  07C2                     u1081:	
  1156  07C2  2FDF               	goto	l1609
  1157  07C3                     u1080:	
  1158  07C3                     l1603:	
  1159                           
  1160                           ;Master.c: 108:             Lcd_Set_Cursor(8,2);
  1161  07C3  3002               	movlw	2
  1162  07C4  00B5               	movwf	??_main
  1163  07C5  0835               	movf	??_main,w
  1164  07C6  00F3               	movwf	Lcd_Set_Cursor@posy
  1165  07C7  3008               	movlw	8
  1166  07C8  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
  1167  07CD                     l1605:	
  1168                           
  1169                           ;Master.c: 109:             Lcd_Write_String("0");
  1170  07CD  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1171  07CE  00F3               	movwf	Lcd_Write_String@var
  1172  07CF  3080               	movlw	128
  1173  07D0  00F4               	movwf	Lcd_Write_String@var+1
  1174  07D1  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
  1175  07D6                     l1607:	
  1176                           
  1177                           ;Master.c: 110:             Lcd_Write_Int(VAL_2);
  1178  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1179  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1180  07D8  083B               	movf	_VAL_2,w
  1181  07D9  120A  118A  2323  120A  118A  	fcall	_Lcd_Write_Int
  1182                           
  1183                           ;Master.c: 111:         }else{
  1184  07DE  2EF3               	goto	l1559
  1185  07DF                     l1609:	
  1186                           
  1187                           ;Master.c: 112:             Lcd_Set_Cursor(8,2);
  1188  07DF  3002               	movlw	2
  1189  07E0  00B5               	movwf	??_main
  1190  07E1  0835               	movf	??_main,w
  1191  07E2  00F3               	movwf	Lcd_Set_Cursor@posy
  1192  07E3  3008               	movlw	8
  1193  07E4  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
  1194  07E9                     l1611:	
  1195                           
  1196                           ;Master.c: 113:             Lcd_Write_Int(VAL_2);
  1197  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1198  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1199  07EB  083B               	movf	_VAL_2,w
  1200  07EC  120A  118A  2323  120A  118A  	fcall	_Lcd_Write_Int
  1201  07F1  2EF3               	goto	l1559
  1202  07F2  120A  118A  2800   	ljmp	start
  1203  07F5                     __end_of_main:	
  1204                           
  1205                           	psect	text1
  1206  048C                     __ptext1:	
  1207 ;; *************** function _initLCD *****************
  1208 ;; Defined at:
  1209 ;;		line 9 in file "LCD.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          2       0       0       0       0
  1226 ;;      Totals:         2       0       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		_Lcd_Cmd
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _initLCD
  1239  048C                     _initLCD:	
  1240  048C                     l1413:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1243                           
  1244                           
  1245                           ;LCD.c: 10: _delay((unsigned long)((15)*(8000000/4000.0)));
  1246  048C  3027               	movlw	39
  1247  048D  00F4               	movwf	??_initLCD+1
  1248  048E  30F5               	movlw	245
  1249  048F  00F3               	movwf	??_initLCD
  1250  0490                     u1117:	
  1251  0490  0BF3               	decfsz	??_initLCD,f
  1252  0491  2C90               	goto	u1117
  1253  0492  0BF4               	decfsz	??_initLCD+1,f
  1254  0493  2C90               	goto	u1117
  1255  0494                     l1415:	
  1256                           
  1257                           ;LCD.c: 12: Lcd_Cmd(0x030);
  1258  0494  3030               	movlw	48
  1259  0495  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1260  049A                     l1417:	
  1261                           
  1262                           ;LCD.c: 13: _delay((unsigned long)((5)*(8000000/4000.0)));
  1263  049A  300D               	movlw	13
  1264  049B  00F4               	movwf	??_initLCD+1
  1265  049C  30FB               	movlw	251
  1266  049D  00F3               	movwf	??_initLCD
  1267  049E                     u1127:	
  1268  049E  0BF3               	decfsz	??_initLCD,f
  1269  049F  2C9E               	goto	u1127
  1270  04A0  0BF4               	decfsz	??_initLCD+1,f
  1271  04A1  2C9E               	goto	u1127
  1272  04A2  2CA3               	nop2
  1273                           
  1274                           ;LCD.c: 15: Lcd_Cmd(0x030);
  1275  04A3  3030               	movlw	48
  1276  04A4  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1277  04A9                     l1419:	
  1278                           
  1279                           ;LCD.c: 16: _delay((unsigned long)((11)*(8000000/4000.0)));
  1280  04A9  301D               	movlw	29
  1281  04AA  00F4               	movwf	??_initLCD+1
  1282  04AB  3091               	movlw	145
  1283  04AC  00F3               	movwf	??_initLCD
  1284  04AD                     u1137:	
  1285  04AD  0BF3               	decfsz	??_initLCD,f
  1286  04AE  2CAD               	goto	u1137
  1287  04AF  0BF4               	decfsz	??_initLCD+1,f
  1288  04B0  2CAD               	goto	u1137
  1289  04B1                     l1421:	
  1290                           
  1291                           ;LCD.c: 18: Lcd_Cmd(0x030);
  1292  04B1  3030               	movlw	48
  1293  04B2  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1294                           
  1295                           ;LCD.c: 19: _delay((unsigned long)((160)*(8000000/4000000.0)));
  1296  04B7  306A               	movlw	106
  1297  04B8  00F3               	movwf	??_initLCD
  1298  04B9                     u1147:	
  1299  04B9  0BF3               	decfsz	??_initLCD,f
  1300  04BA  2CB9               	goto	u1147
  1301  04BB  0000               	nop
  1302  04BC                     l1423:	
  1303                           
  1304                           ;LCD.c: 22: Lcd_Cmd(0x38);
  1305  04BC  3038               	movlw	56
  1306  04BD  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1307  04C2                     l1425:	
  1308                           
  1309                           ;LCD.c: 23: Lcd_Cmd(0x10);
  1310  04C2  3010               	movlw	16
  1311  04C3  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1312  04C8                     l1427:	
  1313                           
  1314                           ;LCD.c: 24: Lcd_Cmd(0x01);
  1315  04C8  3001               	movlw	1
  1316  04C9  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1317  04CE                     l1429:	
  1318                           
  1319                           ;LCD.c: 25: Lcd_Cmd(0x06);
  1320  04CE  3006               	movlw	6
  1321  04CF  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1322  04D4                     l1431:	
  1323                           
  1324                           ;LCD.c: 26: Lcd_Cmd(0x0C);
  1325  04D4  300C               	movlw	12
  1326  04D5  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  1327  04DA                     l68:	
  1328  04DA  0008               	return
  1329  04DB                     __end_of_initLCD:	
  1330                           
  1331                           	psect	text2
  1332  0341                     __ptext2:	
  1333 ;; *************** function ___wmul *****************
  1334 ;; Defined at:
  1335 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  multiplier      2    0[COMMON] unsigned int 
  1338 ;;  multiplicand    2    2[COMMON] unsigned int 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  product         2    4[COMMON] unsigned int 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2    0[COMMON] unsigned int 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         4       0       0       0       0
  1351 ;;      Locals:         2       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         6       0       0       0       0
  1354 ;;Total ram usage:        6 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function ___wmul
  1365  0341                     ___wmul:	
  1366  0341                     l1445:	
  1367                           ;incstack = 0
  1368                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1369                           
  1370  0341  01F4               	clrf	___wmul@product
  1371  0342  01F5               	clrf	___wmul@product+1
  1372  0343                     l1447:	
  1373  0343  1C70               	btfss	___wmul@multiplier,0
  1374  0344  2B46               	goto	u911
  1375  0345  2B47               	goto	u910
  1376  0346                     u911:	
  1377  0346  2B4D               	goto	l269
  1378  0347                     u910:	
  1379  0347                     l1449:	
  1380  0347  0872               	movf	___wmul@multiplicand,w
  1381  0348  07F4               	addwf	___wmul@product,f
  1382  0349  1803               	skipnc
  1383  034A  0AF5               	incf	___wmul@product+1,f
  1384  034B  0873               	movf	___wmul@multiplicand+1,w
  1385  034C  07F5               	addwf	___wmul@product+1,f
  1386  034D                     l269:	
  1387  034D  3001               	movlw	1
  1388  034E                     u925:	
  1389  034E  1003               	clrc
  1390  034F  0DF2               	rlf	___wmul@multiplicand,f
  1391  0350  0DF3               	rlf	___wmul@multiplicand+1,f
  1392  0351  3EFF               	addlw	-1
  1393  0352  1D03               	skipz
  1394  0353  2B4E               	goto	u925
  1395  0354                     l1451:	
  1396  0354  3001               	movlw	1
  1397  0355                     u935:	
  1398  0355  1003               	clrc
  1399  0356  0CF1               	rrf	___wmul@multiplier+1,f
  1400  0357  0CF0               	rrf	___wmul@multiplier,f
  1401  0358  3EFF               	addlw	-1
  1402  0359  1D03               	skipz
  1403  035A  2B55               	goto	u935
  1404  035B                     l1453:	
  1405  035B  0870               	movf	___wmul@multiplier,w
  1406  035C  0471               	iorwf	___wmul@multiplier+1,w
  1407  035D  1D03               	btfss	3,2
  1408  035E  2B60               	goto	u941
  1409  035F  2B61               	goto	u940
  1410  0360                     u941:	
  1411  0360  2B43               	goto	l1447
  1412  0361                     u940:	
  1413  0361                     l1455:	
  1414  0361  0875               	movf	___wmul@product+1,w
  1415  0362  00F1               	movwf	?___wmul+1
  1416  0363  0874               	movf	___wmul@product,w
  1417  0364  00F0               	movwf	?___wmul
  1418  0365                     l271:	
  1419  0365  0008               	return
  1420  0366                     __end_of___wmul:	
  1421                           
  1422                           	psect	text3
  1423  02F3                     __ptext3:	
  1424 ;; *************** function ___bmul *****************
  1425 ;; Defined at:
  1426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  multiplier      1    wreg     unsigned char 
  1429 ;;  multiplicand    1    0[COMMON] unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  multiplier      1    3[COMMON] unsigned char 
  1432 ;;  product         1    2[COMMON] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         1       0       0       0       0
  1443 ;;      Locals:         2       0       0       0       0
  1444 ;;      Temps:          1       0       0       0       0
  1445 ;;      Totals:         4       0       0       0       0
  1446 ;;Total ram usage:        4 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function ___bmul
  1457  02F3                     ___bmul:	
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1461                           ;___bmul@multiplier stored from wreg
  1462  02F3  00F3               	movwf	___bmul@multiplier
  1463  02F4                     l1459:	
  1464  02F4  01F2               	clrf	___bmul@product
  1465  02F5                     l1461:	
  1466  02F5  1C73               	btfss	___bmul@multiplier,0
  1467  02F6  2AF8               	goto	u951
  1468  02F7  2AF9               	goto	u950
  1469  02F8                     u951:	
  1470  02F8  2AFD               	goto	l1465
  1471  02F9                     u950:	
  1472  02F9                     l1463:	
  1473  02F9  0870               	movf	___bmul@multiplicand,w
  1474  02FA  00F1               	movwf	??___bmul
  1475  02FB  0871               	movf	??___bmul,w
  1476  02FC  07F2               	addwf	___bmul@product,f
  1477  02FD                     l1465:	
  1478  02FD  1003               	clrc
  1479  02FE  0DF0               	rlf	___bmul@multiplicand,f
  1480  02FF                     l1467:	
  1481  02FF  1003               	clrc
  1482  0300  0CF3               	rrf	___bmul@multiplier,f
  1483  0301  0873               	movf	___bmul@multiplier,w
  1484  0302  1D03               	btfss	3,2
  1485  0303  2B05               	goto	u961
  1486  0304  2B06               	goto	u960
  1487  0305                     u961:	
  1488  0305  2AF5               	goto	l1461
  1489  0306                     u960:	
  1490  0306                     l1469:	
  1491  0306  0872               	movf	___bmul@product,w
  1492  0307                     l295:	
  1493  0307  0008               	return
  1494  0308                     __end_of___bmul:	
  1495                           
  1496                           	psect	text4
  1497  0541                     __ptext4:	
  1498 ;; *************** function ___awdiv *****************
  1499 ;; Defined at:
  1500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  divisor         2    6[COMMON] int 
  1503 ;;  dividend        2    8[COMMON] int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  quotient        2    2[BANK0 ] int 
  1506 ;;  sign            1    1[BANK0 ] unsigned char 
  1507 ;;  counter         1    0[BANK0 ] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    6[COMMON] int 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         4       0       0       0       0
  1518 ;;      Locals:         0       4       0       0       0
  1519 ;;      Temps:          1       0       0       0       0
  1520 ;;      Totals:         5       4       0       0       0
  1521 ;;Total ram usage:        9 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function ___awdiv
  1532  0541                     ___awdiv:	
  1533  0541                     l1473:	
  1534                           ;incstack = 0
  1535                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1536                           
  1537  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0543  01A1               	clrf	___awdiv@sign
  1540  0544                     l1475:	
  1541  0544  1FF7               	btfss	___awdiv@divisor+1,7
  1542  0545  2D47               	goto	u971
  1543  0546  2D48               	goto	u970
  1544  0547                     u971:	
  1545  0547  2D4F               	goto	l1481
  1546  0548                     u970:	
  1547  0548                     l1477:	
  1548  0548  09F6               	comf	___awdiv@divisor,f
  1549  0549  09F7               	comf	___awdiv@divisor+1,f
  1550  054A  0AF6               	incf	___awdiv@divisor,f
  1551  054B  1903               	skipnz
  1552  054C  0AF7               	incf	___awdiv@divisor+1,f
  1553  054D                     l1479:	
  1554  054D  01A1               	clrf	___awdiv@sign
  1555  054E  0AA1               	incf	___awdiv@sign,f
  1556  054F                     l1481:	
  1557  054F  1FF9               	btfss	___awdiv@dividend+1,7
  1558  0550  2D52               	goto	u981
  1559  0551  2D53               	goto	u980
  1560  0552                     u981:	
  1561  0552  2D5C               	goto	l1487
  1562  0553                     u980:	
  1563  0553                     l1483:	
  1564  0553  09F8               	comf	___awdiv@dividend,f
  1565  0554  09F9               	comf	___awdiv@dividend+1,f
  1566  0555  0AF8               	incf	___awdiv@dividend,f
  1567  0556  1903               	skipnz
  1568  0557  0AF9               	incf	___awdiv@dividend+1,f
  1569  0558                     l1485:	
  1570  0558  3001               	movlw	1
  1571  0559  00FA               	movwf	??___awdiv
  1572  055A  087A               	movf	??___awdiv,w
  1573  055B  06A1               	xorwf	___awdiv@sign,f
  1574  055C                     l1487:	
  1575  055C  01A2               	clrf	___awdiv@quotient
  1576  055D  01A3               	clrf	___awdiv@quotient+1
  1577  055E                     l1489:	
  1578  055E  0876               	movf	___awdiv@divisor,w
  1579  055F  0477               	iorwf	___awdiv@divisor+1,w
  1580  0560  1903               	btfsc	3,2
  1581  0561  2D63               	goto	u991
  1582  0562  2D64               	goto	u990
  1583  0563                     u991:	
  1584  0563  2D9B               	goto	l1509
  1585  0564                     u990:	
  1586  0564                     l1491:	
  1587  0564  01A0               	clrf	___awdiv@counter
  1588  0565  0AA0               	incf	___awdiv@counter,f
  1589  0566  2D72               	goto	l1497
  1590  0567                     l1493:	
  1591  0567  3001               	movlw	1
  1592  0568                     u1005:	
  1593  0568  1003               	clrc
  1594  0569  0DF6               	rlf	___awdiv@divisor,f
  1595  056A  0DF7               	rlf	___awdiv@divisor+1,f
  1596  056B  3EFF               	addlw	-1
  1597  056C  1D03               	skipz
  1598  056D  2D68               	goto	u1005
  1599  056E                     l1495:	
  1600  056E  3001               	movlw	1
  1601  056F  00FA               	movwf	??___awdiv
  1602  0570  087A               	movf	??___awdiv,w
  1603  0571  07A0               	addwf	___awdiv@counter,f
  1604  0572                     l1497:	
  1605  0572  1FF7               	btfss	___awdiv@divisor+1,7
  1606  0573  2D75               	goto	u1011
  1607  0574  2D76               	goto	u1010
  1608  0575                     u1011:	
  1609  0575  2D67               	goto	l1493
  1610  0576                     u1010:	
  1611  0576                     l1499:	
  1612  0576  3001               	movlw	1
  1613  0577                     u1025:	
  1614  0577  1003               	clrc
  1615  0578  0DA2               	rlf	___awdiv@quotient,f
  1616  0579  0DA3               	rlf	___awdiv@quotient+1,f
  1617  057A  3EFF               	addlw	-1
  1618  057B  1D03               	skipz
  1619  057C  2D77               	goto	u1025
  1620  057D  0877               	movf	___awdiv@divisor+1,w
  1621  057E  0279               	subwf	___awdiv@dividend+1,w
  1622  057F  1D03               	skipz
  1623  0580  2D83               	goto	u1035
  1624  0581  0876               	movf	___awdiv@divisor,w
  1625  0582  0278               	subwf	___awdiv@dividend,w
  1626  0583                     u1035:	
  1627  0583  1C03               	skipc
  1628  0584  2D86               	goto	u1031
  1629  0585  2D87               	goto	u1030
  1630  0586                     u1031:	
  1631  0586  2D8E               	goto	l1505
  1632  0587                     u1030:	
  1633  0587                     l1501:	
  1634  0587  0876               	movf	___awdiv@divisor,w
  1635  0588  02F8               	subwf	___awdiv@dividend,f
  1636  0589  0877               	movf	___awdiv@divisor+1,w
  1637  058A  1C03               	skipc
  1638  058B  03F9               	decf	___awdiv@dividend+1,f
  1639  058C  02F9               	subwf	___awdiv@dividend+1,f
  1640  058D                     l1503:	
  1641  058D  1422               	bsf	___awdiv@quotient,0
  1642  058E                     l1505:	
  1643  058E  3001               	movlw	1
  1644  058F                     u1045:	
  1645  058F  1003               	clrc
  1646  0590  0CF7               	rrf	___awdiv@divisor+1,f
  1647  0591  0CF6               	rrf	___awdiv@divisor,f
  1648  0592  3EFF               	addlw	-1
  1649  0593  1D03               	skipz
  1650  0594  2D8F               	goto	u1045
  1651  0595                     l1507:	
  1652  0595  3001               	movlw	1
  1653  0596  02A0               	subwf	___awdiv@counter,f
  1654  0597  1D03               	btfss	3,2
  1655  0598  2D9A               	goto	u1051
  1656  0599  2D9B               	goto	u1050
  1657  059A                     u1051:	
  1658  059A  2D76               	goto	l1499
  1659  059B                     u1050:	
  1660  059B                     l1509:	
  1661  059B  0821               	movf	___awdiv@sign,w
  1662  059C  1903               	btfsc	3,2
  1663  059D  2D9F               	goto	u1061
  1664  059E  2DA0               	goto	u1060
  1665  059F                     u1061:	
  1666  059F  2DA5               	goto	l1513
  1667  05A0                     u1060:	
  1668  05A0                     l1511:	
  1669  05A0  09A2               	comf	___awdiv@quotient,f
  1670  05A1  09A3               	comf	___awdiv@quotient+1,f
  1671  05A2  0AA2               	incf	___awdiv@quotient,f
  1672  05A3  1903               	skipnz
  1673  05A4  0AA3               	incf	___awdiv@quotient+1,f
  1674  05A5                     l1513:	
  1675  05A5  0823               	movf	___awdiv@quotient+1,w
  1676  05A6  00F7               	movwf	?___awdiv+1
  1677  05A7  0822               	movf	___awdiv@quotient,w
  1678  05A8  00F6               	movwf	?___awdiv
  1679  05A9                     l422:	
  1680  05A9  0008               	return
  1681  05AA                     __end_of___awdiv:	
  1682                           
  1683                           	psect	text5
  1684  0323                     __ptext5:	
  1685 ;; *************** function _Lcd_Write_Int *****************
  1686 ;; Defined at:
  1687 ;;		line 66 in file "LCD.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  numero          1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  numero          1   20[BANK0 ] unsigned char 
  1692 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0       5       0       0       0
  1704 ;;      Temps:          0       3       0       0       0
  1705 ;;      Totals:         0       8       0       0       0
  1706 ;;Total ram usage:        8 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    2
  1709 ;; This function calls:
  1710 ;;		_Lcd_Write_String
  1711 ;;		_sprintf
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _Lcd_Write_Int
  1719  0323                     _Lcd_Write_Int:	
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1723                           ;Lcd_Write_Int@numero stored from wreg
  1724  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0325  00B4               	movwf	Lcd_Write_Int@numero
  1727  0326                     l1443:	
  1728                           
  1729                           ;LCD.c: 67:     char buffer [4];;LCD.c: 68:     sprintf (buffer, "%d", numero);
  1730  0326  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1731  0327  00AD               	movwf	??_Lcd_Write_Int
  1732  0328  082D               	movf	??_Lcd_Write_Int,w
  1733  0329  00A0               	movwf	sprintf@f
  1734  032A  0834               	movf	Lcd_Write_Int@numero,w
  1735  032B  00AE               	movwf	??_Lcd_Write_Int+1
  1736  032C  01AF               	clrf	??_Lcd_Write_Int+2
  1737  032D  082E               	movf	??_Lcd_Write_Int+1,w
  1738  032E  00A1               	movwf	?_sprintf+1
  1739  032F  082F               	movf	??_Lcd_Write_Int+2,w
  1740  0330  00A2               	movwf	?_sprintf+2
  1741  0331  3030               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  1742  0332  120A  118A  25AA  120A  118A  	fcall	_sprintf
  1743                           
  1744                           ;LCD.c: 69:     Lcd_Write_String(buffer);
  1745  0337  3030               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  1746  0338  00F3               	movwf	Lcd_Write_String@var
  1747  0339  3000               	movlw	0
  1748  033A  00F4               	movwf	Lcd_Write_String@var+1
  1749  033B  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
  1750  0340                     l91:	
  1751  0340  0008               	return
  1752  0341                     __end_of_Lcd_Write_Int:	
  1753                           
  1754                           	psect	text6
  1755  05AA                     __ptext6:	
  1756 ;; *************** function _sprintf *****************
  1757 ;; Defined at:
  1758 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  sp              1    wreg     PTR unsigned char 
  1761 ;;		 -> Lcd_Write_Int@buffer(4), 
  1762 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1763 ;;		 -> STR_1(3), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1766 ;;		 -> Lcd_Write_Int@buffer(4), 
  1767 ;;  tmpval          4    0        struct .
  1768 ;;  val             2    9[BANK0 ] unsigned int 
  1769 ;;  cp              2    0        PTR const unsigned char 
  1770 ;;  len             2    0        unsigned int 
  1771 ;;  c               1   12[BANK0 ] unsigned char 
  1772 ;;  prec            1    8[BANK0 ] char 
  1773 ;;  flag            1    7[BANK0 ] unsigned char 
  1774 ;;  ap              1    6[BANK0 ] PTR void [1]
  1775 ;;		 -> ?_sprintf(2), 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    0[BANK0 ] int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       3       0       0       0
  1786 ;;      Locals:         0       7       0       0       0
  1787 ;;      Temps:          0       3       0       0       0
  1788 ;;      Totals:         0      13       0       0       0
  1789 ;;Total ram usage:       13 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		___lwdiv
  1794 ;;		___lwmod
  1795 ;; This function is called by:
  1796 ;;		_Lcd_Write_Int
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _sprintf
  1802  05AA                     _sprintf:	
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1806                           ;sprintf@sp stored from wreg
  1807  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1808  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1809  05AC  00AB               	movwf	sprintf@sp
  1810  05AD                     l1287:	
  1811                           
  1812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1813  05AD  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1814  05AE  00A3               	movwf	??_sprintf
  1815  05AF  0823               	movf	??_sprintf,w
  1816  05B0  00A6               	movwf	sprintf@ap
  1817                           
  1818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1819  05B1  2E7B               	goto	l1339
  1820  05B2                     l1289:	
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1823  05B2  3025               	movlw	37
  1824  05B3  062C               	xorwf	sprintf@c,w
  1825  05B4  1903               	btfsc	3,2
  1826  05B5  2DB7               	goto	u731
  1827  05B6  2DB8               	goto	u730
  1828  05B7                     u731:	
  1829  05B7  2DC4               	goto	l1295
  1830  05B8                     u730:	
  1831  05B8                     l1291:	
  1832                           
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1834  05B8  082C               	movf	sprintf@c,w
  1835  05B9  00A3               	movwf	??_sprintf
  1836  05BA  082B               	movf	sprintf@sp,w
  1837  05BB  0084               	movwf	4
  1838  05BC  0823               	movf	??_sprintf,w
  1839  05BD  1383               	bcf	3,7	;select IRP bank0
  1840  05BE  0080               	movwf	0
  1841  05BF                     l1293:	
  1842  05BF  3001               	movlw	1
  1843  05C0  00A3               	movwf	??_sprintf
  1844  05C1  0823               	movf	??_sprintf,w
  1845  05C2  07AB               	addwf	sprintf@sp,f
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1848  05C3  2E7B               	goto	l1339
  1849  05C4                     l1295:	
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1852  05C4  01A7               	clrf	sprintf@flag
  1853  05C5                     l1299:	
  1854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1855                           
  1856  05C5  3001               	movlw	1
  1857  05C6  07A0               	addwf	sprintf@f,f
  1858  05C7  30FF               	movlw	-1
  1859  05C8  0720               	addwf	sprintf@f,w
  1860  05C9  0084               	movwf	4
  1861  05CA  120A  118A  200D  120A  118A  	fcall	stringdir
  1862  05CF  00AC               	movwf	sprintf@c
  1863  05D0  00A3               	movwf	??_sprintf
  1864  05D1  01A4               	clrf	??_sprintf+1
  1865                           
  1866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 1, Range of values is 0 to 0
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            4     3 (average)
  1872                           ; direct_byte           11     8 (fixed)
  1873                           ; jumptable            260     6 (fixed)
  1874                           ;	Chosen strategy is simple_byte
  1875  05D2  0824               	movf	??_sprintf+1,w
  1876  05D3  3A00               	xorlw	0	; case 0
  1877  05D4  1903               	skipnz
  1878  05D5  2DD7               	goto	l1633
  1879  05D6  2E7B               	goto	l1339
  1880  05D7                     l1633:	
  1881                           
  1882                           ; Switch size 1, requested type "simple"
  1883                           ; Number of cases is 3, Range of values is 0 to 105
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte           10     6 (average)
  1887                           ; jumptable            260     6 (fixed)
  1888                           ;	Chosen strategy is simple_byte
  1889  05D7  0823               	movf	??_sprintf,w
  1890  05D8  3A00               	xorlw	0	; case 0
  1891  05D9  1903               	skipnz
  1892  05DA  2E8D               	goto	l1341
  1893  05DB  3A64               	xorlw	100	; case 100
  1894  05DC  1903               	skipnz
  1895  05DD  2DE2               	goto	l1301
  1896  05DE  3A0D               	xorlw	13	; case 105
  1897  05DF  1903               	skipnz
  1898  05E0  2DE2               	goto	l1301
  1899  05E1  2E7B               	goto	l1339
  1900  05E2                     l1301:	
  1901                           
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1903  05E2  0826               	movf	sprintf@ap,w
  1904  05E3  0084               	movwf	4
  1905  05E4  1383               	bcf	3,7	;select IRP bank0
  1906  05E5  0800               	movf	0,w
  1907  05E6  00A9               	movwf	sprintf@val
  1908  05E7  0A84               	incf	4,f
  1909  05E8  0800               	movf	0,w
  1910  05E9  00AA               	movwf	sprintf@val+1
  1911  05EA                     l1303:	
  1912  05EA  3002               	movlw	2
  1913  05EB  00A3               	movwf	??_sprintf
  1914  05EC  0823               	movf	??_sprintf,w
  1915  05ED  07A6               	addwf	sprintf@ap,f
  1916  05EE                     l1305:	
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1919  05EE  1FAA               	btfss	sprintf@val+1,7
  1920  05EF  2DF1               	goto	u741
  1921  05F0  2DF2               	goto	u740
  1922  05F1                     u741:	
  1923  05F1  2DFB               	goto	l1311
  1924  05F2                     u740:	
  1925  05F2                     l1307:	
  1926                           
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1928  05F2  3003               	movlw	3
  1929  05F3  00A3               	movwf	??_sprintf
  1930  05F4  0823               	movf	??_sprintf,w
  1931  05F5  04A7               	iorwf	sprintf@flag,f
  1932  05F6                     l1309:	
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1935  05F6  09A9               	comf	sprintf@val,f
  1936  05F7  09AA               	comf	sprintf@val+1,f
  1937  05F8  0AA9               	incf	sprintf@val,f
  1938  05F9  1903               	skipnz
  1939  05FA  0AAA               	incf	sprintf@val+1,f
  1940  05FB                     l1311:	
  1941                           
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1943  05FB  01AC               	clrf	sprintf@c
  1944  05FC  0AAC               	incf	sprintf@c,f
  1945  05FD                     l1317:	
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1948  05FD  082C               	movf	sprintf@c,w
  1949  05FE  00A3               	movwf	??_sprintf
  1950  05FF  0723               	addwf	??_sprintf,w
  1951  0600  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1952  0601  0084               	movwf	4
  1953  0602  120A  118A  200D  120A  118A  	fcall	stringdir
  1954  0607  00A4               	movwf	??_sprintf+1
  1955  0608  120A  118A  200D  120A  118A  	fcall	stringdir
  1956  060D  00A5               	movwf	??_sprintf+2
  1957  060E  0825               	movf	??_sprintf+2,w
  1958  060F  022A               	subwf	sprintf@val+1,w
  1959  0610  1D03               	skipz
  1960  0611  2E14               	goto	u755
  1961  0612  0824               	movf	??_sprintf+1,w
  1962  0613  0229               	subwf	sprintf@val,w
  1963  0614                     u755:	
  1964  0614  1803               	skipnc
  1965  0615  2E17               	goto	u751
  1966  0616  2E18               	goto	u750
  1967  0617                     u751:	
  1968  0617  2E19               	goto	l1321
  1969  0618                     u750:	
  1970  0618  2E23               	goto	l1323
  1971  0619                     l1321:	
  1972  0619  3001               	movlw	1
  1973  061A  00A3               	movwf	??_sprintf
  1974  061B  0823               	movf	??_sprintf,w
  1975  061C  07AC               	addwf	sprintf@c,f
  1976  061D  3005               	movlw	5
  1977  061E  062C               	xorwf	sprintf@c,w
  1978  061F  1D03               	btfss	3,2
  1979  0620  2E22               	goto	u761
  1980  0621  2E23               	goto	u760
  1981  0622                     u761:	
  1982  0622  2DFD               	goto	l1317
  1983  0623                     u760:	
  1984  0623                     l1323:	
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1987  0623  0827               	movf	sprintf@flag,w
  1988  0624  3903               	andlw	3
  1989  0625  1903               	btfsc	3,2
  1990  0626  2E28               	goto	u771
  1991  0627  2E29               	goto	u770
  1992  0628                     u771:	
  1993  0628  2E34               	goto	l1329
  1994  0629                     u770:	
  1995  0629                     l1325:	
  1996                           
  1997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  1998  0629  302D               	movlw	45
  1999  062A  00A3               	movwf	??_sprintf
  2000  062B  082B               	movf	sprintf@sp,w
  2001  062C  0084               	movwf	4
  2002  062D  0823               	movf	??_sprintf,w
  2003  062E  1383               	bcf	3,7	;select IRP bank0
  2004  062F  0080               	movwf	0
  2005  0630                     l1327:	
  2006  0630  3001               	movlw	1
  2007  0631  00A3               	movwf	??_sprintf
  2008  0632  0823               	movf	??_sprintf,w
  2009  0633  07AB               	addwf	sprintf@sp,f
  2010  0634                     l1329:	
  2011                           
  2012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  2013  0634  082C               	movf	sprintf@c,w
  2014  0635  00A3               	movwf	??_sprintf
  2015  0636  0823               	movf	??_sprintf,w
  2016  0637  00A8               	movwf	sprintf@prec
  2017                           
  2018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2019  0638  2E72               	goto	l1337
  2020  0639                     l1331:	
  2021                           
  2022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2023  0639  300A               	movlw	10
  2024  063A  00F8               	movwf	___lwmod@divisor
  2025  063B  3000               	movlw	0
  2026  063C  00F9               	movwf	___lwmod@divisor+1
  2027  063D  0828               	movf	sprintf@prec,w
  2028  063E  00A3               	movwf	??_sprintf
  2029  063F  0723               	addwf	??_sprintf,w
  2030  0640  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2031  0641  0084               	movwf	4
  2032  0642  120A  118A  200D  120A  118A  	fcall	stringdir
  2033  0647  00F0               	movwf	___lwdiv@divisor
  2034  0648  120A  118A  200D  120A  118A  	fcall	stringdir
  2035  064D  00F1               	movwf	___lwdiv@divisor+1
  2036  064E  082A               	movf	sprintf@val+1,w
  2037  064F  00F3               	movwf	___lwdiv@dividend+1
  2038  0650  0829               	movf	sprintf@val,w
  2039  0651  00F2               	movwf	___lwdiv@dividend
  2040  0652  120A  118A  2448  120A  118A  	fcall	___lwdiv
  2041  0657  0871               	movf	?___lwdiv+1,w
  2042  0658  00FB               	movwf	___lwmod@dividend+1
  2043  0659  0870               	movf	?___lwdiv,w
  2044  065A  00FA               	movwf	___lwmod@dividend
  2045  065B  120A  118A  23CC  120A  118A  	fcall	___lwmod
  2046  0660  0878               	movf	?___lwmod,w
  2047  0661  3E30               	addlw	48
  2048  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0664  00A4               	movwf	??_sprintf+1
  2051  0665  0824               	movf	??_sprintf+1,w
  2052  0666  00AC               	movwf	sprintf@c
  2053  0667                     l1333:	
  2054                           
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2056  0667  082C               	movf	sprintf@c,w
  2057  0668  00A3               	movwf	??_sprintf
  2058  0669  082B               	movf	sprintf@sp,w
  2059  066A  0084               	movwf	4
  2060  066B  0823               	movf	??_sprintf,w
  2061  066C  1383               	bcf	3,7	;select IRP bank0
  2062  066D  0080               	movwf	0
  2063  066E                     l1335:	
  2064  066E  3001               	movlw	1
  2065  066F  00A3               	movwf	??_sprintf
  2066  0670  0823               	movf	??_sprintf,w
  2067  0671  07AB               	addwf	sprintf@sp,f
  2068  0672                     l1337:	
  2069                           
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2071  0672  30FF               	movlw	255
  2072  0673  00A3               	movwf	??_sprintf
  2073  0674  0823               	movf	??_sprintf,w
  2074  0675  07A8               	addwf	sprintf@prec,f
  2075  0676  0A28               	incf	sprintf@prec,w
  2076  0677  1D03               	btfss	3,2
  2077  0678  2E7A               	goto	u781
  2078  0679  2E7B               	goto	u780
  2079  067A                     u781:	
  2080  067A  2E39               	goto	l1331
  2081  067B                     u780:	
  2082  067B                     l1339:	
  2083                           
  2084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2085  067B  3001               	movlw	1
  2086  067C  07A0               	addwf	sprintf@f,f
  2087  067D  30FF               	movlw	-1
  2088  067E  0720               	addwf	sprintf@f,w
  2089  067F  0084               	movwf	4
  2090  0680  120A  118A  200D  120A  118A  	fcall	stringdir
  2091  0685  00A3               	movwf	??_sprintf
  2092  0686  0823               	movf	??_sprintf,w
  2093  0687  00AC               	movwf	sprintf@c
  2094  0688  082C               	movf	sprintf@c,w
  2095  0689  1D03               	btfss	3,2
  2096  068A  2E8C               	goto	u791
  2097  068B  2E8D               	goto	u790
  2098  068C                     u791:	
  2099  068C  2DB2               	goto	l1289
  2100  068D                     u790:	
  2101  068D                     l1341:	
  2102                           
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2104  068D  082B               	movf	sprintf@sp,w
  2105  068E  0084               	movwf	4
  2106  068F  1383               	bcf	3,7	;select IRP bank0
  2107  0690  0180               	clrf	0
  2108  0691                     l265:	
  2109  0691  0008               	return
  2110  0692                     __end_of_sprintf:	
  2111                           
  2112                           	psect	text7
  2113  03CC                     __ptext7:	
  2114 ;; *************** function ___lwmod *****************
  2115 ;; Defined at:
  2116 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  divisor         2    8[COMMON] unsigned int 
  2119 ;;  dividend        2   10[COMMON] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  counter         1   13[COMMON] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  2    8[COMMON] unsigned int 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         4       0       0       0       0
  2132 ;;      Locals:         1       0       0       0       0
  2133 ;;      Temps:          1       0       0       0       0
  2134 ;;      Totals:         6       0       0       0       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_sprintf
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function ___lwmod
  2146  03CC                     ___lwmod:	
  2147  03CC                     l1245:	
  2148                           ;incstack = 0
  2149                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2150                           
  2151  03CC  0878               	movf	___lwmod@divisor,w
  2152  03CD  0479               	iorwf	___lwmod@divisor+1,w
  2153  03CE  1903               	btfsc	3,2
  2154  03CF  2BD1               	goto	u621
  2155  03D0  2BD2               	goto	u620
  2156  03D1                     u621:	
  2157  03D1  2C01               	goto	l1263
  2158  03D2                     u620:	
  2159  03D2                     l1247:	
  2160  03D2  01FD               	clrf	___lwmod@counter
  2161  03D3  0AFD               	incf	___lwmod@counter,f
  2162  03D4  2BE0               	goto	l1253
  2163  03D5                     l1249:	
  2164  03D5  3001               	movlw	1
  2165  03D6                     u635:	
  2166  03D6  1003               	clrc
  2167  03D7  0DF8               	rlf	___lwmod@divisor,f
  2168  03D8  0DF9               	rlf	___lwmod@divisor+1,f
  2169  03D9  3EFF               	addlw	-1
  2170  03DA  1D03               	skipz
  2171  03DB  2BD6               	goto	u635
  2172  03DC                     l1251:	
  2173  03DC  3001               	movlw	1
  2174  03DD  00FC               	movwf	??___lwmod
  2175  03DE  087C               	movf	??___lwmod,w
  2176  03DF  07FD               	addwf	___lwmod@counter,f
  2177  03E0                     l1253:	
  2178  03E0  1FF9               	btfss	___lwmod@divisor+1,7
  2179  03E1  2BE3               	goto	u641
  2180  03E2  2BE4               	goto	u640
  2181  03E3                     u641:	
  2182  03E3  2BD5               	goto	l1249
  2183  03E4                     u640:	
  2184  03E4                     l1255:	
  2185  03E4  0879               	movf	___lwmod@divisor+1,w
  2186  03E5  027B               	subwf	___lwmod@dividend+1,w
  2187  03E6  1D03               	skipz
  2188  03E7  2BEA               	goto	u655
  2189  03E8  0878               	movf	___lwmod@divisor,w
  2190  03E9  027A               	subwf	___lwmod@dividend,w
  2191  03EA                     u655:	
  2192  03EA  1C03               	skipc
  2193  03EB  2BED               	goto	u651
  2194  03EC  2BEE               	goto	u650
  2195  03ED                     u651:	
  2196  03ED  2BF4               	goto	l1259
  2197  03EE                     u650:	
  2198  03EE                     l1257:	
  2199  03EE  0878               	movf	___lwmod@divisor,w
  2200  03EF  02FA               	subwf	___lwmod@dividend,f
  2201  03F0  0879               	movf	___lwmod@divisor+1,w
  2202  03F1  1C03               	skipc
  2203  03F2  03FB               	decf	___lwmod@dividend+1,f
  2204  03F3  02FB               	subwf	___lwmod@dividend+1,f
  2205  03F4                     l1259:	
  2206  03F4  3001               	movlw	1
  2207  03F5                     u665:	
  2208  03F5  1003               	clrc
  2209  03F6  0CF9               	rrf	___lwmod@divisor+1,f
  2210  03F7  0CF8               	rrf	___lwmod@divisor,f
  2211  03F8  3EFF               	addlw	-1
  2212  03F9  1D03               	skipz
  2213  03FA  2BF5               	goto	u665
  2214  03FB                     l1261:	
  2215  03FB  3001               	movlw	1
  2216  03FC  02FD               	subwf	___lwmod@counter,f
  2217  03FD  1D03               	btfss	3,2
  2218  03FE  2C00               	goto	u671
  2219  03FF  2C01               	goto	u670
  2220  0400                     u671:	
  2221  0400  2BE4               	goto	l1255
  2222  0401                     u670:	
  2223  0401                     l1263:	
  2224  0401  087B               	movf	___lwmod@dividend+1,w
  2225  0402  00F9               	movwf	?___lwmod+1
  2226  0403  087A               	movf	___lwmod@dividend,w
  2227  0404  00F8               	movwf	?___lwmod
  2228  0405                     l551:	
  2229  0405  0008               	return
  2230  0406                     __end_of___lwmod:	
  2231                           
  2232                           	psect	text8
  2233  0448                     __ptext8:	
  2234 ;; *************** function ___lwdiv *****************
  2235 ;; Defined at:
  2236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  divisor         2    0[COMMON] unsigned int 
  2239 ;;  dividend        2    2[COMMON] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  quotient        2    5[COMMON] unsigned int 
  2242 ;;  counter         1    7[COMMON] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    0[COMMON] unsigned int 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         4       0       0       0       0
  2253 ;;      Locals:         3       0       0       0       0
  2254 ;;      Temps:          1       0       0       0       0
  2255 ;;      Totals:         8       0       0       0       0
  2256 ;;Total ram usage:        8 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_sprintf
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function ___lwdiv
  2267  0448                     ___lwdiv:	
  2268  0448                     l1219:	
  2269                           ;incstack = 0
  2270                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2271                           
  2272  0448  01F5               	clrf	___lwdiv@quotient
  2273  0449  01F6               	clrf	___lwdiv@quotient+1
  2274  044A                     l1221:	
  2275  044A  0870               	movf	___lwdiv@divisor,w
  2276  044B  0471               	iorwf	___lwdiv@divisor+1,w
  2277  044C  1903               	btfsc	3,2
  2278  044D  2C4F               	goto	u551
  2279  044E  2C50               	goto	u550
  2280  044F                     u551:	
  2281  044F  2C87               	goto	l1241
  2282  0450                     u550:	
  2283  0450                     l1223:	
  2284  0450  01F7               	clrf	___lwdiv@counter
  2285  0451  0AF7               	incf	___lwdiv@counter,f
  2286  0452  2C5E               	goto	l1229
  2287  0453                     l1225:	
  2288  0453  3001               	movlw	1
  2289  0454                     u565:	
  2290  0454  1003               	clrc
  2291  0455  0DF0               	rlf	___lwdiv@divisor,f
  2292  0456  0DF1               	rlf	___lwdiv@divisor+1,f
  2293  0457  3EFF               	addlw	-1
  2294  0458  1D03               	skipz
  2295  0459  2C54               	goto	u565
  2296  045A                     l1227:	
  2297  045A  3001               	movlw	1
  2298  045B  00F4               	movwf	??___lwdiv
  2299  045C  0874               	movf	??___lwdiv,w
  2300  045D  07F7               	addwf	___lwdiv@counter,f
  2301  045E                     l1229:	
  2302  045E  1FF1               	btfss	___lwdiv@divisor+1,7
  2303  045F  2C61               	goto	u571
  2304  0460  2C62               	goto	u570
  2305  0461                     u571:	
  2306  0461  2C53               	goto	l1225
  2307  0462                     u570:	
  2308  0462                     l1231:	
  2309  0462  3001               	movlw	1
  2310  0463                     u585:	
  2311  0463  1003               	clrc
  2312  0464  0DF5               	rlf	___lwdiv@quotient,f
  2313  0465  0DF6               	rlf	___lwdiv@quotient+1,f
  2314  0466  3EFF               	addlw	-1
  2315  0467  1D03               	skipz
  2316  0468  2C63               	goto	u585
  2317  0469  0871               	movf	___lwdiv@divisor+1,w
  2318  046A  0273               	subwf	___lwdiv@dividend+1,w
  2319  046B  1D03               	skipz
  2320  046C  2C6F               	goto	u595
  2321  046D  0870               	movf	___lwdiv@divisor,w
  2322  046E  0272               	subwf	___lwdiv@dividend,w
  2323  046F                     u595:	
  2324  046F  1C03               	skipc
  2325  0470  2C72               	goto	u591
  2326  0471  2C73               	goto	u590
  2327  0472                     u591:	
  2328  0472  2C7A               	goto	l1237
  2329  0473                     u590:	
  2330  0473                     l1233:	
  2331  0473  0870               	movf	___lwdiv@divisor,w
  2332  0474  02F2               	subwf	___lwdiv@dividend,f
  2333  0475  0871               	movf	___lwdiv@divisor+1,w
  2334  0476  1C03               	skipc
  2335  0477  03F3               	decf	___lwdiv@dividend+1,f
  2336  0478  02F3               	subwf	___lwdiv@dividend+1,f
  2337  0479                     l1235:	
  2338  0479  1475               	bsf	___lwdiv@quotient,0
  2339  047A                     l1237:	
  2340  047A  3001               	movlw	1
  2341  047B                     u605:	
  2342  047B  1003               	clrc
  2343  047C  0CF1               	rrf	___lwdiv@divisor+1,f
  2344  047D  0CF0               	rrf	___lwdiv@divisor,f
  2345  047E  3EFF               	addlw	-1
  2346  047F  1D03               	skipz
  2347  0480  2C7B               	goto	u605
  2348  0481                     l1239:	
  2349  0481  3001               	movlw	1
  2350  0482  02F7               	subwf	___lwdiv@counter,f
  2351  0483  1D03               	btfss	3,2
  2352  0484  2C86               	goto	u611
  2353  0485  2C87               	goto	u610
  2354  0486                     u611:	
  2355  0486  2C62               	goto	l1231
  2356  0487                     u610:	
  2357  0487                     l1241:	
  2358  0487  0876               	movf	___lwdiv@quotient+1,w
  2359  0488  00F1               	movwf	?___lwdiv+1
  2360  0489  0875               	movf	___lwdiv@quotient,w
  2361  048A  00F0               	movwf	?___lwdiv
  2362  048B                     l541:	
  2363  048B  0008               	return
  2364  048C                     __end_of___lwdiv:	
  2365                           
  2366                           	psect	text9
  2367  0406                     __ptext9:	
  2368 ;; *************** function _Lcd_Write_String *****************
  2369 ;; Defined at:
  2370 ;;		line 60 in file "LCD.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  var             2    3[COMMON] PTR unsigned char 
  2373 ;;		 -> STR_5(2), STR_4(3), STR_3(3), STR_2(3), 
  2374 ;;		 -> Lcd_Write_Int@buffer(4), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  i               2    8[COMMON] int 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         2       0       0       0       0
  2387 ;;      Locals:         2       0       0       0       0
  2388 ;;      Temps:          3       0       0       0       0
  2389 ;;      Totals:         7       0       0       0       0
  2390 ;;Total ram usage:        7 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		_Lcd_Write_Char
  2395 ;; This function is called by:
  2396 ;;		_Lcd_Write_Int
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _Lcd_Write_String
  2403  0406                     _Lcd_Write_String:	
  2404  0406                     l1279:	
  2405                           ;incstack = 0
  2406                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2407                           
  2408                           
  2409                           ;LCD.c: 61:     int i;;LCD.c: 62:  for(i=0;var[i]!='\0';i++)
  2410  0406  01F8               	clrf	Lcd_Write_String@i
  2411  0407  01F9               	clrf	Lcd_Write_String@i+1
  2412  0408  2C2B               	goto	l1285
  2413  0409                     l1281:	
  2414                           
  2415                           ;LCD.c: 63:     Lcd_Write_Char(var[i]);
  2416  0409  0878               	movf	Lcd_Write_String@i,w
  2417  040A  0773               	addwf	Lcd_Write_String@var,w
  2418  040B  00F6               	movwf	??_Lcd_Write_String+1
  2419  040C  0874               	movf	Lcd_Write_String@var+1,w
  2420  040D  00F5               	movwf	??_Lcd_Write_String
  2421  040E  1803               	skipnc
  2422  040F  0AF5               	incf	??_Lcd_Write_String,f
  2423  0410  1FF8               	btfss	Lcd_Write_String@i,7
  2424  0411  2C13               	goto	u700
  2425  0412  03F5               	decf	??_Lcd_Write_String,f
  2426  0413                     u700:	
  2427  0413  0875               	movf	??_Lcd_Write_String,w
  2428  0414  00F7               	movwf	??_Lcd_Write_String+2
  2429  0415  0877               	movf	??_Lcd_Write_String+2,w
  2430  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0418  00FF               	movwf	btemp+1
  2433  0419  0876               	movf	??_Lcd_Write_String+1,w
  2434  041A  0084               	movwf	4
  2435  041B  120A  118A  2003  120A  118A  	fcall	stringtab
  2436  0420  120A  118A  22DF  120A  118A  	fcall	_Lcd_Write_Char
  2437  0425                     l1283:	
  2438  0425  3001               	movlw	1
  2439  0426  07F8               	addwf	Lcd_Write_String@i,f
  2440  0427  1803               	skipnc
  2441  0428  0AF9               	incf	Lcd_Write_String@i+1,f
  2442  0429  3000               	movlw	0
  2443  042A  07F9               	addwf	Lcd_Write_String@i+1,f
  2444  042B                     l1285:	
  2445  042B  0878               	movf	Lcd_Write_String@i,w
  2446  042C  0773               	addwf	Lcd_Write_String@var,w
  2447  042D  00F6               	movwf	??_Lcd_Write_String+1
  2448  042E  0874               	movf	Lcd_Write_String@var+1,w
  2449  042F  00F5               	movwf	??_Lcd_Write_String
  2450  0430  1803               	skipnc
  2451  0431  0AF5               	incf	??_Lcd_Write_String,f
  2452  0432  1FF8               	btfss	Lcd_Write_String@i,7
  2453  0433  2C35               	goto	u710
  2454  0434  03F5               	decf	??_Lcd_Write_String,f
  2455  0435                     u710:	
  2456  0435  0875               	movf	??_Lcd_Write_String,w
  2457  0436  00F7               	movwf	??_Lcd_Write_String+2
  2458  0437  0877               	movf	??_Lcd_Write_String+2,w
  2459  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2461  043A  00FF               	movwf	btemp+1
  2462  043B  0876               	movf	??_Lcd_Write_String+1,w
  2463  043C  0084               	movwf	4
  2464  043D  120A  118A  2003  120A  118A  	fcall	stringtab
  2465  0442  3A00               	xorlw	0
  2466  0443  1D03               	skipz
  2467  0444  2C46               	goto	u721
  2468  0445  2C47               	goto	u720
  2469  0446                     u721:	
  2470  0446  2C09               	goto	l1281
  2471  0447                     u720:	
  2472  0447                     l88:	
  2473  0447  0008               	return
  2474  0448                     __end_of_Lcd_Write_String:	
  2475                           
  2476                           	psect	text10
  2477  02DF                     __ptext10:	
  2478 ;; *************** function _Lcd_Write_Char *****************
  2479 ;; Defined at:
  2480 ;;		line 52 in file "LCD.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  var             1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  var             1    2[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0
  2496 ;;      Temps:          2       0       0       0       0
  2497 ;;      Totals:         3       0       0       0       0
  2498 ;;Total ram usage:        3 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_Lcd_Write_String
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _Lcd_Write_Char
  2510  02DF                     _Lcd_Write_Char:	
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _Lcd_Write_Char: [wreg]
  2514                           ;Lcd_Write_Char@var stored from wreg
  2515  02DF  00F2               	movwf	Lcd_Write_Char@var
  2516  02E0                     l1211:	
  2517                           
  2518                           ;LCD.c: 53:     PORTBbits.RB6 = 1;
  2519  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2520  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2521  02E2  1706               	bsf	6,6	;volatile
  2522  02E3                     l1213:	
  2523                           
  2524                           ;LCD.c: 54:     PORTD = var;
  2525  02E3  0872               	movf	Lcd_Write_Char@var,w
  2526  02E4  0088               	movwf	8	;volatile
  2527  02E5                     l1215:	
  2528                           
  2529                           ;LCD.c: 55:     PORTBbits.RB7 = 1;
  2530  02E5  1786               	bsf	6,7	;volatile
  2531                           
  2532                           ;LCD.c: 56:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2533  02E6  300B               	movlw	11
  2534  02E7  00F1               	movwf	??_Lcd_Write_Char+1
  2535  02E8  3062               	movlw	98
  2536  02E9  00F0               	movwf	??_Lcd_Write_Char
  2537  02EA                     u1157:	
  2538  02EA  0BF0               	decfsz	??_Lcd_Write_Char,f
  2539  02EB  2AEA               	goto	u1157
  2540  02EC  0BF1               	decfsz	??_Lcd_Write_Char+1,f
  2541  02ED  2AEA               	goto	u1157
  2542  02EE  0000               	nop
  2543  02EF                     l1217:	
  2544                           
  2545                           ;LCD.c: 57:     PORTBbits.RB7 = 0;
  2546  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2547  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2548  02F1  1386               	bcf	6,7	;volatile
  2549  02F2                     l82:	
  2550  02F2  0008               	return
  2551  02F3                     __end_of_Lcd_Write_Char:	
  2552                           
  2553                           	psect	text11
  2554  0308                     __ptext11:	
  2555 ;; *************** function _Lcd_Set_Cursor *****************
  2556 ;; Defined at:
  2557 ;;		line 43 in file "LCD.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  posx            1    wreg     unsigned char 
  2560 ;;  posy            1    3[COMMON] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  posx            1    4[COMMON] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         1       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         2       0       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		_Lcd_Cmd
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _Lcd_Set_Cursor
  2588  0308                     _Lcd_Set_Cursor:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2592                           ;Lcd_Set_Cursor@posx stored from wreg
  2593  0308  00F4               	movwf	Lcd_Set_Cursor@posx
  2594  0309                     l1435:	
  2595                           
  2596                           ;LCD.c: 44:     if(posy == 1){
  2597  0309  0373               	decf	Lcd_Set_Cursor@posy,w
  2598  030A  1D03               	btfss	3,2
  2599  030B  2B0D               	goto	u891
  2600  030C  2B0E               	goto	u890
  2601  030D                     u891:	
  2602  030D  2B15               	goto	l1439
  2603  030E                     u890:	
  2604  030E                     l1437:	
  2605                           
  2606                           ;LCD.c: 45:         Lcd_Cmd (0x80 + posx - 1);
  2607  030E  0874               	movf	Lcd_Set_Cursor@posx,w
  2608  030F  3E7F               	addlw	127
  2609  0310  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  2610  0315                     l1439:	
  2611                           
  2612                           ;LCD.c: 47:     if(posy == 2){
  2613  0315  3002               	movlw	2
  2614  0316  0673               	xorwf	Lcd_Set_Cursor@posy,w
  2615  0317  1D03               	btfss	3,2
  2616  0318  2B1A               	goto	u901
  2617  0319  2B1B               	goto	u900
  2618  031A                     u901:	
  2619  031A  2B22               	goto	l79
  2620  031B                     u900:	
  2621  031B                     l1441:	
  2622                           
  2623                           ;LCD.c: 48:         Lcd_Cmd (0xC0 + posx - 1);
  2624  031B  0874               	movf	Lcd_Set_Cursor@posx,w
  2625  031C  3EBF               	addlw	191
  2626  031D  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  2627  0322                     l79:	
  2628  0322  0008               	return
  2629  0323                     __end_of_Lcd_Set_Cursor:	
  2630                           
  2631                           	psect	text12
  2632  029B                     __ptext12:	
  2633 ;; *************** function _Lcd_Clear *****************
  2634 ;; Defined at:
  2635 ;;		line 39 in file "LCD.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    1
  2656 ;; This function calls:
  2657 ;;		_Lcd_Cmd
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _Lcd_Clear
  2665  029B                     _Lcd_Clear:	
  2666  029B                     l1433:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;LCD.c: 40:     Lcd_Cmd(0x01);
  2672  029B  3001               	movlw	1
  2673  029C  120A  118A  22CB  120A  118A  	fcall	_Lcd_Cmd
  2674  02A1                     l74:	
  2675  02A1  0008               	return
  2676  02A2                     __end_of_Lcd_Clear:	
  2677                           
  2678                           	psect	text13
  2679  02CB                     __ptext13:	
  2680 ;; *************** function _Lcd_Cmd *****************
  2681 ;; Defined at:
  2682 ;;		line 31 in file "LCD.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  command         1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  command         1    2[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         1       0       0       0       0
  2698 ;;      Temps:          2       0       0       0       0
  2699 ;;      Totals:         3       0       0       0       0
  2700 ;;Total ram usage:        3 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_initLCD
  2706 ;;		_Lcd_Clear
  2707 ;;		_Lcd_Set_Cursor
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _Lcd_Cmd
  2713  02CB                     _Lcd_Cmd:	
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _Lcd_Cmd: [wreg]
  2717                           ;Lcd_Cmd@command stored from wreg
  2718  02CB  00F2               	movwf	Lcd_Cmd@command
  2719  02CC                     l1271:	
  2720                           
  2721                           ;LCD.c: 32:     PORTBbits.RB6 = 0;
  2722  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2723  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2724  02CE  1306               	bcf	6,6	;volatile
  2725  02CF                     l1273:	
  2726                           
  2727                           ;LCD.c: 33:     PORTD = command;
  2728  02CF  0872               	movf	Lcd_Cmd@command,w
  2729  02D0  0088               	movwf	8	;volatile
  2730  02D1                     l1275:	
  2731                           
  2732                           ;LCD.c: 34:     PORTBbits.RB7 = 1;
  2733  02D1  1786               	bsf	6,7	;volatile
  2734                           
  2735                           ;LCD.c: 35:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2736  02D2  300B               	movlw	11
  2737  02D3  00F1               	movwf	??_Lcd_Cmd+1
  2738  02D4  3062               	movlw	98
  2739  02D5  00F0               	movwf	??_Lcd_Cmd
  2740  02D6                     u1167:	
  2741  02D6  0BF0               	decfsz	??_Lcd_Cmd,f
  2742  02D7  2AD6               	goto	u1167
  2743  02D8  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2744  02D9  2AD6               	goto	u1167
  2745  02DA  0000               	nop
  2746  02DB                     l1277:	
  2747                           
  2748                           ;LCD.c: 36:     PORTBbits.RB7 = 0;
  2749  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2750  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2751  02DD  1386               	bcf	6,7	;volatile
  2752  02DE                     l71:	
  2753  02DE  0008               	return
  2754  02DF                     __end_of_Lcd_Cmd:	
  2755                           
  2756                           	psect	text14
  2757  02B4                     __ptext14:	
  2758 ;; *************** function _I2C_Master_Write *****************
  2759 ;; Defined at:
  2760 ;;		line 65 in file "I2C.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  d               2    0[COMMON] unsigned int 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         2       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0
  2777 ;;      Totals:         2       0       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    1
  2781 ;; This function calls:
  2782 ;;		_I2C_Master_Wait
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _I2C_Master_Write
  2790  02B4                     _I2C_Master_Write:	
  2791  02B4                     l1393:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2794                           
  2795                           
  2796                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2797  02B4  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2798  02B9                     l1395:	
  2799                           
  2800                           ;I2C.c: 68:     SSPBUF = d;
  2801  02B9  0870               	movf	I2C_Master_Write@d,w
  2802  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2803  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2804  02BC  0093               	movwf	19	;volatile
  2805  02BD                     l47:	
  2806  02BD  0008               	return
  2807  02BE                     __end_of_I2C_Master_Write:	
  2808                           
  2809                           	psect	text15
  2810  02AB                     __ptext15:	
  2811 ;; *************** function _I2C_Master_Stop *****************
  2812 ;; Defined at:
  2813 ;;		line 55 in file "I2C.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		_I2C_Master_Wait
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _I2C_Master_Stop
  2843  02AB                     _I2C_Master_Stop:	
  2844  02AB                     l1389:	
  2845                           ;incstack = 0
  2846                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2847                           
  2848                           
  2849                           ;I2C.c: 57:     I2C_Master_Wait();
  2850  02AB  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2851  02B0                     l1391:	
  2852                           
  2853                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2854  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2855  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2856  02B2  1511               	bsf	17,2	;volatile
  2857  02B3                     l44:	
  2858  02B3  0008               	return
  2859  02B4                     __end_of_I2C_Master_Stop:	
  2860                           
  2861                           	psect	text16
  2862  02A2                     __ptext16:	
  2863 ;; *************** function _I2C_Master_Start *****************
  2864 ;; Defined at:
  2865 ;;		line 39 in file "I2C.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    1
  2886 ;; This function calls:
  2887 ;;		_I2C_Master_Wait
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _I2C_Master_Start
  2895  02A2                     _I2C_Master_Start:	
  2896  02A2                     l1385:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2899                           
  2900                           
  2901                           ;I2C.c: 41:     I2C_Master_Wait();
  2902  02A2  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2903  02A7                     l1387:	
  2904                           
  2905                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2906  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2907  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2908  02A9  1411               	bsf	17,0	;volatile
  2909  02AA                     l38:	
  2910  02AA  0008               	return
  2911  02AB                     __end_of_I2C_Master_Start:	
  2912                           
  2913                           	psect	text17
  2914  0366                     __ptext17:	
  2915 ;; *************** function _I2C_Master_Read *****************
  2916 ;; Defined at:
  2917 ;;		line 74 in file "I2C.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  a               2    0[COMMON] unsigned short 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  temp            2    4[COMMON] unsigned short 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    0[COMMON] unsigned short 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, pclath, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         2       0       0       0       0
  2932 ;;      Locals:         2       0       0       0       0
  2933 ;;      Temps:          2       0       0       0       0
  2934 ;;      Totals:         6       0       0       0       0
  2935 ;;Total ram usage:        6 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    1
  2938 ;; This function calls:
  2939 ;;		_I2C_Master_Wait
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _I2C_Master_Read
  2947  0366                     _I2C_Master_Read:	
  2948  0366                     l1397:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2951                           
  2952                           
  2953                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2954  0366  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2955  036B                     l1399:	
  2956                           
  2957                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2958  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2959  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2960  036D  1591               	bsf	17,3	;volatile
  2961                           
  2962                           ;I2C.c: 79:     I2C_Master_Wait();
  2963  036E  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2964  0373                     l1401:	
  2965                           
  2966                           ;I2C.c: 80:     temp = SSPBUF;
  2967  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0375  0813               	movf	19,w	;volatile
  2970  0376  00F2               	movwf	??_I2C_Master_Read
  2971  0377  01F3               	clrf	??_I2C_Master_Read+1
  2972  0378  0872               	movf	??_I2C_Master_Read,w
  2973  0379  00F4               	movwf	I2C_Master_Read@temp
  2974  037A  0873               	movf	??_I2C_Master_Read+1,w
  2975  037B  00F5               	movwf	I2C_Master_Read@temp+1
  2976  037C                     l1403:	
  2977                           
  2978                           ;I2C.c: 81:     I2C_Master_Wait();
  2979  037C  120A  118A  22BE  120A  118A  	fcall	_I2C_Master_Wait
  2980  0381                     l1405:	
  2981                           
  2982                           ;I2C.c: 82:     if(a == 1){
  2983  0381  0370               	decf	I2C_Master_Read@a,w
  2984  0382  0471               	iorwf	I2C_Master_Read@a+1,w
  2985  0383  1D03               	btfss	3,2
  2986  0384  2B86               	goto	u881
  2987  0385  2B87               	goto	u880
  2988  0386                     u881:	
  2989  0386  2B8B               	goto	l50
  2990  0387                     u880:	
  2991  0387                     l1407:	
  2992                           
  2993                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2994  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2995  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2996  0389  1291               	bcf	17,5	;volatile
  2997                           
  2998                           ;I2C.c: 84:     }else{
  2999  038A  2B8E               	goto	l51
  3000  038B                     l50:	
  3001                           
  3002                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3003  038B  1683               	bsf	3,5	;RP0=1, select bank1
  3004  038C  1303               	bcf	3,6	;RP1=0, select bank1
  3005  038D  1691               	bsf	17,5	;volatile
  3006  038E                     l51:	
  3007                           ;I2C.c: 86:     }
  3008                           
  3009                           
  3010                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3011  038E  1611               	bsf	17,4	;volatile
  3012  038F                     l1409:	
  3013                           
  3014                           ;I2C.c: 88:     return temp;
  3015  038F  0875               	movf	I2C_Master_Read@temp+1,w
  3016  0390  00F1               	movwf	?_I2C_Master_Read+1
  3017  0391  0874               	movf	I2C_Master_Read@temp,w
  3018  0392  00F0               	movwf	?_I2C_Master_Read
  3019  0393                     l52:	
  3020  0393  0008               	return
  3021  0394                     __end_of_I2C_Master_Read:	
  3022                           
  3023                           	psect	text18
  3024  02BE                     __ptext18:	
  3025 ;; *************** function _I2C_Master_Wait *****************
  3026 ;; Defined at:
  3027 ;;		line 32 in file "I2C.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_I2C_Master_Start
  3051 ;;		_I2C_Master_Stop
  3052 ;;		_I2C_Master_Write
  3053 ;;		_I2C_Master_Read
  3054 ;;		_I2C_Master_RepeatedStart
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _I2C_Master_Wait
  3060  02BE                     _I2C_Master_Wait:	
  3061  02BE                     l1267:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3064                           
  3065  02BE                     l32:	
  3066                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3067                           
  3068  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3069  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  3070  02C0  1914               	btfsc	20,2	;volatile
  3071  02C1  2AC3               	goto	u681
  3072  02C2  2AC4               	goto	u680
  3073  02C3                     u681:	
  3074  02C3  2ABE               	goto	l32
  3075  02C4                     u680:	
  3076  02C4                     l1269:	
  3077  02C4  0811               	movf	17,w	;volatile
  3078  02C5  391F               	andlw	31
  3079  02C6  1D03               	btfss	3,2
  3080  02C7  2AC9               	goto	u691
  3081  02C8  2ACA               	goto	u690
  3082  02C9                     u691:	
  3083  02C9  2ABE               	goto	l32
  3084  02CA                     u690:	
  3085  02CA                     l35:	
  3086  02CA  0008               	return
  3087  02CB                     __end_of_I2C_Master_Wait:	
  3088                           
  3089                           	psect	text19
  3090  0394                     __ptext19:	
  3091 ;; *************** function _I2C_Master_Init *****************
  3092 ;; Defined at:
  3093 ;;		line 16 in file "I2C.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  c               4    0[BANK0 ] const unsigned long 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       4       0       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       4       0       0       0
  3110 ;;      Totals:         0       8       0       0       0
  3111 ;;Total ram usage:        8 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    1
  3114 ;; This function calls:
  3115 ;;		___lldiv
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _I2C_Master_Init
  3123  0394                     _I2C_Master_Init:	
  3124  0394                     l1373:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3127                           
  3128                           
  3129                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3130  0394  3028               	movlw	40
  3131  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0397  0094               	movwf	20	;volatile
  3134  0398                     l1375:	
  3135                           
  3136                           ;I2C.c: 19:     SSPCON2 = 0;
  3137  0398  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0399  1303               	bcf	3,6	;RP1=0, select bank1
  3139  039A  0191               	clrf	17	;volatile
  3140  039B                     l1377:	
  3141                           
  3142                           ;I2C.c: 20:     SSPADD = ( 8000000 /(4*c))-1;
  3143  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3144  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3145  039D  0820               	movf	I2C_Master_Init@c,w
  3146  039E  00A4               	movwf	??_I2C_Master_Init
  3147  039F  0821               	movf	I2C_Master_Init@c+1,w
  3148  03A0  00A5               	movwf	??_I2C_Master_Init+1
  3149  03A1  0822               	movf	I2C_Master_Init@c+2,w
  3150  03A2  00A6               	movwf	??_I2C_Master_Init+2
  3151  03A3  0823               	movf	I2C_Master_Init@c+3,w
  3152  03A4  00A7               	movwf	??_I2C_Master_Init+3
  3153  03A5  3002               	movlw	2
  3154  03A6                     u875:	
  3155  03A6  1003               	clrc
  3156  03A7  0DA4               	rlf	??_I2C_Master_Init,f
  3157  03A8  0DA5               	rlf	??_I2C_Master_Init+1,f
  3158  03A9  0DA6               	rlf	??_I2C_Master_Init+2,f
  3159  03AA  0DA7               	rlf	??_I2C_Master_Init+3,f
  3160  03AB                     u870:	
  3161  03AB  3EFF               	addlw	-1
  3162  03AC  1D03               	skipz
  3163  03AD  2BA6               	goto	u875
  3164  03AE  0827               	movf	??_I2C_Master_Init+3,w
  3165  03AF  00F3               	movwf	___lldiv@divisor+3
  3166  03B0  0826               	movf	??_I2C_Master_Init+2,w
  3167  03B1  00F2               	movwf	___lldiv@divisor+2
  3168  03B2  0825               	movf	??_I2C_Master_Init+1,w
  3169  03B3  00F1               	movwf	___lldiv@divisor+1
  3170  03B4  0824               	movf	??_I2C_Master_Init,w
  3171  03B5  00F0               	movwf	___lldiv@divisor
  3172  03B6  3000               	movlw	0
  3173  03B7  00F7               	movwf	___lldiv@dividend+3
  3174  03B8  307A               	movlw	122
  3175  03B9  00F6               	movwf	___lldiv@dividend+2
  3176  03BA  3012               	movlw	18
  3177  03BB  00F5               	movwf	___lldiv@dividend+1
  3178  03BC  3000               	movlw	0
  3179  03BD  00F4               	movwf	___lldiv@dividend
  3180  03BE  120A  118A  24DB  120A  118A  	fcall	___lldiv
  3181  03C3  0870               	movf	?___lldiv,w
  3182  03C4  3EFF               	addlw	255
  3183  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3184  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3185  03C7  0093               	movwf	19	;volatile
  3186  03C8                     l1379:	
  3187                           
  3188                           ;I2C.c: 21:     SSPSTAT = 0;
  3189  03C8  0194               	clrf	20	;volatile
  3190  03C9                     l1381:	
  3191                           
  3192                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3193  03C9  1587               	bsf	7,3	;volatile
  3194  03CA                     l1383:	
  3195                           
  3196                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3197  03CA  1607               	bsf	7,4	;volatile
  3198  03CB                     l29:	
  3199  03CB  0008               	return
  3200  03CC                     __end_of_I2C_Master_Init:	
  3201                           
  3202                           	psect	text20
  3203  04DB                     __ptext20:	
  3204 ;; *************** function ___lldiv *****************
  3205 ;; Defined at:
  3206 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  divisor         4    0[COMMON] unsigned long 
  3209 ;;  dividend        4    4[COMMON] unsigned long 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  quotient        4    9[COMMON] unsigned long 
  3212 ;;  counter         1   13[COMMON] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  4    0[COMMON] unsigned long 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         8       0       0       0       0
  3223 ;;      Locals:         5       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:        14       0       0       0       0
  3226 ;;Total ram usage:       14 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_I2C_Master_Init
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function ___lldiv
  3237  04DB                     ___lldiv:	
  3238  04DB                     l1349:	
  3239                           ;incstack = 0
  3240                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3241                           
  3242  04DB  3000               	movlw	0
  3243  04DC  00FC               	movwf	___lldiv@quotient+3
  3244  04DD  3000               	movlw	0
  3245  04DE  00FB               	movwf	___lldiv@quotient+2
  3246  04DF  3000               	movlw	0
  3247  04E0  00FA               	movwf	___lldiv@quotient+1
  3248  04E1  3000               	movlw	0
  3249  04E2  00F9               	movwf	___lldiv@quotient
  3250  04E3  0873               	movf	___lldiv@divisor+3,w
  3251  04E4  0472               	iorwf	___lldiv@divisor+2,w
  3252  04E5  0471               	iorwf	___lldiv@divisor+1,w
  3253  04E6  0470               	iorwf	___lldiv@divisor,w
  3254  04E7  1903               	skipnz
  3255  04E8  2CEA               	goto	u801
  3256  04E9  2CEB               	goto	u800
  3257  04EA                     u801:	
  3258  04EA  2D38               	goto	l1369
  3259  04EB                     u800:	
  3260  04EB                     l1351:	
  3261  04EB  01FD               	clrf	___lldiv@counter
  3262  04EC  0AFD               	incf	___lldiv@counter,f
  3263  04ED  2CFB               	goto	l1355
  3264  04EE                     l1353:	
  3265  04EE  3001               	movlw	1
  3266  04EF  00F8               	movwf	??___lldiv
  3267  04F0                     u815:	
  3268  04F0  1003               	clrc
  3269  04F1  0DF0               	rlf	___lldiv@divisor,f
  3270  04F2  0DF1               	rlf	___lldiv@divisor+1,f
  3271  04F3  0DF2               	rlf	___lldiv@divisor+2,f
  3272  04F4  0DF3               	rlf	___lldiv@divisor+3,f
  3273  04F5  0BF8               	decfsz	??___lldiv,f
  3274  04F6  2CF0               	goto	u815
  3275  04F7  3001               	movlw	1
  3276  04F8  00F8               	movwf	??___lldiv
  3277  04F9  0878               	movf	??___lldiv,w
  3278  04FA  07FD               	addwf	___lldiv@counter,f
  3279  04FB                     l1355:	
  3280  04FB  1FF3               	btfss	___lldiv@divisor+3,7
  3281  04FC  2CFE               	goto	u821
  3282  04FD  2CFF               	goto	u820
  3283  04FE                     u821:	
  3284  04FE  2CEE               	goto	l1353
  3285  04FF                     u820:	
  3286  04FF                     l1357:	
  3287  04FF  3001               	movlw	1
  3288  0500  00F8               	movwf	??___lldiv
  3289  0501                     u835:	
  3290  0501  1003               	clrc
  3291  0502  0DF9               	rlf	___lldiv@quotient,f
  3292  0503  0DFA               	rlf	___lldiv@quotient+1,f
  3293  0504  0DFB               	rlf	___lldiv@quotient+2,f
  3294  0505  0DFC               	rlf	___lldiv@quotient+3,f
  3295  0506  0BF8               	decfsz	??___lldiv,f
  3296  0507  2D01               	goto	u835
  3297  0508                     l1359:	
  3298  0508  0873               	movf	___lldiv@divisor+3,w
  3299  0509  0277               	subwf	___lldiv@dividend+3,w
  3300  050A  1D03               	skipz
  3301  050B  2D16               	goto	u845
  3302  050C  0872               	movf	___lldiv@divisor+2,w
  3303  050D  0276               	subwf	___lldiv@dividend+2,w
  3304  050E  1D03               	skipz
  3305  050F  2D16               	goto	u845
  3306  0510  0871               	movf	___lldiv@divisor+1,w
  3307  0511  0275               	subwf	___lldiv@dividend+1,w
  3308  0512  1D03               	skipz
  3309  0513  2D16               	goto	u845
  3310  0514  0870               	movf	___lldiv@divisor,w
  3311  0515  0274               	subwf	___lldiv@dividend,w
  3312  0516                     u845:	
  3313  0516  1C03               	skipc
  3314  0517  2D19               	goto	u841
  3315  0518  2D1A               	goto	u840
  3316  0519                     u841:	
  3317  0519  2D29               	goto	l1365
  3318  051A                     u840:	
  3319  051A                     l1361:	
  3320  051A  0870               	movf	___lldiv@divisor,w
  3321  051B  02F4               	subwf	___lldiv@dividend,f
  3322  051C  0871               	movf	___lldiv@divisor+1,w
  3323  051D  1C03               	skipc
  3324  051E  0F71               	incfsz	___lldiv@divisor+1,w
  3325  051F  02F5               	subwf	___lldiv@dividend+1,f
  3326  0520  0872               	movf	___lldiv@divisor+2,w
  3327  0521  1C03               	skipc
  3328  0522  0F72               	incfsz	___lldiv@divisor+2,w
  3329  0523  02F6               	subwf	___lldiv@dividend+2,f
  3330  0524  0873               	movf	___lldiv@divisor+3,w
  3331  0525  1C03               	skipc
  3332  0526  0F73               	incfsz	___lldiv@divisor+3,w
  3333  0527  02F7               	subwf	___lldiv@dividend+3,f
  3334  0528                     l1363:	
  3335  0528  1479               	bsf	___lldiv@quotient,0
  3336  0529                     l1365:	
  3337  0529  3001               	movlw	1
  3338  052A                     u855:	
  3339  052A  1003               	clrc
  3340  052B  0CF3               	rrf	___lldiv@divisor+3,f
  3341  052C  0CF2               	rrf	___lldiv@divisor+2,f
  3342  052D  0CF1               	rrf	___lldiv@divisor+1,f
  3343  052E  0CF0               	rrf	___lldiv@divisor,f
  3344  052F  3EFF               	addlw	-1
  3345  0530  1D03               	skipz
  3346  0531  2D2A               	goto	u855
  3347  0532                     l1367:	
  3348  0532  3001               	movlw	1
  3349  0533  02FD               	subwf	___lldiv@counter,f
  3350  0534  1D03               	btfss	3,2
  3351  0535  2D37               	goto	u861
  3352  0536  2D38               	goto	u860
  3353  0537                     u861:	
  3354  0537  2CFF               	goto	l1357
  3355  0538                     u860:	
  3356  0538                     l1369:	
  3357  0538  087C               	movf	___lldiv@quotient+3,w
  3358  0539  00F3               	movwf	?___lldiv+3
  3359  053A  087B               	movf	___lldiv@quotient+2,w
  3360  053B  00F2               	movwf	?___lldiv+2
  3361  053C  087A               	movf	___lldiv@quotient+1,w
  3362  053D  00F1               	movwf	?___lldiv+1
  3363  053E  0879               	movf	___lldiv@quotient,w
  3364  053F  00F0               	movwf	?___lldiv
  3365  0540                     l305:	
  3366  0540  0008               	return
  3367  0541                     __end_of___lldiv:	
  3368  007E                     btemp	set	126	;btemp
  3369  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> Lcd_Write_Int@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@var	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> Lcd_Write_Int@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _initLCD->_Lcd_Cmd
    ___awdiv->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Int
    _Lcd_Write_Int->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4550
                                             21 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                      _Lcd_Write_Int
                   _Lcd_Write_String
                            ___awdiv
                             ___bmul
                             ___wmul
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                        8     8      0    1779
                                             13 BANK0      8     8      0
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     492
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     566
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _initLCD
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1D       5       36.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 24 09:37:20 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
                       l32 02BE                         l50 038B                         l35 02CA  
                       l51 038E                         l52 0393                         l44 02B3  
                       l29 03CB                         l38 02AA                         l47 02BD  
                       l71 02DE                         l74 02A1                         l82 02F2  
                       l91 0340                         l68 04DA                         l79 0322  
                       l88 0447               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072                        l305 0540                        l422 05A9  
                      l271 0365                        l265 0691                        l541 048B  
                      l269 034D                        l551 0405                        l295 0307  
                      _GIE 005F                        u610 0487               __CFG_CPD$OFF 0000  
                      u611 0486                        u700 0413                        u620 03D2  
                      u605 047B                        u621 03D1                        u710 0435  
                      u550 0450                        u551 044F                        u800 04EB  
                      u720 0447                        u640 03E4                        u801 04EA  
                      u721 0446                        u641 03E3                        u570 0462  
                      u650 03EE                        u730 05B8                        u571 0461  
                      u651 03ED                        u635 03D6                        u731 05B7  
                      u820 04FF                        u900 031B                        u740 05F2  
                      u821 04FE                        u901 031A                        u565 0454  
                      u741 05F1                        u590 0473                        u670 0401  
                      u750 0618                        u910 0347                        u815 04F0  
                      u591 0472                        u671 0400                        u655 03EA  
                      u751 0617                        u911 0346                        u840 051A  
                      u680 02C4                        u760 0623                        u841 0519  
                      u681 02C3                        u585 0463                        u665 03F5  
                      u761 0622                        u690 02CA                        u770 0629  
                      u835 0501                        u691 02C9                        u595 046F  
                      u771 0628                        u755 0614                        u860 0538  
                      u780 067B                        u940 0361                        u861 0537  
                      u845 0516                        u781 067A                        u941 0360  
                      u925 034E                        u870 03AB                        u790 068D  
                      u950 02F9                        u855 052A                        u791 068C  
                      u951 02F8                        u935 0355                        u880 0387  
                      u960 0306                        u881 0386                        u961 0305  
                      u890 030E                        u970 0548                        u875 03A6  
                      u891 030D                        u971 0547                        u980 0553  
                      u981 0552                        u990 0564                        u991 0563  
                      fsr0 0004                        indf 0000               __CFG_LVP$OFF 0000  
                     l1211 02E0                       l1213 02E3                       l1221 044A  
                     l1301 05E2                       l1215 02E5                       l1231 0462  
                     l1223 0450                       l1311 05FB                       l1303 05EA  
                     l1401 0373                       l1217 02EF                       l1233 0473  
                     l1225 0453                       l1241 0487                       l1321 0619  
                     l1305 05EE                       l1403 037C                       l1235 0479  
                     l1227 045A                       l1219 0448                       l1251 03DC  
                     l1331 0639                       l1323 0623                       l1307 05F2  
                     l1405 0381                       l1237 047A                       l1229 045E  
                     l1261 03FB                       l1253 03E0                       l1245 03CC  
                     l1333 0667                       l1325 0629                       l1317 05FD  
                     l1309 05F6                       l1341 068D                       l1501 0587  
                     l1421 04B1                       l1413 048C                       l1351 04EB  
                     l1407 0387                       l1271 02CC                       l1239 0481  
                     l1255 03E4                       l1247 03D2                       l1263 0401  
                     l1335 066E                       l1327 0630                       l1511 05A0  
                     l1503 058D                       l1431 04D4                       l1423 04BC  
                     l1415 0494                       l1361 051A                       l1353 04EE  
                     l1409 038F                       l1273 02CF                       l1433 029B  
                     l1441 031B                       l1281 0409                       l1257 03EE  
                     l1249 03D5                       l1337 0672                       l1329 0634  
                     l1513 05A5                       l1505 058E                       l1425 04C2  
                     l1417 049A                       l1601 07BB                       l1521 0692  
                     l1363 0528                       l1355 04FB                       l1267 02BE  
                     l1275 02D1                       l1435 0309                       l1283 0425  
                     l1259 03F4                       l1291 05B8                       l1339 067B  
                     l1443 0326                       l1507 0595                       l1451 0354  
                     l1427 04C8                       l1419 04A9                       l1611 07E9  
                     l1603 07C3                       l1531 069C                       l1523 0696  
                     l1365 0529                       l1357 04FF                       l1349 04DB  
                     l1381 03C9                       l1373 0394                       l1269 02C4  
                     l1277 02DB                       l1437 030E                       l1285 042B  
                     l1293 05BF                       l1509 059B                       l1461 02F5  
                     l1453 035B                       l1445 0341                       l1429 04CE  
                     l1605 07CD                       l1541 06A7                       l1533 069F  
                     l1525 0697                       l1367 0532                       l1359 0508  
                     l1383 03CA                       l1375 0398                       l1391 02B0  
                     l1439 0315                       l1279 0406                       l1295 05C4  
                     l1287 05AD                       l1463 02F9                       l1455 0361  
                     l1447 0343                       l1607 07D6                       l1551 06D1  
                     l1543 06AC                       l1535 06A0                       l1527 0698  
                     l1369 0538                       l1377 039B                       l1385 02A2  
                     l1393 02B4                       l1633 05D7                       l1289 05B2  
                     l1481 054F                       l1473 0541                       l1465 02FD  
                     l1449 0347                       l1609 07DF                       l1561 06F8  
                     l1553 06D9                       l1545 06BB                       l1537 06A1  
                     l1529 0699                       l1379 03C8                       l1387 02A7  
                     l1395 02B9                       l1299 05C5                       l1491 0564  
                     l1483 0553                       l1475 0544                       l1467 02FF  
                     l1459 02F4                       l1571 0723                       l1563 0701  
                     l1555 06E2                       l1547 06C0                       l1539 06A2  
                     l1397 0366                       l1389 02AB                       l1493 0567  
                     l1485 0558                       l1477 0548                       l1469 0306  
                     l1581 076E                       l1573 072C                       l1565 070F  
                     l1557 06EA                       l1549 06C8                       l1399 036B  
                     l1495 056E                       l1487 055C                       l1479 054D  
                     l1591 0798                       l1583 0772                       l1575 073A  
                     l1567 0714                       l1559 06F3                       l1497 0572  
                     l1489 055E                       l1593 079E                       l1585 0782  
                     l1577 073F                       l1569 071E                       l1499 0576  
                     l1595 07A6                       l1587 0786                       l1579 0749  
                     l1597 07AD                       l1589 0790                       l1599 07B3  
                     STR_1 0026                       STR_2 001D                       STR_3 0020  
                     STR_4 0023                       STR_5 0029                       u1010 0576  
                     u1011 0575                       u1005 0568                       u1030 0587  
                     u1031 0586                       u1025 0577                       u1050 059B  
                     u1051 059A                       u1035 0583                       u1107 0745  
                     u1060 05A0                       u1061 059F                       u1045 058F  
                     u1117 0490                       u1070 07A6                       u1127 049E  
                     u1071 07A5                       u1080 07C3                       u1137 04AD  
                     u1081 07C2                       u1147 04B9                       u1157 02EA  
                     u1167 02D6                       u1097 071A                       _PEIE 005E  
      Lcd_Write_String@var 0073               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0073  
                     _main 0692                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075              __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 02DF  
        ___bmul@multiplier 0073           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 05AA                      _DEC_1 0039                      _DEC_2 0038  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188            __end_of___lldiv 0541  
          ___awdiv@divisor 0076            __end_of___lwdiv 048C                      _ENT_1 003A  
          __end_of___lwmod 0406            ___awdiv@counter 0020                      _VAL_1 003C  
                    _VAL_2 003B                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001B  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_initLCD 04DB            __end_of_dpowers 001D  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0692             __CFG_MCLRE$OFF 0000  
          __initialization 07F5               __end_of_main 07F5                     ??_main 0035  
       __size_of_Lcd_Clear 0007          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0078  
                ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0014                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                     ___bmul 02F3  
                   ___wmul 0341                  ??___awdiv 007A                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C           ___awdiv@quotient 0022  
    __end_of_Lcd_Write_Int 0341                  ??_initLCD 0073                  ??_sprintf 0023  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 02A2        ___bmul@multiplicand 0070  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 0308                 __pbssBANK0 0038  
               __pmaintext 0692                    ?___bmul 0070                    ?___wmul 0070  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0323                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 02DF  
                  _Lcd_Cmd 02CB            __size_of___bmul 0015                    ___awdiv 0541  
                  ___lldiv 04DB            __size_of___wmul 0025                    ___lwdiv 0448  
                  ___lwmod 03CC            ?_Lcd_Set_Cursor 0073                    __ptext1 048C  
                  __ptext2 0341                    __ptext3 02F3                    __ptext4 0541  
                  __ptext5 0323                    __ptext6 05AA                    __ptext7 03CC  
                  __ptext8 0448                    __ptext9 0406                    _initLCD 048C  
                  _dpowers 0013   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 05AA  
   __end_of_Lcd_Write_Char 02F3       end_of_initialization 07FC          Lcd_Write_Char@var 0072  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                _PORTBbits 0006                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@i 0078                  _Lcd_Clear 029B             __end_of___bmul 0308  
           __end_of___wmul 0366           _Lcd_Write_String 0406        start_initialization 07F5  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000     __size_of_Lcd_Write_Int 001E  
               ?_Lcd_Clear 0070                   ??___bmul 0071                   ??___wmul 0074  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 02A2  
         _I2C_Master_Write 02B4           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074  
                 ?___awdiv 0076                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0003                   ?_initLCD 0070  
            _Lcd_Write_Int 0323           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           ___wmul@product 0074                ??_Lcd_Clear 0073                __stringbase 0012  
        ___wmul@multiplier 0070             ?_Lcd_Write_Int 0070           ??_Lcd_Write_Char 0070  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0448           __size_of_Lcd_Cmd 0014  
         __size_of___awdiv 0069           __size_of___lldiv 0066             Lcd_Cmd@command 0072  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
               sprintf@val 0029            _I2C_Master_Init 0394            _I2C_Master_Read 0366  
         __size_of_initLCD 004F            _I2C_Master_Wait 02BE            _I2C_Master_Stop 02AB  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 02DF  
                 __ptext11 0308                   __ptext20 04DB                   __ptext12 029B  
                 __ptext13 02CB                   __ptext14 02B4                   __ptext15 02AB  
                 __ptext16 02A2                   __ptext17 0366                   __ptext18 02BE  
                 __ptext19 0394          __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 00E8  
            __size_of_main 0163            ??_Lcd_Write_Int 002D   __end_of_I2C_Master_Start 02AB  
 __end_of_I2C_Master_Write 02BE        Lcd_Write_Int@buffer 0030        Lcd_Write_Int@numero 0034  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D    __end_of_I2C_Master_Init 03CC  
  __end_of_I2C_Master_Read 0394    __end_of_I2C_Master_Wait 02CB    __end_of_I2C_Master_Stop 02B4  
       Lcd_Set_Cursor@posx 0074         Lcd_Set_Cursor@posy 0073                   sprintf@c 002C  
                 sprintf@f 0020           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091  
